{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/go.js","webpack:///./node_modules/highlight.js/lib/languages/vim.js","webpack:///./node_modules/highlight.js/lib/languages/javascript.js","webpack:///./src/components/DevRecordBlog.vue?d215","webpack:///./node_modules/highlight.js/lib/languages/python.js","webpack:///./node_modules/highlight.js/lib/highlight.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./src/components/DevRecordBlog.vue?1ccb","webpack:///src/components/DevRecordBlog.vue","webpack:///./src/components/DevRecordBlog.vue?523f","webpack:///./src/components/DevRecordBlog.vue","webpack:///./node_modules/highlight.js/lib/languages/shell.js","webpack:///./node_modules/highlight.js/lib/languages/bash.js"],"names":["module","exports","hljs","GO_KEYWORDS","keyword","literal","built_in","aliases","keywords","illegal","contains","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","className","variants","QUOTE_STRING_MODE","begin","end","C_NUMBER_RE","relevance","C_NUMBER_MODE","beginKeywords","excludeEnd","TITLE_MODE","lexemes","NUMBER_MODE","COMMENT","IDENT_RE","KEYWORDS","NUMBER","SUBST","TEMPLATE_STRING","BACKSLASH_ESCAPE","APOS_STRING_MODE","REGEXP_MODE","PARAMS_CONTAINS","concat","returnBegin","RE_STARTERS_RE","excludeBegin","subLanguage","skip","inherit","METHOD_GUARD","UNDERSCORE_TITLE_MODE","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DevRecordBlog_vue_vue_type_style_index_0_id_ce5f7114_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DevRecordBlog_vue_vue_type_style_index_0_id_ce5f7114_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","PROMPT","STRING","BINARY_NUMBER_RE","PARAMS","HASH_COMMENT_MODE","endsWithParent","factory","window","self","ArrayProto","objectKeys","Object","keys","languages","noHighlightRe","languagePrefixRe","fixMarkupRe","spanEndTag","options","classPrefix","tabReplace","useBR","undefined","escape","value","replace","tag","node","nodeName","toLowerCase","testRe","re","lexeme","match","exec","index","isNotHighlighted","language","test","blockLanguage","block","i","length","_class","classes","parentNode","getLanguage","split","parent","key","result","objects","Array","prototype","slice","call","arguments","forEach","obj","nodeStream","_nodeStream","offset","child","firstChild","nextSibling","nodeType","nodeValue","push","event","mergeStreams","original","highlighted","processed","nodeStack","selectStream","open","attr_str","a","map","attributes","join","close","render","stream","substring","reverse","splice","pop","substr","expand_mode","mode","cached_variants","variant","compileLanguage","reStr","source","langRe","global","RegExp","case_insensitive","compileMode","compiled","compiled_keywords","flatten","str","kw","pair","Number","lexemesRe","beginRe","endSameAsBegin","endRe","terminator_end","illegalRe","apply","c","starts","terminators","filter","Boolean","highlight","name","ignore_illegals","continuation","escapeRe","subMode","endOfMode","endsParent","isIllegal","keywordMatch","match_str","hasOwnProperty","buildSpan","classname","insideSpan","leaveOpen","noPrefix","openSpan","closeSpan","processKeywords","keyword_match","last_index","top","mode_buffer","lastIndex","processSubLanguage","explicit","continuations","highlightAuto","processBuffer","startNewMode","create","processLexeme","buffer","new_mode","end_mode","origin","returnEnd","Error","current","count","e","message","indexOf","text","languageSubset","second_best","autoDetection","fixMarkup","p1","buildClassName","prevClassName","currentLang","resultLang","trim","highlightBlock","originalStream","resultNode","document","createElementNS","innerHTML","textContent","configure","user_options","initHighlighting","called","blocks","querySelectorAll","initHighlightingOnLoad","addEventListener","registerLanguage","lang","alias","listLanguages","disableAutodetect","UNDERSCORE_IDENT_RE","NUMBER_RE","PHRASAL_WORDS_MODE","inherits","BINARY_NUMBER_MODE","CSS_NUMBER_MODE","$iterators","getKeys","redefine","hide","Iterators","wks","ITERATOR","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","NAME","Collection","proto","_vm","this","_h","$createElement","_c","_self","attrs","id","year","staticClass","_v","_s","title","month","day","domProps","articleHtmlSource","_l","to","uri","date","staticRenderFns","highlight_default","DevRecordBlogvue_type_script_lang_js_","metaInfo","meta","charset","property","content","template","chunk","vmid","titleForMeta","methods","totheTop","body","scrollTop","documentElement","getPage","_this","htmlDocUri","fetch","then","response","responseText","mounted","updated","blogContents","querySelector","titles","style","display","el","data","author","$route","params","year2","month2","day2","title2","watch","components_DevRecordBlogvue_type_script_lang_js_","component","componentNormalizer","__file","__webpack_exports__","VAR","QUOTE_STRING","APOS_STRING","_"],"mappings":"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","file":"js/chunk-6d7abfee.2e81cbb1.js","sourcesContent":["module.exports = function(hljs) {\n  var GO_KEYWORDS = {\n    keyword:\n      'break default func interface select case map struct chan else goto package switch ' +\n      'const fallthrough if range type continue for import return var go defer ' +\n      'bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 ' +\n      'uint16 uint32 uint64 int uint uintptr rune',\n    literal:\n       'true false iota nil',\n    built_in:\n      'append cap close complex copy imag len make new panic print println real recover delete'\n  };\n  return {\n    aliases: ['golang'],\n    keywords: GO_KEYWORDS,\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        variants: [\n          hljs.QUOTE_STRING_MODE,\n          {begin: '\\'', end: '[^\\\\\\\\]\\''},\n          {begin: '`', end: '`'},\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n          {begin: hljs.C_NUMBER_RE + '[dflsi]', relevance: 1},\n          hljs.C_NUMBER_MODE\n        ]\n      },\n      {\n        begin: /:=/ // relevance booster\n      },\n      {\n        className: 'function',\n        beginKeywords: 'func', end: /\\s*\\{/, excludeEnd: true,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            keywords: GO_KEYWORDS,\n            illegal: /[\"']/\n          }\n        ]\n      }\n    ]\n  };\n};","module.exports = function(hljs) {\n  return {\n    lexemes: /[!#@\\w]+/,\n    keywords: {\n      keyword:\n        // express version except: ! & * < = > !! # @ @@\n        'N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope '+\n        'cp cpf cq cr cs cst cu cuna cunme cw delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu go gr grepa gu gv ha helpf helpg helpt hi hid his ia iabc if ij il im imapc '+\n        'ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 '+\n        'profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf quita qa rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor '+\n        'so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew '+\n        'tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ '+\n        // full version\n        'Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload '+\n        'bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap '+\n        'cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor '+\n        'endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap '+\n        'imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview '+\n        'lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap '+\n        'nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext '+\n        'ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding '+\n        'scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace '+\n        'startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious '+'trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew '+\n        'vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank',\n      built_in: //built in func\n        'synIDtrans atan2 range matcharg did_filetype asin feedkeys xor argv ' +\n        'complete_check add getwinposx getqflist getwinposy screencol ' +\n        'clearmatches empty extend getcmdpos mzeval garbagecollect setreg ' +\n        'ceil sqrt diff_hlID inputsecret get getfperm getpid filewritable ' +\n        'shiftwidth max sinh isdirectory synID system inputrestore winline ' +\n        'atan visualmode inputlist tabpagewinnr round getregtype mapcheck ' +\n        'hasmapto histdel argidx findfile sha256 exists toupper getcmdline ' +\n        'taglist string getmatches bufnr strftime winwidth bufexists ' +\n        'strtrans tabpagebuflist setcmdpos remote_read printf setloclist ' +\n        'getpos getline bufwinnr float2nr len getcmdtype diff_filler luaeval ' +\n        'resolve libcallnr foldclosedend reverse filter has_key bufname ' +\n        'str2float strlen setline getcharmod setbufvar index searchpos ' +\n        'shellescape undofile foldclosed setqflist buflisted strchars str2nr ' +\n        'virtcol floor remove undotree remote_expr winheight gettabwinvar ' +\n        'reltime cursor tabpagenr finddir localtime acos getloclist search ' +\n        'tanh matchend rename gettabvar strdisplaywidth type abs py3eval ' +\n        'setwinvar tolower wildmenumode log10 spellsuggest bufloaded ' +\n        'synconcealed nextnonblank server2client complete settabwinvar ' +\n        'executable input wincol setmatches getftype hlID inputsave ' +\n        'searchpair or screenrow line settabvar histadd deepcopy strpart ' +\n        'remote_peek and eval getftime submatch screenchar winsaveview ' +\n        'matchadd mkdir screenattr getfontname libcall reltimestr getfsize ' +\n        'winnr invert pow getbufline byte2line soundfold repeat fnameescape ' +\n        'tagfiles sin strwidth spellbadword trunc maparg log lispindent ' +\n        'hostname setpos globpath remote_foreground getchar synIDattr ' +\n        'fnamemodify cscope_connection stridx winbufnr indent min ' +\n        'complete_add nr2char searchpairpos inputdialog values matchlist ' +\n        'items hlexists strridx browsedir expand fmod pathshorten line2byte ' +\n        'argc count getwinvar glob foldtextresult getreg foreground cosh ' +\n        'matchdelete has char2nr simplify histget searchdecl iconv ' +\n        'winrestcmd pumvisible writefile foldlevel haslocaldir keys cos ' +\n        'matchstr foldtext histnr tan tempname getcwd byteidx getbufvar ' +\n        'islocked escape eventhandler remote_send serverlist winrestview ' +\n        'synstack pyeval prevnonblank readfile cindent filereadable changenr ' +\n        'exp'\n    },\n    illegal: /;/,\n    contains: [\n      hljs.NUMBER_MODE,\n      {\n        className: 'string',\n        begin: '\\'', end: '\\'',\n        illegal: '\\\\n'\n      },\n\n      /*\n      A double quote can start either a string or a line comment. Strings are\n      ended before the end of a line by another double quote and can contain\n      escaped double-quotes and post-escaped line breaks.\n\n      Also, any double quote at the beginning of a line is a comment but we\n      don't handle that properly at the moment: any double quote inside will\n      turn them into a string. Handling it properly will require a smarter\n      parser.\n      */\n      {\n        className: 'string',\n        begin: /\"(\\\\\"|\\n\\\\|[^\"\\n])*\"/\n      },\n      hljs.COMMENT('\"', '$'),\n\n      {\n        className: 'variable',\n        begin: /[bwtglsav]:[\\w\\d_]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function function!', end: '$',\n        relevance: 0,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)'\n          }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /<[\\w-]+>/\n      }\n    ]\n  };\n};","module.exports = function(hljs) {\n  var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var KEYWORDS = {\n    keyword:\n      'in of if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const export super debugger as async await static ' +\n      // ECMAScript 6 modules import\n      'import from as'\n    ,\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n      'Promise'\n  };\n  var EXPRESSIONS;\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0[bB][01]+)' },\n      { begin: '\\\\b(0[oO][0-7]+)' },\n      { begin: hljs.C_NUMBER_RE }\n    ],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: []  // defined later\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ]\n  var PARAMS_CONTAINS = SUBST.contains.concat([\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n\n  return {\n    aliases: ['js', 'jsx'],\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      {\n        className: 'meta',\n        begin: /^#!/, end: /$/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBER,\n      { // object attr container\n        begin: /[{,]\\s*/, relevance: 0,\n        contains: [\n          {\n            begin: IDENT_RE + '\\\\s*:', returnBegin: true,\n            relevance: 0,\n            contains: [{className: 'attr', begin: IDENT_RE, relevance: 0}]\n          }\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: IDENT_RE\n                  },\n                  {\n                    begin: /\\(\\s*\\)/,\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // E4X / JSX\n            begin: /</, end: /(\\/\\w+|\\w+\\/)>/,\n            subLanguage: 'xml',\n            contains: [\n              {begin: /<\\w+\\s*\\/>/, skip: true},\n              {\n                begin: /<\\w+/, end: /(\\/\\w+|\\w+\\/)>/, skip: true,\n                contains: [\n                  {begin: /<\\w+\\s*\\/>/, skip: true},\n                  'self'\n                ]\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: PARAMS_CONTAINS\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      hljs.METHOD_GUARD,\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n};","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevRecordBlog.vue?vue&type=style&index=0&id=ce5f7114&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevRecordBlog.vue?vue&type=style&index=0&id=ce5f7114&scoped=true&lang=css&\"","module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'and elif is global as in if from raise for except finally print import pass return ' +\n      'exec else break not with class assert yield try while continue del or def lambda ' +\n      'async await nonlocal|10 None True False',\n    built_in:\n      'Ellipsis NotImplemented'\n  };\n  var PROMPT = {\n    className: 'meta',  begin: /^(>>>|\\.\\.\\.) /\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: /\\{/, end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /(u|b)?r?'''/, end: /'''/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(u|b)?r?\"\"\"/, end: /\"\"\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(fr|rf|f)'''/, end: /'''/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT, SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"\"\"/, end: /\"\"\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT, SUBST]\n      },\n      {\n        begin: /(u|r|ur)'/, end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)\"/, end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /(b|br)'/, end: /'/\n      },\n      {\n        begin: /(b|br)\"/, end: /\"/\n      },\n      {\n        begin: /(fr|rf|f)'/, end: /'/,\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      {begin: hljs.BINARY_NUMBER_RE + '[lLjJ]?'},\n      {begin: '\\\\b(0o[0-7]+)[lLjJ]?'},\n      {begin: hljs.C_NUMBER_RE + '[lLjJ]?'}\n    ]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    contains: ['self', PROMPT, NUMBER, STRING]\n  };\n  SUBST.contains = [STRING, NUMBER, PROMPT];\n  return {\n    aliases: ['py', 'gyp'],\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      STRING,\n      hljs.HASH_COMMENT_MODE,\n      {\n        variants: [\n          {className: 'function', beginKeywords: 'def'},\n          {className: 'class', beginKeywords: 'class'}\n        ],\n        end: /:/,\n        illegal: /[${=;\\n,]/,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          PARAMS,\n          {\n            begin: /->/, endsWithParent: true,\n            keywords: 'None'\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/, end: /$/\n      },\n      {\n        begin: /\\b(print|exec)\\(/ // don’t highlight keywords-turned-functions in Python 3\n      }\n    ]\n  };\n};","/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n(function(factory) {\n\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window ||\n                     typeof self === 'object' && self;\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  if(typeof exports !== 'undefined') {\n    factory(exports);\n  } else if(globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({});\n\n    // Finally register the global hljs with AMD.\n    if(typeof define === 'function' && define.amd) {\n      define([], function() {\n        return globalObject.hljs;\n      });\n    }\n  }\n\n}(function(hljs) {\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys;\n\n  // Global internal variables used within the highlight.js library.\n  var languages = {},\n      aliases   = {};\n\n  // Regular expressions used throughout the highlight.js library.\n  var noHighlightRe    = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe      = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm;\n\n  var spanEndTag = '</span>';\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    match = languagePrefixRe.exec(classes);\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i]\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  function inherit(parent) {  // inherit(parent, override_obj, override_obj, ...)\n    var key;\n    var result = {};\n    var objects = Array.prototype.slice.call(arguments, 1);\n\n    for (key in parent)\n      result[key] = parent[key];\n    objects.forEach(function(obj) {\n      for (key in obj)\n        result[key] = obj[key];\n    });\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3)\n          offset += child.nodeValue.length;\n        else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset !== highlighted[0].offset) {\n        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n\n      if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n\n      ... which is collapsed to:\n      */\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {return ' ' + a.nodeName + '=\"' + escape(a.value).replace('\"', '&quot;') + '\"';}\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substring(processed, stream[0].offset));\n      processed = stream[0].offset;\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function expand_mode(mode) {\n    if (mode.variants && !mode.cached_variants) {\n      mode.cached_variants = mode.variants.map(function(variant) {\n        return inherit(mode, {variants: null}, variant);\n      });\n    }\n    return mode.cached_variants || (mode.endsWithParent && [inherit(mode)]) || [mode];\n  }\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n        return (re && re.source) || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(\n        reStr(value),\n        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n      );\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled)\n        return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n          str.split(' ').forEach(function(kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords === 'string') { // string\n          flatten('keyword', mode.keywords);\n        } else {\n          objectKeys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n        mode.keywords = compiled_keywords;\n      }\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin)\n          mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (mode.endSameAsBegin)\n          mode.end = mode.begin;\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = /\\B|\\b/;\n        if (mode.end)\n          mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end)\n          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null)\n        mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      mode.contains = Array.prototype.concat.apply([], mode.contains.map(function(c) {\n        return expand_mode(c === 'self' ? mode : c)\n      }));\n      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators =\n        mode.contains.map(function(c) {\n          return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n        })\n        .concat([mode.terminator_end, mode.illegal])\n        .map(reStr)\n        .filter(Boolean);\n      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(/*s*/) {return null;}};\n    }\n\n    compileMode(language);\n  }\n\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n\n  */\n  function highlight(name, value, ignore_illegals, continuation) {\n\n    function escapeRe(value) {\n      return new RegExp(value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n    }\n\n    function subMode(lexeme, mode) {\n      var i, length;\n\n      for (i = 0, length = mode.contains.length; i < length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          if (mode.contains[i].endSameAsBegin) {\n            mode.contains[i].endRe = escapeRe( mode.contains[i].beginRe.exec(lexeme)[0] );\n          }\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan    = '<span class=\"' + classPrefix,\n          closeSpan   = leaveOpen ? '' : spanEndTag\n\n      openSpan += classname + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n\n      if (!top.keywords)\n        return escape(mode_buffer);\n\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substring(last_index, match.index));\n        keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ?\n                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += (top.subLanguage != null ? processSubLanguage() : processKeywords());\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className? buildSpan(mode.className, '', true): '';\n      top = Object.create(mode, {parent: {value: top}});\n    }\n\n    function processLexeme(buffer, lexeme) {\n\n      mode_buffer += buffer;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n      if (end_mode) {\n        var origin = top;\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n        do {\n          if (top.className) {\n            result += spanEndTag;\n          }\n          if (!top.skip && !top.subLanguage) {\n            relevance += top.relevance;\n          }\n          top = top.parent;\n        } while (top !== end_mode.parent);\n        if (end_mode.starts) {\n          if (end_mode.endSameAsBegin) {\n            end_mode.starts.endRe = end_mode.endRe;\n          }\n          startNewMode(end_mode.starts, '');\n        }\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top))\n        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '', current;\n    for(current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match, count, index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match)\n          break;\n        count = processLexeme(value.substring(index, match.index), match[0]);\n        index = match.index + count;\n      }\n      processLexeme(value.substr(index));\n      for(current = top; current.parent; current = current.parent) { // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message && e.message.indexOf('Illegal') !== -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n  */\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {\n      var current = highlight(name, text, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n  */\n  function fixMarkup(value) {\n    return !(options.tabReplace || options.useBR)\n      ? value\n      : value.replace(fixMarkupRe, function(match, p1) {\n          if (options.useBR && match === '\\n') {\n            return '<br>';\n          } else if (options.tabReplace) {\n            return p1.replace(/\\t/g, options.tabReplace);\n          }\n          return '';\n      });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result   = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n\n    if (isNotHighlighted(language))\n        return;\n\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    originalStream = nodeStream(node);\n    if (originalStream.length) {\n      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    if (lang.aliases) {\n      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  function autoDetection(name) {\n    var lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.autoDetection = autoDetection;\n  hljs.inherit = inherit;\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit(\n      {\n        className: 'comment',\n        begin: begin, end: end,\n        contains: []\n      },\n      inherits || {}\n    );\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' +\n      '%|em|ex|ch|rem'  +\n      '|vw|vh|vmin|vmax' +\n      '|cm|mm|in|pt|pc|px' +\n      '|deg|grad|rad|turn' +\n      '|s|ms' +\n      '|Hz|kHz' +\n      '|dpi|dpcm|dppx' +\n      ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/, end: /\\]/,\n        relevance: 0,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\n  return hljs;\n}));\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"blog\"}},[(_vm.year !== undefined)?_c('div',{attrs:{\"id\":\"blog-contents-element\"}},[_c('article',[_c('div',{staticClass:\"inner-title-container\"},[_c('h1',{attrs:{\"id\":\"inner-title\"}},[_vm._v(_vm._s(_vm.title))]),_c('div',{attrs:{\"id\":\"inner-date\"}},[_vm._v(_vm._s(_vm.year)+\".\"+_vm._s(_vm.month)+\".\"+_vm._s(_vm.day))])]),_c('div',{attrs:{\"id\":\"article-content\"},domProps:{\"innerHTML\":_vm._s(_vm.articleHtmlSource)}})]),_c('hr')]):_c('div',_vm._l((_vm.index),function(i){return _c('div',{key:i,staticClass:\"blog-list-element\"},[_c('router-link',{staticClass:\"blog-title\",attrs:{\"to\":i.uri}},[_vm._v(_vm._s(i.title))]),_c('span',{staticClass:\"blog-date\"},[_vm._v(_vm._s(i.date))]),_c('hr',{staticClass:\"separate-line\"})],1)}))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"blog\">\n    <div id=\"blog-contents-element\" v-if=\"year !== undefined\">\n      <article>\n        <div class=\"inner-title-container\">\n          <h1 id=\"inner-title\">{{ title }}</h1>\n          <div id=\"inner-date\">{{ year }}.{{ month }}.{{ day }}</div>\n        </div>\n        <div id=\"article-content\" v-html=\"articleHtmlSource\"></div>\n      </article>\n      <hr>\n    </div>\n    <div v-else>\n      <div class=\"blog-list-element\" v-for=\"i in index\" :key=\"i\">\n        <router-link :to=\"i.uri\" class=\"blog-title\">{{ i.title }}</router-link>\n        <span class=\"blog-date\">{{ i.date }}</span>\n\t\t\t\t<hr class=\"separate-line\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport HighlightJS from 'highlight.js/lib/highlight.js'\n//var HighlightJS = require(\"highlight.js/lib/highlight.js\");\n\n// Add languages manually to decrease size of my website\nHighlightJS.registerLanguage('vim', require('highlight.js/lib/languages/vim'));\nHighlightJS.registerLanguage('bash', require('highlight.js/lib/languages/bash'));\nHighlightJS.registerLanguage('python', require('highlight.js/lib/languages/python'));\nHighlightJS.registerLanguage('vim', require('highlight.js/lib/languages/vim'));\nHighlightJS.registerLanguage('shell', require('highlight.js/lib/languages/shell'));\nHighlightJS.registerLanguage('go', require('highlight.js/lib/languages/go'));\nHighlightJS.registerLanguage('javascript', require('highlight.js/lib/languages/javascript'));\n\n// eslint-disable-next-line\nimport _ from 'highlight.js/styles/xcode.css'\n\nexport default {\n  name: 'devRecordBlog',\n  metaInfo () {\n    if(this.title === undefined) {\n      return {\n        title: 'Blog',\n        meta: [\n          { charset: 'utf-8' },\n          {\n            'property': 'og:title',\n            'content': 'Blog',\n            'template': chunk => `${chunk} :: bkshin`,\n            'vmid': 'og:title'\n          },\n          {\n            'property': 'og:description',\n            'content': 'Article List',\n            'template': chunk => `${chunk}`,\n            'vmid': 'og:description'\n          },\n        ]\n      }\n    } else {\n      return {\n        title: this.titleForMeta,\n        meta: [\n          { charset: 'utf-8' },\n          {\n            'property': 'og:title',\n            'content': this.title,\n            'template': chunk => `${chunk} :: bkshin`,\n            'vmid': 'og:title'\n          },\n          {\n            'property': 'og:description',\n            'content': 'Thank you for reading my article ',\n            'template': chunk => `${chunk}`,\n            'vmid': 'og:description'\n          }\n        ]\n      }\n    }\n  },\n  \n  methods: {\n    totheTop: function() {\n      document.body.scrollTop = 0; // For Safari\n      document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n    },\n    getPage: function() {\n      if (this.year === undefined) {\n        return;\n      }\n\n      // Load page after the scroll is on the top\n      this.totheTop();\n\n      var htmlDocUri = \n        '/blog_contents/dev_record/'\n        + this.year + '/'\n        + this.month + '/'\n        + this.day + '/'\n        + this.title + '.html';\n      fetch(htmlDocUri)\n        .then(response => response.text())\n        .then(responseText => this.articleHtmlSource = responseText);\n    }\n  }, \n  mounted: function() {\n    this.getPage();\n  },\n\n  updated: function() {\n    // Change file name to document's title\n    // When the page is an artice page, get blogContents\n    var blogContents = document.querySelector('#blog-contents-element');\n    if(blogContents == null){\n      //this.toTheTop();\n      return;\n    }\n    // Now, below scripts are for displaying an article,\n    // Not the blog main page which has lists of name of articles.\n    // Find all h1 tags, and choose second h1. It is real title of this doc.\n    var titles = blogContents.querySelectorAll('h1');\n    if(titles.length <= 1) {\n      return;\n    } else {\n      // Title exists\n      var title = blogContents.querySelector('#inner-title')\n      title.innerHTML = titles[1].innerHTML;\n      titles[1].style.display = \"none\";\n      // It is for og:title\n      this.titleForMeta = title.innerHTML;\n    }\n    \n    // Find all code block and apply syntax highlighting\n    [].forEach.call(document.querySelectorAll('code'), function(el) {\n      HighlightJS.highlightBlock(el);\n    });\n  }, \n  \n  data() {\n    return {\n      // __INSERTION_POSITION__ // DONT CHANGE!!\n      index: \n[{\"title\":\"BLOG - 12. EC2 git Hook 설정\",\"author\":\"\\u003cstrong\\u003eAWS EC2 인스턴스 생성\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003e블로그 서비스를 구현하기 위해서는 서버가 필요합니다. 여기서는 AWS EC2를 활용할 것입니다. AWS EC2가 무엇인지는 본 링크를 참고하시기 바랍니다. \\u003ca href=\\\"https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/concepts.html\\\"\\u003e(Reference1)\\u003c/a\\u003e 쉽게 말하자면 EC2는 가상의 컴퓨팅 파워를 제공해줍니다. 어떤 프로그램을 돌리기 위해서는 컴퓨터가 필요합니다. (\\u003cem\\u003e당연한 말이지만..\\u003c/em\\u003e) 언제 어디서든 블로그에 접속하기 위해서는 24시간 돌아가는 컴퓨터 (서버)에 블로그 서비스가 구축되어 있어야 합니다. 이는 물리적인 서버 컴퓨터를 활용할 수도 있지만 비용적으로 비쌉니다. 따라서 저렴한 가격에 물리적인 제약없이도 컴퓨팅 파워를 제공받을 수 있는 곳이 바로 AWS입니다. AWS는 다양한 서비스가 있지만 그 중 EC2를 활용할 것입니다. (추후에는 S3도 사용할 예정입니다.)\\u003c/p\\u003e\\n\\u003cp\\u003e우선, aws.amazon.com에 접속해 AWS 계정을 생성한 뒤 EC2 인스턴스를 생성합니다. 이때 리전은 서울로 설정해야합니다. 인스턴스 생성시 아래 사항 순으로 선택합니다.\\u003c/p\\u003e\\n\\u003col type=\\\"1\\\"\\u003e\\n\\u003cli\\u003eAMI선택: Amazon Linux Amazon Linux 2 AMI (HVM), SSD Volume Type\\u003cbr /\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e인스턴스 유형 선택: t2 micro (프리 티어 사용 가능)\\u003cbr /\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e(인스턴스 구성 ~ 태그 추가까지는 그냥 넘어가고)\\u003cbr /\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e보안 그룹 구성: 규칙 추가를 눌러 HTTP, HTTPS, SSH를 추가해줍니다. (HTTP 포트는 80, 소스는 default 값인 0.0.0.0/0, ::/0, HTTPS 포트는 443, 소스는 default 값인 0.0.0.0/0, ::/0, SSH 포트는 22, 소스는 default 값인 0.0.0.0/0, ::/0)\\u003cbr /\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e새 키 페어 생성 및 키 페어 다운로드 후 인스턴스 시작을 합니다. (키 페이 이름은 알아서 정하면 되고, 저는 temp.pem으로 생성했습니다.)\\u003c/li\\u003e\\n\\u003c/ol\\u003e\\n\\u003ch3 id=\\\"putty로-ec2-인스턴스에-접속\\\"\\u003ePuTTY로 EC2 인스턴스에 접속\\u003c/h3\\u003e\\n\\u003cp\\u003e.ssh 디렉토리에 키페어를 저장해두고 그 키페어를 이용해서 EC2 인스턴스에 접속할 것입니다. 홈 디렉토리에서\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003echmod 700 .ssh\\ncd .ssh\\nv temp.pem # 각자의 키페어 이름으로\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003etemp.pem에 아까 다운받았던 키페어를 그대로 복사 붙여넣기 합니다. 내 PC에 있는 temp.pem을 그냥 열면 열리지 않기 때문에 Visual Studio Code나 메모장 등으로 열어서 전체를 복사 붙여넣기 하면 됩니다. 키페어는 \\u003ccode\\u003e-----BEGIN RSA PRIVATE KEY-----\\u003c/code\\u003e 로 시작하는 부분부터 끝까지 전체를 그대로 복사해야합니다. 한글자라도 틀리거나 스페이스라도 틀리면 인식을 못합니다.\\u003c/p\\u003e\\n\\u003cp\\u003e키페어의 권한도 변경합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003echmod 400 temp.pem\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e다시 홈 디렉토리로 가서 ec2로 접속을 합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003essh ec2-user@13.125.232.34 -i ~/.ssh/temp.pem\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e\\u003cspan class=\\\"citation\\\" data-cites=\\\"뒤의\\\"\\u003e@뒤의\\u003c/span\\u003e IP 주소는 EC2인스턴스 창 하단에 IPv4 퍼블릭 IP에서 볼 수 있습니다. '내가 만든 AWS EC2 인스턴스 IP에 ssh로 접속하는데 키페어는 temp.pem을 사용하겠다'라는 뜻입니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/02/18/12_1.PNG\\\" alt=\\\"AWS EC2 접속\\\" /\\u003e\\u003cfigcaption\\u003eAWS EC2 접속\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003e이런 화면이 뜨면 정상적으로 접속이 된 겁니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"ec2-git-계정-생성\\\"\\u003eEC2 git 계정 생성\\u003c/h3\\u003e\\n\\u003cp\\u003eAWS EC2 git 계정을 생성해보겠습니다. \\u003ccode\\u003euseradd\\u003c/code\\u003e를 통해 새로운 계정을 생성해줄 수 있습니다. \\u003ca href=\\\"https://rootblog.tistory.com/2\\\"\\u003e(Reference2)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo useradd -m -s /usr/bin/git-shell git\\nsudo vi /etc/sudoers\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003esudoers에 NOPASSWD를 추가해줍니다. 이는 패스워드 없이 sudo를 쓸 수 있도록 합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003egit ALL=(ALL) NOPASSWD: ALL\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo -u git bash\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 명령어는 bash로 git 계정에 들어가겠다는 뜻입니다. NOPASSWD 설정을 해줬기 때문에 패스워드 없이도 sudo가 작동합니다.\\u003c/p\\u003e\\n\\u003cp\\u003e그 다음, EC2 루트 계정에 있는 authorized_keys를 git 계정으로 옮깁니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd\\nmkdir .ssh\\nchmod 700 .ssh\\ncd .ssh\\nsudo cp /home/ec2-user/.ssh/authorized_keys .\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003ch3 id=\\\"git-hook-설정\\\"\\u003eGit Hook 설정\\u003c/h3\\u003e\\n\\u003cp\\u003e이제 Git hook을 설정해줄 것입니다. Git hook은 Git 으로 어떤 이벤트가 push되면 특정 스크립트가 실행되도록 합니다. \\u003ca href=\\\"https://git-scm.com/book/ko/v1/Git%EB%A7%9E%EC%B6%A4-Git-%ED%9B%85\\\"\\u003e(Reference3)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003els\\ncd ..\\nmkdir terrace_hook\\ncd terrace_hook/\\n# git 설치\\nsudo yum -y install git\\n# 워킹 디렉토리가 없는 빈 저장소\\ngit init --bare\\nls -al\\ncd hooks\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003egit init --bare\\u003c/code\\u003e은 워킹 디렉토리가 없는 빈 저장소를 만듭니다. \\u003ca href=\\\"https://git-scm.com/book/ko/v1/Git-%EC%84%9C%EB%B2%84-%EC%84%9C%EB%B2%84%EC%97%90-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\\\"\\u003e(Reference4)\\u003c/a\\u003e hooks 디렉토리를 보면 hook과 관련된 각종 샘플을 볼 수 있습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003etouch post-receive\\n# post-receive에 실행 권한 추가\\nchomod +x post-receive\\nls -al\\nvi post-receive\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003epost-receive란 git push 후에 자동으로 실행되는 스크립트를 의미합니다. 아래 코드를 그대로 복사 붙여넣기 합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003e# Application Name:\\nexport DEPLOY_APP_NAME=`whoami`\\n\\n# This is the root deploy dir.\\nexport DEPLOY_ROOT=\\u0026quot;${HOME}/terrace_deploy\\u0026quot;\\n\\n# When receiving a new git push, the received branch gets compared to this one.\\n# If you do not need this, just add a comment\\nexport DEPLOY_ALLOWED_BRANCH=\\u0026quot;master\\u0026quot;\\n\\n# You could use this to do a backup before updating to be able to do a quick rollback.\\n# If you need this just delete the comment and modify to your needs\\n#PRE_UPDATE_CMD=\\u0026#39;cd ${DEPLOY_ROOT} \\u0026amp;\\u0026amp; backup.sh\\u0026#39;\\n\\n# Use this to do update tasks and maybe service restarts\\n# If you need this just delete the comment and modify to your needs\\nPOST_UPDATE_CMD=\\u0026#39;cd ${DEPLOY_ROOT} \\u0026amp;\\u0026amp; make update\\u0026#39;\\n\\nPROJECT_NAME=\\u0026#39;terrace\\u0026#39;\\nRESTART_CMD=\\u0026#39;sudo systemctl restart \\u0026quot;${PROJECT_NAME}.service\\u0026quot; \\u0026amp;\\u0026amp; sudo systemctl status \\u0026quot;${PROJECT_NAME}.service\\u0026quot;\\u0026#39;\\n\\n###########################################################################################\\n\\nexport GIT_DIR=\\u0026quot;$(cd $(dirname $(dirname $0));pwd)\\u0026quot;\\nexport GIT_WORK_TREE=\\u0026quot;${DEPLOY_ROOT}\\u0026quot;\\nIP=\\u0026quot;$(ip addr show eth0 | grep \\u0026#39;inet \\u0026#39; | cut -f2 | awk \\u0026#39;{ print $2}\\u0026#39;)\\u0026quot;\\n\\necho \\u0026quot;githook: $(date): Welcome to \\u0026#39;$(hostname -f)\\u0026#39; (${IP})\\u0026quot;\\necho\\n\\n# Make sure directory exists. Maybe its deployed for the first time.\\nmkdir -p \\u0026quot;${DEPLOY_ROOT}\\u0026quot;\\n\\n# Loop, because it is possible to push more than one branch at a time. (git push --all)\\nwhile read oldrev newrev refname\\ndo\\n\\n    export DEPLOY_BRANCH=$(git rev-parse --symbolic --abbrev-ref $refname)\\n    export DEPLOY_OLDREV=\\u0026quot;$oldrev\\u0026quot;\\n    export DEPLOY_NEWREV=\\u0026quot;$newrev\\u0026quot;\\n    export DEPLOY_REFNAME=\\u0026quot;$refname\\u0026quot;\\n\\n    if [ \\u0026quot;$DEPLOY_NEWREV\\u0026quot; = \\u0026quot;0000000000000000000000000000000000000000\\u0026quot; ]; then\\n        echo \\u0026quot;githook: This ref has been deleted\\u0026quot;\\n        exit 1\\n    fi\\n\\n    if [ ! -z \\u0026quot;${DEPLOY_ALLOWED_BRANCH}\\u0026quot; ]; then\\n        if [ \\u0026quot;${DEPLOY_ALLOWED_BRANCH}\\u0026quot; != \\u0026quot;$DEPLOY_BRANCH\\u0026quot; ]; then\\n            echo \\u0026quot;githook: Branch \\u0026#39;$DEPLOY_BRANCH\\u0026#39; of \\u0026#39;${DEPLOY_APP_NAME}\\u0026#39; application will not be deployed. Exiting.\\u0026quot;\\n            exit 1\\n        fi\\n    fi\\n\\n    if [ ! -z \\u0026quot;${PRE_UPDATE_CMD}\\u0026quot; ]; then\\n       echo\\n       echo \\u0026quot;githook: PRE UPDATE (CMD: \\u0026#39;${PRE_UPDATE_CMD}\\u0026#39;):\\u0026quot;\\n       eval $PRE_UPDATE_CMD || exit 1\\n    fi\\n\\n    # Make sure GIT_DIR and GIT_WORK_TREE is correctly set and \\u0026#39;export\\u0026#39;ed. Otherwhise\\n    # these two environment variables could also be passed as parameters to the git cli\\n    echo \\u0026quot;githook: I will deploy \\u0026#39;${DEPLOY_BRANCH}\\u0026#39; branch of the \\u0026#39;${DEPLOY_APP_NAME}\\u0026#39; project to \\u0026#39;${DEPLOY_ROOT}\\u0026#39;\\u0026quot;\\n    git checkout -f \\u0026quot;${DEPLOY_BRANCH}\\u0026quot; || exit 1\\n    git reset --hard \\u0026quot;$DEPLOY_NEWREV\\u0026quot; || exit 1\\n\\n    if [ ! -z \\u0026quot;${POST_UPDATE_CMD}\\u0026quot; ]; then\\n       echo\\n       echo \\u0026quot;githook: POST UPDATE (CMD: \\u0026#39;${POST_UPDATE_CMD}\\u0026#39;):\\u0026quot;\\n       eval $POST_UPDATE_CMD || exit 1\\n    fi\\n\\n    if [ ! -z \\u0026quot;${RESTART_CMD}\\u0026quot; ]; then\\n       echo\\n       echo \\u0026quot;githook: RESTART UPDATE (CMD: \\u0026#39;${RESTART_CMD}\\u0026#39;):\\u0026quot;\\n       eval $RESTART_CMD || exit 1\\n    fi\\n\\ndone\\n\\necho\\necho \\u0026quot;githook: $(date): See you soon at \\u0026#39;$(hostname -f)\\u0026#39; (${IP})\\u0026quot;\\nexit 0\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 코드를 저장한 후에 bash 창에서 아래와 같이 로그아웃해 로컬 계정으로 갑니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003eexit\\nlogout\\n# 로컬 계정에서\\ncd .ssh\\nv config\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003econfig 파일에 아래 코드를 넣어줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003eHost 13.125.232.34\\n    HostName 13.125.232.34\\n        IdentityFile ~/.ssh/temp.pem\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eIP 주소 및 키페어는 개별 EC2 IP 및 키페어를 넣어주면 됩니다. 그 다음 권한을변경해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003echmod 600 config\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이제는 \\u003ccode\\u003essh ec2-user@13.125.232.34\\u003c/code\\u003e만 해도 EC2로 접속이 됩니다. 설정해주기 전에는 \\u003ccode\\u003essh ec2-user@13.125.232.34 -i ~/.ssh/temp.pem\\u003c/code\\u003e을 통해 접속을 했는데 훨씬 간단해졌습니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/18/blog-ec2GitHook/\",\"date\":\"2019/02/18\"},{\"title\":\"BLOG - 11. Github 연결\",\"author\":\"지금까지 블로그 기본 뼈때를 만들고 빌드까지 했습니다. 추후에는 AWS를 통해서 블로그를 띄울 겁니다. 그에 앞서 본 챕터에서는 github에 연결하는 방법에 대해 배워볼 것입니다. github 연결법을 이미 알고 계신 분은 다음 챕터로 넘어가셔도 됩니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"github\\\"\\u003e\\u003cstrong\\u003eGithub\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003e우선 git은 github을 이용할 것입니다. github에 repository를 하나 생성합니다. terrace 디렉토리에서는 \\u003ccode\\u003e.gitignore\\u003c/code\\u003e에 \\u003ccode\\u003ebin\\u003c/code\\u003e을 추가해줍니다. \\u003ccode\\u003e.gitignore\\u003c/code\\u003e에 있는 디렉토리 혹은 파일은 git의 영향을 받지 않습니다. 이제 git을 만들어줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003egit init\\ngit config --global user.name \\u0026quot;bkshin\\u0026quot;\\ngit config --global user.email \\u0026quot;werooring@gmail.com\\u0026quot;\\ngit add -A\\ngit commit\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e커밋 메시지는 \\u003ccode\\u003efirtst commit\\u003c/code\\u003e이라고 찍습니다. 다만 그 이후 commit은 \\u003ca href=\\\"https://www.huskyhoochu.com/issue-based-version-control-101\\\"\\u003e(Reference1)\\u003c/a\\u003e을 참고해서 작성하면 됩니다. 이론편뿐만 아니라 실전편까지 봐야합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003egit remote add origin git@github.com:BaekKyunShin/Terrace_example.git\\ngit push -u origin master\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이렇게 하면 publickey가 없다고 permission denied가 뜰 겁니다. git@github.com~ 부분이 SSH 주소입니다. Git SSH 공개키를 만들어야 push를 할 수 있습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003essh-keygen\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e을 해주고 passphrase 만 두번 입력해줍니다. 맨 처음 나오는 'Enter file in which to save the key'는 무시하고 엔터만 쳐도 됩니다. \\u003ccode\\u003e~/.ssh\\u003c/code\\u003e 디렉토리에서 id_rsa.pub가 생성된 걸 볼 수 있습니다. 이것이 publickey입니다. \\u003ca href=\\\"https://git-scm.com/book/ko/v1/Git-%EC%84%9C%EB%B2%84-SSH-%EA%B3%B5%EA%B0%9C%ED%82%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0\\\"\\u003e(Reference2)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecat ~/.ssh/id_rsa.pub\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e를 치면 ssh-rsa로 시작하는 publickey가 나올 것입니다. 이것을 그대로 복사합니다. github 맨 오른쪽 위 메뉴를 클릭하고 settings을 누릅니다. 왼쪽 personal settings에서 SSH and GPG Keys를 누릅니다. New SSH Key를 클릭한 뒤 title을 자유롭게 설정하고 아래 Key에 방금 복사한 publickey 내용을 그대로 붙여넣기 한 뒤 저장합니다.\\u003cbr /\\u003epublickey를 등록했으니 이제 github으로 push 해봅시다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003egit push -u origin master\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003epassphrase를 치면 정상적으로 push가 되는 것을 볼 수 있습니다. 여기서 bin 디렉토리가 push되었다면 잘못된 것입니다. bin은 .gitinore에 추가가 되어있어야 하며 정상적으로 추가되었다면 bin은 push가 안 됩니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/02/17/11_1.PNG\\\" alt=\\\"github Repository\\\" /\\u003e\\u003cfigcaption\\u003egithub Repository\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/17/blog-githubPush/\",\"date\":\"2019/02/17\"},{\"title\":\"BLOG - 10. Shell Script, Makefile\",\"author\":\"\\u003cstrong\\u003eShell Script를 활용한 npm 빌드\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003e홈 디렉토리에서\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd terrace/frontend\\nvi update.sh\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eupdate.sh에 아래 코드를 추가하고 저장해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd home\\nnpm run build\\nrm –rf ../../web_root\\ncp –r dist ../../web_root\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 코드는 home 디렉토리로 들어가 빌드를 해준 뒤 기존의 web_root 디렉토리를 삭제해주고 빌드의 결과물이 담기는 dist 디렉토리를 다시 web_root로 카피하는 명령어입니다. 여기서 sh 파일은 shell script 파일입니다. shell script란 line by line의 코드를 자동으로 실행해주는 프로그램입니다. 즉, \\u003ccode\\u003e./update.sh\\u003c/code\\u003e를 해줘서 shell script를 실행해주면 위 4줄의 코드를 순차적으로 자동 실행됩니다. 여러 줄의 코드를 일일이 입력하는 게 번거로울 때 유용합니다. 이제 frontend 디렉토리에 있는 update.sh를 실행해보겠습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003e./update.sh\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003epermission denied가 뜰 겁니다. 권한 설정을 안 해줘서 그렇습니다. 아래와 같이 권한 설정을 변경합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003echmod 755 update.sh\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이제 \\u003ccode\\u003e./update.sh\\u003c/code\\u003e를 하면 자동으로 빌드가 되고 빌드 결과물이 web_root에 담길 겁니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"makefile를-활용한-루트-핸들러-빌드\\\"\\u003eMakefile를 활용한 루트 핸들러 빌드\\u003c/h3\\u003e\\n\\u003cp\\u003eMakefile은 shell script랑 비슷한 개념으로 보면 됩니다. 다만, Makefile은 변경된 사항만 반영해서 빠르게 실행을 해줍니다. 굉장히 많은 소스코드가 있다고 할 때 그 모든 코드를 하나 하나 컴파일 하려면 시간이 꽤 많이 들 것입니다. 변경된 소스코드만 알아서 컴파일 해준다면 훨씬 빠를 겁니다. 이럴 때 Makefile을 사용하는 것입니다. 아래는 Makefile 강좌에서 퍼온 make 유틸의 목적을 설명하는 글입니다. (20년도 더 된 강좌인데 수학의 정석, 성문 영어 같은 느낌이네요..)\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eThe purpose of the \\u003cem\\u003emake\\u003c/em\\u003e utility is to determine automatically which pieces of a large program need to be recompiled, and issue the commands to recompile them.\\u003c/strong\\u003e \\u003ca href=\\\"https://wiki.kldp.org/KoreanDoc/html/GNU-Make/GNU-Make-1.html\\\"\\u003e(Reference1)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003enpm run serve\\u003c/code\\u003e에도 Makefile 개념이 있다고 보면 되는데, 처음 \\u003ccode\\u003enpm run serve\\u003c/code\\u003e를 할 땐 시간이 오래 걸리지만 한번 실행된 뒤에 변경 사항을 반영하는 것은 빠르게 처리됩니다.\\u003cbr /\\u003e\\u003cbr\\u003e 이제, terrace 디렉토리에서 Makefile을 만들어줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003evi Makefile\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cpre class=\\\"makefile\\\"\\u003e\\u003ccode\\u003erun:\\n    ./bin/terrace\\n\\nbuild:\\n    go build -x -o ./bin/terrace ./src\\n    sudo setcap CAP_NET_BIND_SERVICE=+eip ./bin/terrace\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 Makefile의 의미는 \\u003ccode\\u003emake run\\u003c/code\\u003e 을 하면 \\u003ccode\\u003e./bin/terrace\\u003c/code\\u003e가 실행되고, \\u003ccode\\u003emake build\\u003c/code\\u003e를 하면 아래 두 줄이 실행된다는 것입니다. 인자를 아무것도 안주고 \\u003ccode\\u003emake\\u003c/code\\u003e만 하면 맨 위에 있는 \\u003ccode\\u003emake run\\u003c/code\\u003e을 실행합니다. 위 코드를 그대로 복사 붙여넣기 하면 Makefile이 실행 안 될 수도 있습니다. Makefile에서 실행되는 코드는 반드시 TAB을 해줘야하는데 그대로 복사 붙여넣기 하면 TAB이 아니라 띄어쓰기로 인식할 수 있기 때문입니다. 반드시 ./bin/terrace 왼쪽 부분과 build: 아랫줄은 TAB을 해줘야 합니다.\\u003cbr /\\u003e\\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"makefile\\\"\\u003e\\u003ccode\\u003ego build -x -o ./bin/terrace ./src\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이 부분에서 -x는 build하는 과정에 대한 설명을 자세히 보여달라는 것입니다. -o는 output의 약자입니다. build 결과물인 실행 파일을 ./bin/terrace로 저장해달라는 것이고, ./src는 src 디렉토리에 있는 go 소스코드 (루트 핸들러가 들어 있는 main.go)를 읽어오는 부분입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e즉, src 디렉토리의 main.go를 빌드해서 ./bin/terrace 로 저장하라는 뜻입니다. 여기서는 \\u003ccode\\u003emake run\\u003c/code\\u003e하기 전에 \\u003ccode\\u003emake build\\u003c/code\\u003e부터 해줘야 합니다. 이전 글에서 설명한 것처럼 sudo 권한 없이 ./bin/terrace를 실행하기 위해서는 \\u003ccode\\u003esudo setcap CAP_NET_BIND_SERVICE=+eip ./bin/terrace\\u003c/code\\u003e을 해줘야 하기 때문입니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"최종-디렉토리-구성\\\"\\u003e최종 디렉토리 구성\\u003c/h3\\u003e\\n\\u003cp\\u003e최종적인 Project Directory는 아래와 같습니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e- terrace\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e    - bin\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e    - src\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e    - frontend\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e        - home\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e            - dist\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e    - web_root\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eterrace는 project root이며 Makefile도 있습니다.\\u003cbr /\\u003ebin에는 루트 핸들러 실행 파일인 terrace가 있습니다.\\u003cbr /\\u003esrc에는 루트 핸들러인 main.go 파일이 있습니다.\\u003cbr /\\u003efrontend 하위에 home이 있으며, npm 자동 빌드를 위한 update.sh도 있습니다.\\u003cbr /\\u003ehome 하위에는 빌드 결과물이 담기는 dist 디렉토리가 있으며, 앞으로 작업할 프론트 파일들이 담길 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e이제 로컬에서 해야할 기본적인 세팅은 끝났습니다. \\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/15/blog-shellMake/\",\"date\":\"2019/02/15\"},{\"title\":\"BLOG - 9. 웹서버 만든 후 빌드\",\"author\":\"\\u003cstrong\\u003e빌드하기\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003evue로 만든 소스코드를 아래와 같이 빌드합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd terrace/frontend/home\\nnpm run build\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e빌드란 해당 프로그램을 테스트하고 검사하여 배포하기 위해 수행하는 행위의 집합이라고 생각하시면 됩니다. \\u003ca href=\\\"https://github.com/jinyowo/JS-Calendar/wiki/**-Build%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C\\\"\\u003e(Reference1)\\u003c/a\\u003e 빌드의 결과물은 dist 디렉토리에 저장됩니다. 이를 배포를 위한 web_root 디렉토리로 카피하겠습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecp -r dist ../../web_root\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003ch3 id=\\\"root-handler-만들기\\\"\\u003eRoot Handler 만들기\\u003c/h3\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd ../../\\nmkdir src\\ncd src\\nv main.go\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003esrc 디렉토리에 Root Handler 기능을 하는 main.go라는 파일을 만듭니다. main.go에 아래 코드를 그대로 붙여넣기 하시면 됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"go\\\"\\u003e\\u003ccode\\u003epackage main\\n\\nimport (\\n    \\u0026quot;fmt\\u0026quot;\\n    \\u0026quot;io/ioutil\\u0026quot;\\n    \\u0026quot;log\\u0026quot;\\n    \\u0026quot;net/http\\u0026quot;\\n)\\n\\nconst (\\n  WebRoot = \\u0026quot;./web_root/\\u0026quot;\\n)\\n\\nfunc rootHandler(w http.ResponseWriter, r *http.Request) {\\n    // when request is root, send index.html\\n    // otherwise, send the file\\n\\n    log.Println(r.URL.Path)\\n\\n    path := r.URL.Path[len(\\u0026quot;/\\u0026quot;):]\\n\\n    source, err := ioutil.ReadFile(WebRoot + path)\\n    if err != nil {\\n        source, err = ioutil.ReadFile(WebRoot + path + \\u0026quot;/index.html\\u0026quot;)\\n        if err != nil {\\n            // Redirect to 404 page\\n            w.WriteHeader(http.StatusNotFound)\\n            fmt.Fprint(w, err)\\n            log.Println(\\u0026quot;(rootHandler) \\u0026quot;, err)\\n            return\\n        }\\n    }\\n\\n    // Set content type as css if required file\\u0026#39;s extension is css\\n    if len(path) \\u0026gt;= 4 \\u0026amp;\\u0026amp; path[len(path)-4:] == \\u0026quot;.css\\u0026quot; {\\n        w.Header().Set(\\u0026quot;Content-Type\\u0026quot;, \\u0026quot;text/css\\u0026quot;)\\n    }\\n\\n    fmt.Fprint(w, string(source))\\n    log.Println(\\u0026quot;(rootHandler) The requested file has been sent: \\u0026quot;, WebRoot+path)\\n}\\n\\nfunc main() {\\n    http.HandleFunc(\\u0026quot;/\\u0026quot;, rootHandler)\\n    log.Fatal(http.ListenAndServe(\\u0026quot;:80\\u0026quot;, nil))\\n}\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003emain.go를 간단히 설명드리겠습니다. 예를 들어, \\u003ccode\\u003er.URL.Path\\u003c/code\\u003e = \\u0026quot;/bookThinkBlog/2018/12/28/book-sapiens/\\u0026quot; 입니다. r은 클라이언트의 request (클라이언트에서 서버로 보내온 정보들)를 뜻하는 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003epath := r.URL.Path[len(\\u0026quot;/\\u0026quot;):]\\u003c/code\\u003e 이 코드를 지나면 \\u003ccode\\u003epath\\u003c/code\\u003e= \\u0026quot;bookThinkBlog/2018/12/28/book-sapiens/\\u0026quot; 이렇게 맨 앞 \\u0026quot;/\\u0026quot; 가 없어집니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003esource\\u003c/code\\u003e= \\u0026quot;./web_root/bookThinkBlog/2018/12/28/book-sapiens/\\u0026quot; 가 될 것입니다. err가 없다면 바로 아래의 조건문은 건너뛸 것이고, err가 있다면 \\u003ccode\\u003esource\\u003c/code\\u003e=\\u0026quot;./web_root/bookThinkBlog/2018/12/28/book-sapiens/index.html\\u0026quot;이 될 것입니다. 이것마저 err가 있다면 404(Not Found)를 띄워주는 겁니다.\\u003c/p\\u003e\\n\\u003cp\\u003e아무 err가 없다면 \\u003ccode\\u003efmt.Fprint(w, string(source))\\u003c/code\\u003e 가 정상적으로 실행됩니다. Fprint는 파일에 쓰기 위한 용도이며, \\u003ccode\\u003estring(source)\\u003c/code\\u003e를 \\u003ccode\\u003ew\\u003c/code\\u003e에 써준다라는 의미입니다. \\u003ca href=\\\"http://brownbears.tistory.com/175\\\"\\u003e(Reference2)\\u003c/a\\u003e \\u003ccode\\u003ehttp.HandleFunc\\u003c/code\\u003e는 지정된 Path에 대해서 어떤 Request 핸들러를 사용할지를 지정해줍니다. 위 코드에서는 \\u0026quot;/\\u0026quot; Path에 대해 rootHandler 함수를 실행해준다는 뜻입니다. \\u003ccode\\u003ehttp.ListenAndServe\\u003c/code\\u003e는 80번 포트를 열고 클라언트의 request를 받아들여 새로운 Go 루틴에 작업을 할당해줍니다. 두번째 파라미터인 nil은 Default인 HTTP Request router를 사용한다는 뜻입니다. \\u003ca href=\\\"http://golang.site/go/article/111-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%9B%B9-%EC%84%9C%EB%B2%84-HTTP-%EC%84%9C%EB%B2%84\\\"\\u003e(Reference3)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e사실 main.go에 있는 function 하나 하나가 굉장히 추상화가 되어있습니다. 그렇기에 그냥 블랙박스라 생각하시고 어떤 기능을 하는지만 이해하셔도 무방할 것 같습니다. 브리핑을 해보자면, 유저가 URL 주소를 치면 웹 서버에 request를 보냅니다. 그 request를 받아 rootHandler를 돌려 source path를 responsewriter에 써주고 그 response를 사용자 브라우저에 띄워주는 것입니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"main.go-빌드하기\\\"\\u003emain.go 빌드하기\\u003c/h3\\u003e\\n\\u003cp\\u003emain.go가 있는 src 디렉토리에서 go build를 해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ego build main.go\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e그러면 결과물로 \\u003ccode\\u003emain\\u003c/code\\u003e이라는 실행 파일이 하나 생길 겁니다. 아래와 같이 몇 가지 조정을 하겠습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd ..\\nmv src/main .\\nmkdir bin\\nmv main bin\\ncd bin\\nmv main terrace\\ncd ..\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이제 terrace/bin 디렉토리에 terrace라는 go 파일이 담겨 있을 겁니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo ./bin/terrace \\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이렇게 하면 npm run serve 한 것과 같이 웹 서버를 띄울 수 있습니다. 다만 npm run serve는 8080포트지만, 위에 있는 main.go를 보면 80포트에서 listen을 하고 있기 때문에 localhost:8001을 해야 접속이 됩니다. (각자 포트포워딩 했던 포트로 들어가시면 됩니다.) terrace를 실행할 때 sudo를 붙이는 이유는 80이 low number port이기 때문입니다. (참고로 http는 80번 포트, https는 443번 포트, ssh는 22번 포트를 씁니다.)\\u003c/p\\u003e\\n\\u003cp\\u003e하지만, 매번 실행할 때마다 sudo를 붙인다면 해킹당할 시 모든 걸 잃을 수 있습니다. sudo로 실행한 것을 뺏기면 root 계정을 뺏긴 것이니까요. 그래서 아래와 같이 설정해주면 sudo를 붙이지 않아도 \\u003ccode\\u003e./bin/terrace\\u003c/code\\u003e가 실행 됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo setcap CAP_NET_BIND_SERVICE=+eip ./bin/terrace\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e하지만 사용자 계정을 뺏겨도 sudo를 통해 루트 권한을 얻을 수 있기 때문에 이 또한 안전하지는 않습니다. 추후에는 sudo 권한을 얻을 수 없는 web 계정을 통해 올려야할 것입니다. (지금은 개인 블로그이고, 중요한 정보가 담겼다거나 해킹의 위험도 없기 때문에 사용자 계정으로 하는 것입니다.) \\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/12/blog-webServer/\",\"date\":\"2019/02/12\"},{\"title\":\"BLOG - 8. Neovim 설정\",\"author\":\"\\u003cstrong\\u003eIUS-release.rpm 설치\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003ehome directory에서\\u003c/p\\u003e\\n\\u003cpre class=\\\"zsh\\\"\\u003e\\u003ccode\\u003esudo yum install -y https://centos7.iuscommunity.org/ius-release.rpm\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eIUS는 리눅스를 위한 Red-Hat Package Manager(RPM) 패키지를 제공하는 Community Project입니다. \\u003ca href=\\\"https://ius.io/\\\"\\u003e(Reference1\\u003c/a\\u003e)\\u003c/p\\u003e\\n\\u003ch3 id=\\\"파이썬-설치\\\"\\u003e파이썬 설치\\u003c/h3\\u003e\\n\\u003cp\\u003e본 블로그에서는 python을 사용하지 않습니다. 하지만 아래에서 설치할 Neovim을 사용하기 위해 python이 필요합니다. 파이썬은 아래와 같이 설치합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo yum install -y python36u python36u-libs python36u-devel python36u-pip\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e파이썬을 설치한 뒤 아래와 같이 조금 손을 봐줘야합니다. 위와 같이 파이썬을 받아오면 python2와 python3가 같이 받아집니다. python2와 python3가 같이 있는 상황에서 \\u003ccode\\u003epython\\u003c/code\\u003e을 부르면 python2가 불립니다. python3는 \\u003ccode\\u003epython3\\u003c/code\\u003e라고 명시를 해줘야 합니다. \\u003ccode\\u003epython\\u003c/code\\u003e을 불렀을 때 python3를 불러오기 위해 아래와 같이 손을 봐주는 것입니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ewhich python3.6\\ncd /usr/bin\\nsudo rm python3\\nsudo rm python\\nsudo rm pip \\nsudo cp python3.6 python3\\nsudo cp python2.7 python\\nsudo cp pip3.6 pip\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003ch3 id=\\\"neovim설치-및-권한-변경\\\"\\u003eNeovim설치 및 권한 변경\\u003c/h3\\u003e\\n\\u003cp\\u003eNeovim의 목적은 쉽게 말해서 vim보다 Color를 많이 지원해 \\u003cstrong\\u003e예쁜 코드 에디터\\u003c/strong\\u003e를 제공하기 위함입니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd\\ncd temp\\nwget https://github.com/neovim/neovim/releases/download/v0.3.1/nvim.appimage\\nchmod 755 nvim.appimage\\n./nvim.appimage --appimage-extract\\ncd squashfs-root\\nsudo mv usr/bin/nvim /usr/bin/nvim\\nsudo mv usr/share/nvim /usr/share/nvim\\nnvim\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이렇게 하면 Neovim이 실행되는 걸 볼 수 있습니다. \\u003ccode\\u003e--appimage-extract\\u003c/code\\u003e는 appimage의 콘텐츠를 추출하는 기능을 한다. \\u003ca href=\\\"https://github.com/AppImage/AppImageKit/wiki/Extracting-AppImages\\\"\\u003e(Reference2)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003echmod 755\\u003c/code\\u003e 에서 chmod는 \\u003cstrong\\u003ech\\u003c/strong\\u003eange \\u003cstrong\\u003emod\\u003c/strong\\u003ee 의 약자이며, 대상 파일과 디렉토리의 사용권한을 변경하는 명렁어입니다. 문자열 모드와 8진법 수 모드가 있는데 755는 8진법 수 모드를 사용한 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e755에서\\u003cbr /\\u003e첫번째 숫자(7) = user의 권한\\u003cbr /\\u003e두번째 숫자(5) = group의 권한\\u003cbr /\\u003e세번째 숫자(5) = other의 권한\\u003cbr /\\u003e을 뜻합니다.\\u003c/p\\u003e\\n\\u003cp\\u003e755 = rwxr-xr-x 로 풀어쓸 수 있습니다. r은 파일 읽기 = 4, w는 파일 쓰기 = 2, x는 파일 실행 = 1를 뜻합니다. 즉 755는 user는 읽고, 쓰고, 실행할 수 있고, group과 other은 읽고, 실행만 할 수 있다는 뜻입니다. 4 = 2^2, 2 = 2^1, 1 = 2^0이기 때문에 각각 4, 2, 1이고 8진법 수 모드라 하는 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e읽기, 쓰기, 실행이 가능하다고 할 때, r: 4, w:2, x:1이기 때문에 4+2+1 = 7이 되는 것이고, 읽기, 실행만 가능하다고 할 때는, r:4, x:1이기 때문에 4+1 = 5가 되는 것입니다. 이렇게 숫자의 조합으로 3자리를 표현하면 됩니다. \\u003ccode\\u003echmod 777\\u003c/code\\u003e은 모든 보안을 꺼버립니다. \\u003ca href=\\\"http://www.incodom.kr/Linux/%EA%B8%B0%EB%B3%B8%EB%AA%85%EB%A0%B9%EC%96%B4/chmod\\\"\\u003e(Reference3)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003echmod로 권한을 변경하기 전 nvim.appimage의 권한은 아래와 같이 664입니다. (\\u003ccode\\u003els -al\\u003c/code\\u003e로 권한을 자세히 볼 수 있음)\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/02/11/8_1.PNG\\\" alt=\\\"권한설정 전 nvim.appimage\\\" /\\u003e\\u003cfigcaption\\u003e권한설정 전 nvim.appimage\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003e-rw-rw-r-- : 파일 접근 권한 분류 표기로, 처음 -는 파일 분류 타입을 뜻합니다. (파일 타입 : d 디렉토리, l(소문자 L) 링크 카운터, s 소켓, p 파이프, - 일반, c 특수문자, b 특수블럭)\\u003c/p\\u003e\\n\\u003cp\\u003e664이면 실행이 안되므로 아래와 같이 실행이 가능하게 755로 바꿔줬습니다. 또한, user말고 다른 사람은 파일 쓰기를 못하게 한 것입니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/02/11/8_2.PNG\\\" alt=\\\"권한설정 후 nvim.appimage\\\" /\\u003e\\u003cfigcaption\\u003e권한설정 후 nvim.appimage\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo mv usr/bin/nvim /usr/bin/nvim\\nsudo mv usr/share/nvim /usr/share/nvim\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 코드는 현재 temp/squashfs-root 디렉토리 안에 있는 nvim을 환경변수가 있는 곳으로 옮겨준다는 뜻입니다. nvim도 어디서든 사용할 수 있게 하는 명령어입니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"vundle-설치\\\"\\u003eVundle 설치\\u003c/h3\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd\\ngit clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eVundle은 vim + Bundle의 합성어로 vim의 플러그인을 통합 관리해주는 도구입니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"vim-config-설치\\\"\\u003eVim config 설치\\u003c/h3\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd ~/.config\\ngit clone https://github.com/hrzon/mjVimPack\\nmv mjVimPack nvim\\nnvim\\n# (enter, esc 후에)\\n:PluginInstall\\n:UpdateRemotePlugins\\n:q\\nnvim\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e명재선생님이 만들어 놓은 mjVimPack을 nvim으로 수정하고 실행하면 정상적으로 작동하는 것을 볼 수 있습니다. 이제 .zshrc에 아래 코드를 추가해줍니다. 그러면 nvim이 아니라 v라고만 쳐도 nvim을 실행시킬 수 있습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ealias v=\\u0026quot;nvim\\u0026quot;\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/11/blog-settingNeovim/\",\"date\":\"2019/02/11\"},{\"title\":\"BLOG - 7. Go 언어 설치\",\"author\":\"다른 언어를 사용해도 되지만 본 프로젝트에서는 Go 언어를 사용할 것입니다. Go 언어 설치를 위해서는 home directory에서\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003emkdir temp\\ncd temp\\nsudo yum -y install wget\\nwget https://dl.google.com/go/go1.11.4.linux-amd64.tar.gz\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003ewget으로 받아오는 go 버전은 계속 업그레이드가 될 수 있으므로 최신버전으로 설치합니다. golang 홈페이지에 들어가면 아래와 같이 Linux 최신버전을 볼 수 있습니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/02/10/7_1.PNG\\\" alt=\\\"golang 메인 홈페이지\\\" /\\u003e\\u003cfigcaption\\u003egolang 메인 홈페이지\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003ego를 다운받을 때 확장자가 tar.gz입니다. 이는 압축 확장자이며, 압축을 풀어 사용할 수 있습니다. 다운받은 go 아카이브의 압축을 아래와 같이 풉니다. \\u003ca href=\\\"http://sarghis.com/blog/468/\\\"\\u003e(Reference1)\\u003c/a\\u003e temp directory에서\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003etar -xzvf go1.11.4.linux-amd64.tar.gz\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo mv go /usr/local/\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003evi ~/.zshrc\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e아래처럼, 환경변수 $PATH를 추가시킵니다. 환경변수를 추가시킴으로써 go를 어떤 디렉토리에서도 실행할 수 있게 합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003eexport PATH=/usr/local/go/bin:$PATH\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esource ~/.zshrc\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e$PATH는 환경 변수를 뜻합니다. 터미널에서 프로그램 명령어를 입력하면 $PATH 환경 변수에 저장된 디렉토리 목록에서 명령을 찾습니다. $PATH에 현재 나열된 목록을 확인하려면 아래와 같이 입력하면 됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003eecho $PATH\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e그러면 아래와 같이 콜론으로 구분된 디렉토리 목록이 반환됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003e/usr/local/go/bin:/usr/local/bin:/usr/bin:/home/bkshin/bin:/usr/local/sbin:/usr/sbin\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위에서 go 디렉토리도 추가했기 때문에 /usr/local/go/bin도 잘 추가된 것을 볼 수 있습니다. \\u003ca href=\\\"https://askubuntu.com/questions/551990/what-does-path-mean\\\"\\u003e(Reference2)\\u003c/a\\u003e 이제 아무 디렉토리에서나 \\u003ccode\\u003ego\\u003c/code\\u003e를 입력해주면 go가 잘 작동하는 할 것입니다.\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/10/blog-installGolang/\",\"date\":\"2019/02/10\"},{\"title\":\"BLOG - 6. 개발환경세팅 II\",\"author\":\"\\u003cstrong\\u003eNPM설치\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003eNPM(Node Package Manager)란 자바스크립트 기반의 패키지 매니저입니다. \\u003ca href=\\\"https://www.w3schools.com/nodejs/nodejs_npm.asp\\\"\\u003e(Reference1)\\u003c/a\\u003e 이름처럼 NPM은 Node.js로 만들어진 모듈을 웹에서 받아 설치하고 관리해주는 프로그램입니다. 사용자는 명령어를 통해 공개된 모듈을 설치하고 활용할 수 있습니다.\\u003c/p\\u003e\\n\\u003cp\\u003eNPM 및 vue-cli 3.0을 아래와 같이 설치할 수 있습니다. vue-cli를 통해 터미널에서 간단한 명령어로 프로젝트 디렉토리를 만들 수 있습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo yum -y install npm\\nsudo npm install -g @vue/cli\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e(-g는 global의 약자이며, 다른 계정들에서도 사용할 수 있음)\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003evue --verison\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e을 치면 Node version을 업그레이드 하라는 경고 메시지가 나올 겁니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"npm-업그레이드\\\"\\u003eNPM 업그레이드\\u003c/h3\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo npm cache clean -f\\nsudo npm install -g n\\nsudo n stable\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 코드로 NPM 업그레이드를 합니다. 우선, 강제로 캐시를 제거하고, n 모듈을 설치합니다. 마지막으로 n모듈을 사용하여 Node.js를 설치합니다. \\u003ca href=\\\"https://velopert.com/1351\\\"\\u003e(Reference2)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003evue --verison\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e을 치면 이제 정상적으로 verison 정보가 뜹니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"project-directory-구성\\\"\\u003eProject Directory 구성\\u003c/h3\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd\\nmkdir terrace\\ncd terrace\\nmkdir frontend\\nvue create home\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eProject main directory(여기서는 terrace)를 만들고 그 하단에 frontend directory를 만든 뒤 vue를 create합니다. vue-cli가 home directory 하단에 자동으로 project directory를 만들어 줍니다. '기본 npm registry는 느리다고 더 빠른 installation을 하겠습니까?'라는 메시지가 뜨면 Yes를 해줍니다. 그 후 default (babel, eslint)를 선택해주고 설치합니다.\\u003c/p\\u003e\\n\\u003cp\\u003ehome directory로 들어가보면 아래와 같이 기본적인 project directory가 구성되어 있을 것입니다.\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003edist: 빌드 결과물이 담겨 있는 디렉토리입니다. \\u003ccode\\u003enpm run build\\u003c/code\\u003e 시 내용물이 담깁니다. 빌드에 대해서는 나중에 다시 설명하겠습니다.\\u003c/li\\u003e\\n\\u003cli\\u003enode_modules: npm 으로 설치한 것들이 담겨있는 폴더입니다. 용량이 꽤 크기 때문에 github에 올리면 안됩니다. (.gitignore에 추가)\\u003c/li\\u003e\\n\\u003cli\\u003epublic: 공용으로 접근 가능한 파일이 위치합니다. favicon, 블로그 아티클 등이 담깁니다.\\u003c/li\\u003e\\n\\u003cli\\u003esrc: vue 소스코드가 담깁니다.\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e나머지 json이나 js파일은 직접 건들 건 아니기 때문에 신경쓰지 맙시다. \\u003ca href=\\\"http://vuejs.kr/vue/vue-cli/2018/01/27/vue-cli-3/\\\"\\u003e(Reference3)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd home\\nnpm run serve\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/01/28/6_1.PNG\\\" alt=\\\"App running\\\" /\\u003e\\u003cfigcaption\\u003eApp running\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003erun serve후에 위와 같이 뜨면 정상적으로 성공한 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e이제 아래 명령어로 빌드를 해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003enpm run build\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003ebuild 결과물은 dist directory에 담깁니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"http-server-설치\\\"\\u003ehttp-server 설치\\u003c/h3\\u003e\\n\\u003cp\\u003e로컬에서 만든 작업물을 웹 상에서 띄우기 위해서는 웹 서버가 필요합니다. 여기서는 http-server를 사용할 것이며, 웹 서버에 대한 이해가 부족하다면 \\u003ca href=\\\"https://developer.mozilla.org/ko/docs/Learn/Common_questions/What_is_a_web_server\\\"\\u003e(Reference4)\\u003c/a\\u003e 링크를 참고하시기 바랍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd dist\\nsudo npm install –g http-server \\nhttp-server .\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위와 같이 dist 디렉토리에 http-server를 설치합니다. http-server 옆에 .은 현재 디렉토리를 의미합니다. \\u003ca href=\\\"https://www.npmjs.com/package/http-server\\\"\\u003e(Reference5)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003ch3 id=\\\"localhost-접속\\\"\\u003elocalhost 접속\\u003c/h3\\u003e\\n\\u003cp\\u003ehttp-server를 실행했기 때문에 인터넷을 켜서 주소창에 localhost:8881을 치면 Vue 기본 페이지가 떠야하는데 뜨질 않습니다. (localhost옆에 :8881은 호스트 포트를 의미함)\\u003c/p\\u003e\\n\\u003cp\\u003e이는 방화벽이 막혀있어서 그런 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003ehome directory에서 아래와 같이 포트에 방화벽을 열어줍니다. (8080, 80 등이 포트를 의미함)\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo firewall-cmd --zone=public --add-port=8080/tcp --permanent\\nsudo firewall-cmd --zone=public --add-port=80/tcp --permanent\\nsudo firewall-cmd --reload\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이젠 http-server . 혹은 npm run serve를 한 뒤 localhost:8881로 접속하면 vue 기본 페이지가 뜹니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/01/28/6_2.PNG\\\" alt=\\\"Vue 기본 페이지\\\" /\\u003e\\u003cfigcaption\\u003eVue 기본 페이지\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003efrontend directory 안에서 vue-cli로 home project를 생성했습니다. home directory 밑에는 서버와 배포시스템이 추가됩니다. frontend directory 밑에는 문서 변환과 프리렌더링 프로그램이 추가될 것입니다. \\u003cstrong\\u003e드디어 눈에 보이는 무언가가 생겨났습니다!\\u003c/strong\\u003e\\u003cbr /\\u003e\\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/01/28/blog-setting2/\",\"date\":\"2019/01/28\"},{\"title\":\"BLOG - 5. 개발환경세팅 I\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/01/24/blog-setting1/\",\"date\":\"2019/01/24\"},{\"title\":\"BLOG - 4. PuTTY로 가상환경 접속\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/01/23/blog-puttyConnection/\",\"date\":\"2019/01/23\"},{\"title\":\"BLOG - 3. 네트워크 포트포워딩\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/01/22/blog-portForwarding/\",\"date\":\"2019/01/22\"},{\"title\":\"BLOG - 2. 네트워크 연결 및 커널\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/01/21/blog-network/\",\"date\":\"2019/01/21\"},{\"title\":\"BLOG - 1. 가상환경 설치 및 실행\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/01/20/blog-CentOS/\",\"date\":\"2019/01/20\"},{\"title\":\"첫 글\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2018/12/12/thanks-to/\",\"date\":\"2018/12/12\"}] // __INSERTION_POSITION_END__ // DONT CHANGE!!\n,\n    year : this.$route.params.year2,\n    month : this.$route.params.month2,\n    day : this.$route.params.day2,\n    title : this.$route.params.title2,\n    articleHtmlSource : \"\"\n    }\n  },\n  watch: {\n    '$route' (to) {\n      this.year = to.params.year2;\n      this.month = to.params.month2;\n      this.day = to.params.day2;\n      this.title = to.params.title2;\n      this.getPage();\n    }\n  }\n\n}\n\n</script>\n\n<style scoped>\n#blog {\n  min-height: 300px;\n  margin: auto;\n  margin-bottom: 50px;\n}\n\n.blog-list-element {\n  max-width: 330px;\n  font-size: 1.05em;\n  text-align: left;\n  margin: auto;\n}\n\n.blog-contents-element {\n  text-align: left;\n  font-size: 1.05em;\n  max-width: 800px;\n}\n\n.blog-title {\n  color: #8a300f; \n  font-size: 1.05em;\n  text-align: left;\n}\n\n.blog-date {\n  font-size: 0.8em;\n  color: #9F9EA2;\n\tfloat: right;\n\tmargin-top: 4px;\n}\n\n.separate-line {\n  margin-top: 11px;\n  margin-bottom: 11px;\n  border: 0;\n  height: 1px;\n  background: #f2f2f2;\n}\n\n.inner-title-container {\n  text-align: center;\n  text-decoration: none;\n}\n\n.inner-title-container > h1 {\n  margin-top: 30px;\n  margin-bottom: 10px;\n}\n\n#article-content {\n  text-align: left;\n  font-size: 1.1em;\n  line-height: 1.8em;\n}\n\n#inner-date {\n  color: #8a300f;\n  font-size: 0.9em;\n  margin-bottom: 40px;\n}\n\na {\n  text-decoration: none;\n}\n\na:hover {\n  color: #b84014;\n}\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevRecordBlog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevRecordBlog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DevRecordBlog.vue?vue&type=template&id=ce5f7114&scoped=true&\"\nimport script from \"./DevRecordBlog.vue?vue&type=script&lang=js&\"\nexport * from \"./DevRecordBlog.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DevRecordBlog.vue?vue&type=style&index=0&id=ce5f7114&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ce5f7114\",\n  null\n  \n)\n\ncomponent.options.__file = \"DevRecordBlog.vue\"\nexport default component.exports","module.exports = function(hljs) {\n  return {\n    aliases: ['console'],\n    contains: [\n      {\n        className: 'meta',\n        begin: '^\\\\s{0,3}[\\\\w\\\\d\\\\[\\\\]()@-]*[>%$#]',\n        starts: {\n          end: '$', subLanguage: 'bash'\n        }\n      }\n    ]\n  }\n};","module.exports = function(hljs) {\n  var VAR = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d#@][\\w\\d_]*/},\n      {begin: /\\$\\{(.*?)}/}\n    ]\n  };\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$\\(/, end: /\\)/,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  var APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n\n  return {\n    aliases: ['sh', 'zsh'],\n    lexemes: /\\b-?[a-z\\._]+\\b/,\n    keywords: {\n      keyword:\n        'if then else elif fi for while in do done case esac function',\n      literal:\n        'true false',\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp',\n      _:\n        '-ne -eq -lt -gt -f -d -e -s -l -a' // relevance booster\n    },\n    contains: [\n      {\n        className: 'meta',\n        begin: /^#![^\\n]+sh\\s*$/,\n        relevance: 10\n      },\n      {\n        className: 'function',\n        begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n        returnBegin: true,\n        contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n        relevance: 0\n      },\n      hljs.HASH_COMMENT_MODE,\n      QUOTE_STRING,\n      APOS_STRING,\n      VAR\n    ]\n  };\n};"],"sourceRoot":""}