{"version":3,"sources":["webpack:///./node_modules/highlight.js/lib/languages/go.js","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./node_modules/core-js/modules/_fix-re-wks.js","webpack:///./node_modules/highlight.js/lib/languages/vim.js","webpack:///./node_modules/highlight.js/lib/languages/javascript.js","webpack:///./src/components/DevRecordBlog.vue?85f0","webpack:///./node_modules/highlight.js/lib/languages/python.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/core-js/modules/es6.regexp.replace.js","webpack:///./node_modules/highlight.js/lib/highlight.js","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./src/components/DevRecordBlog.vue?a8b0","webpack:///src/components/DevRecordBlog.vue","webpack:///./src/components/DevRecordBlog.vue?523f","webpack:///./src/components/DevRecordBlog.vue","webpack:///./node_modules/highlight.js/lib/languages/shell.js","webpack:///./node_modules/highlight.js/lib/languages/django.js","webpack:///./node_modules/highlight.js/lib/languages/bash.js"],"names":["module","exports","hljs","GO_KEYWORDS","keyword","literal","built_in","aliases","keywords","illegal","contains","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","className","variants","QUOTE_STRING_MODE","begin","end","C_NUMBER_RE","relevance","C_NUMBER_MODE","beginKeywords","excludeEnd","TITLE_MODE","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","__webpack_require__","d","__webpack_exports__","hide","redefine","fails","defined","wks","KEY","length","exec","SYMBOL","fns","strfn","rxfn","O","String","prototype","RegExp","string","call","lexemes","NUMBER_MODE","COMMENT","IDENT_RE","KEYWORDS","NUMBER","SUBST","TEMPLATE_STRING","BACKSLASH_ESCAPE","APOS_STRING_MODE","REGEXP_MODE","PARAMS_CONTAINS","concat","returnBegin","RE_STARTERS_RE","excludeBegin","subLanguage","skip","inherit","METHOD_GUARD","UNDERSCORE_TITLE_MODE","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DevRecordBlog_vue_vue_type_style_index_0_id_22e25c9b_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_DevRecordBlog_vue_vue_type_style_index_0_id_22e25c9b_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","n","PROMPT","STRING","BINARY_NUMBER_RE","PARAMS","HASH_COMMENT_MODE","endsWithParent","global","Op","Object","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","regeneratorRuntime","wrap","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","GeneratorFunctionPrototype","Generator","create","GeneratorFunction","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","__await","defineIteratorMethods","AsyncIterator","async","innerFn","outerFn","tryLocsList","iter","next","result","toString","keys","object","push","reverse","pop","Context","reset","skipTempReset","prev","sent","_sent","delegate","method","tryEntries","forEach","resetTryEntry","charAt","isNaN","slice","stop","rootEntry","rootRecord","completion","type","rval","dispatchException","exception","context","handle","loc","caught","record","i","entry","tryLoc","hasCatch","hasFinally","catchLoc","finallyLoc","Error","abrupt","finallyEntry","complete","afterLoc","finish","catch","thrown","delegateYield","iterable","resultName","nextLoc","protoGenerator","generator","_invoke","makeInvokeMethod","tryCatch","obj","invoke","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","doneResult","delegateResult","maybeInvokeDelegate","return","TypeError","pushTryEntry","locs","iteratorMethod","Function","REPLACE","$replace","searchValue","replaceValue","factory","window","ArrayProto","objectKeys","languages","noHighlightRe","languagePrefixRe","fixMarkupRe","spanEndTag","options","classPrefix","tabReplace","useBR","escape","replace","tag","node","nodeName","toLowerCase","testRe","re","lexeme","match","index","isNotHighlighted","language","test","blockLanguage","block","_class","classes","parentNode","getLanguage","split","parent","objects","Array","nodeStream","_nodeStream","offset","child","firstChild","nextSibling","nodeType","nodeValue","event","mergeStreams","original","highlighted","processed","nodeStack","selectStream","open","attr_str","a","map","attributes","join","close","render","stream","substring","splice","substr","expand_mode","mode","cached_variants","variant","compileLanguage","reStr","source","langRe","case_insensitive","compileMode","compiled","compiled_keywords","flatten","str","kw","pair","Number","lexemesRe","beginRe","endSameAsBegin","endRe","terminator_end","illegalRe","c","starts","terminators","filter","Boolean","highlight","ignore_illegals","continuation","escapeRe","subMode","endOfMode","endsParent","isIllegal","keywordMatch","match_str","buildSpan","classname","insideSpan","leaveOpen","noPrefix","openSpan","closeSpan","processKeywords","keyword_match","last_index","top","mode_buffer","lastIndex","processSubLanguage","explicit","continuations","highlightAuto","processBuffer","startNewMode","processLexeme","buffer","new_mode","end_mode","origin","returnEnd","current","count","e","message","indexOf","text","languageSubset","second_best","autoDetection","fixMarkup","p1","buildClassName","prevClassName","currentLang","resultLang","trim","highlightBlock","originalStream","resultNode","document","createElementNS","innerHTML","textContent","configure","user_options","initHighlighting","called","blocks","querySelectorAll","initHighlightingOnLoad","addEventListener","registerLanguage","lang","alias","listLanguages","disableAutodetect","UNDERSCORE_IDENT_RE","NUMBER_RE","PHRASAL_WORDS_MODE","inherits","BINARY_NUMBER_MODE","CSS_NUMBER_MODE","$iterators","getKeys","Iterators","ITERATOR","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","NAME","Collection","proto","_vm","_h","$createElement","_c","_self","attrs","id","year","staticClass","_v","_s","title","month","day","domProps","articleHtmlSource","_l","to","uri","date","staticRenderFns","highlight_default","DevRecordBlogvue_type_script_lang_js_","metaInfo","meta","charset","property","content","template","chunk","vmid","titleForMeta","methods","initDisqus","shortname","identifier","url","DISQUS","asyncToGenerator","_callee","vars_text","vars_obj","dsq","_context","createElement","getElementsByTagName","appendChild","src","reload","config","page","totheTop","body","scrollTop","documentElement","getPage","_this","htmlDocUri","fetch","response","responseText","mounted","updated","blogContents","querySelector","titles","style","display","address","domain","el","data","author","$route","params","year2","month2","day2","title2","watch","components_DevRecordBlogvue_type_script_lang_js_","component","componentNormalizer","__file","FILTER","VAR","QUOTE_STRING","APOS_STRING","_"],"mappings":"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","file":"js/chunk-46dc723c.986439c2.js","sourcesContent":["module.exports = function(hljs) {\n  var GO_KEYWORDS = {\n    keyword:\n      'break default func interface select case map struct chan else goto package switch ' +\n      'const fallthrough if range type continue for import return var go defer ' +\n      'bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 ' +\n      'uint16 uint32 uint64 int uint uintptr rune',\n    literal:\n       'true false iota nil',\n    built_in:\n      'append cap close complex copy imag len make new panic print println real recover delete'\n  };\n  return {\n    aliases: ['golang'],\n    keywords: GO_KEYWORDS,\n    illegal: '</',\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      {\n        className: 'string',\n        variants: [\n          hljs.QUOTE_STRING_MODE,\n          {begin: '\\'', end: '[^\\\\\\\\]\\''},\n          {begin: '`', end: '`'},\n        ]\n      },\n      {\n        className: 'number',\n        variants: [\n          {begin: hljs.C_NUMBER_RE + '[dflsi]', relevance: 1},\n          hljs.C_NUMBER_MODE\n        ]\n      },\n      {\n        begin: /:=/ // relevance booster\n      },\n      {\n        className: 'function',\n        beginKeywords: 'func', end: /\\s*\\{/, excludeEnd: true,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            keywords: GO_KEYWORDS,\n            illegal: /[\"']/\n          }\n        ]\n      }\n    ]\n  };\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","'use strict';\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar wks = require('./_wks');\n\nmodule.exports = function (KEY, length, exec) {\n  var SYMBOL = wks(KEY);\n  var fns = exec(defined, SYMBOL, ''[KEY]);\n  var strfn = fns[0];\n  var rxfn = fns[1];\n  if (fails(function () {\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  })) {\n    redefine(String.prototype, KEY, strfn);\n    hide(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return rxfn.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return rxfn.call(string, this); }\n    );\n  }\n};\n","module.exports = function(hljs) {\n  return {\n    lexemes: /[!#@\\w]+/,\n    keywords: {\n      keyword:\n        // express version except: ! & * < = > !! # @ @@\n        'N|0 P|0 X|0 a|0 ab abc abo al am an|0 ar arga argd arge argdo argg argl argu as au aug aun b|0 bN ba bad bd be bel bf bl bm bn bo bp br brea breaka breakd breakl bro bufdo buffers bun bw c|0 cN cNf ca cabc caddb cad caddf cal cat cb cc ccl cd ce cex cf cfir cgetb cgete cg changes chd che checkt cl cla clo cm cmapc cme cn cnew cnf cno cnorea cnoreme co col colo com comc comp con conf cope '+\n        'cp cpf cq cr cs cst cu cuna cunme cw delm deb debugg delc delf dif diffg diffo diffp diffpu diffs diffthis dig di dl dell dj dli do doautoa dp dr ds dsp e|0 ea ec echoe echoh echom echon el elsei em en endfo endf endt endw ene ex exe exi exu f|0 files filet fin fina fini fir fix fo foldc foldd folddoc foldo for fu go gr grepa gu gv ha helpf helpg helpt hi hid his ia iabc if ij il im imapc '+\n        'ime ino inorea inoreme int is isp iu iuna iunme j|0 ju k|0 keepa kee keepj lN lNf l|0 lad laddb laddf la lan lat lb lc lch lcl lcs le lefta let lex lf lfir lgetb lgete lg lgr lgrepa lh ll lla lli lmak lm lmapc lne lnew lnf ln loadk lo loc lockv lol lope lp lpf lr ls lt lu lua luad luaf lv lvimgrepa lw m|0 ma mak map mapc marks mat me menut mes mk mks mksp mkv mkvie mod mz mzf nbc nb nbs new nm nmapc nme nn nnoreme noa no noh norea noreme norm nu nun nunme ol o|0 om omapc ome on ono onoreme opt ou ounme ow p|0 '+\n        'profd prof pro promptr pc ped pe perld po popu pp pre prev ps pt ptN ptf ptj ptl ptn ptp ptr pts pu pw py3 python3 py3d py3f py pyd pyf quita qa rec red redi redr redraws reg res ret retu rew ri rightb rub rubyd rubyf rund ru rv sN san sa sal sav sb sbN sba sbf sbl sbm sbn sbp sbr scrip scripte scs se setf setg setl sf sfir sh sim sig sil sl sla sm smap smapc sme sn sni sno snor snoreme sor '+\n        'so spelld spe spelli spellr spellu spellw sp spr sre st sta startg startr star stopi stj sts sun sunm sunme sus sv sw sy synti sync tN tabN tabc tabdo tabe tabf tabfir tabl tabm tabnew '+\n        'tabn tabo tabp tabr tabs tab ta tags tc tcld tclf te tf th tj tl tm tn to tp tr try ts tu u|0 undoj undol una unh unl unlo unm unme uns up ve verb vert vim vimgrepa vi viu vie vm vmapc vme vne vn vnoreme vs vu vunme windo w|0 wN wa wh wi winc winp wn wp wq wqa ws wu wv x|0 xa xmapc xm xme xn xnoreme xu xunme y|0 z|0 ~ '+\n        // full version\n        'Next Print append abbreviate abclear aboveleft all amenu anoremenu args argadd argdelete argedit argglobal arglocal argument ascii autocmd augroup aunmenu buffer bNext ball badd bdelete behave belowright bfirst blast bmodified bnext botright bprevious brewind break breakadd breakdel breaklist browse bunload '+\n        'bwipeout change cNext cNfile cabbrev cabclear caddbuffer caddexpr caddfile call catch cbuffer cclose center cexpr cfile cfirst cgetbuffer cgetexpr cgetfile chdir checkpath checktime clist clast close cmap cmapclear cmenu cnext cnewer cnfile cnoremap cnoreabbrev cnoremenu copy colder colorscheme command comclear compiler continue confirm copen cprevious cpfile cquit crewind cscope cstag cunmap '+\n        'cunabbrev cunmenu cwindow delete delmarks debug debuggreedy delcommand delfunction diffupdate diffget diffoff diffpatch diffput diffsplit digraphs display deletel djump dlist doautocmd doautoall deletep drop dsearch dsplit edit earlier echo echoerr echohl echomsg else elseif emenu endif endfor '+\n        'endfunction endtry endwhile enew execute exit exusage file filetype find finally finish first fixdel fold foldclose folddoopen folddoclosed foldopen function global goto grep grepadd gui gvim hardcopy help helpfind helpgrep helptags highlight hide history insert iabbrev iabclear ijump ilist imap '+\n        'imapclear imenu inoremap inoreabbrev inoremenu intro isearch isplit iunmap iunabbrev iunmenu join jumps keepalt keepmarks keepjumps lNext lNfile list laddexpr laddbuffer laddfile last language later lbuffer lcd lchdir lclose lcscope left leftabove lexpr lfile lfirst lgetbuffer lgetexpr lgetfile lgrep lgrepadd lhelpgrep llast llist lmake lmap lmapclear lnext lnewer lnfile lnoremap loadkeymap loadview '+\n        'lockmarks lockvar lolder lopen lprevious lpfile lrewind ltag lunmap luado luafile lvimgrep lvimgrepadd lwindow move mark make mapclear match menu menutranslate messages mkexrc mksession mkspell mkvimrc mkview mode mzscheme mzfile nbclose nbkey nbsart next nmap nmapclear nmenu nnoremap '+\n        'nnoremenu noautocmd noremap nohlsearch noreabbrev noremenu normal number nunmap nunmenu oldfiles open omap omapclear omenu only onoremap onoremenu options ounmap ounmenu ownsyntax print profdel profile promptfind promptrepl pclose pedit perl perldo pop popup ppop preserve previous psearch ptag ptNext '+\n        'ptfirst ptjump ptlast ptnext ptprevious ptrewind ptselect put pwd py3do py3file python pydo pyfile quit quitall qall read recover redo redir redraw redrawstatus registers resize retab return rewind right rightbelow ruby rubydo rubyfile rundo runtime rviminfo substitute sNext sandbox sargument sall saveas sbuffer sbNext sball sbfirst sblast sbmodified sbnext sbprevious sbrewind scriptnames scriptencoding '+\n        'scscope set setfiletype setglobal setlocal sfind sfirst shell simalt sign silent sleep slast smagic smapclear smenu snext sniff snomagic snoremap snoremenu sort source spelldump spellgood spellinfo spellrepall spellundo spellwrong split sprevious srewind stop stag startgreplace startreplace '+\n        'startinsert stopinsert stjump stselect sunhide sunmap sunmenu suspend sview swapname syntax syntime syncbind tNext tabNext tabclose tabedit tabfind tabfirst tablast tabmove tabnext tabonly tabprevious tabrewind tag tcl tcldo tclfile tearoff tfirst throw tjump tlast tmenu tnext topleft tprevious '+'trewind tselect tunmenu undo undojoin undolist unabbreviate unhide unlet unlockvar unmap unmenu unsilent update vglobal version verbose vertical vimgrep vimgrepadd visual viusage view vmap vmapclear vmenu vnew '+\n        'vnoremap vnoremenu vsplit vunmap vunmenu write wNext wall while winsize wincmd winpos wnext wprevious wqall wsverb wundo wviminfo xit xall xmapclear xmap xmenu xnoremap xnoremenu xunmap xunmenu yank',\n      built_in: //built in func\n        'synIDtrans atan2 range matcharg did_filetype asin feedkeys xor argv ' +\n        'complete_check add getwinposx getqflist getwinposy screencol ' +\n        'clearmatches empty extend getcmdpos mzeval garbagecollect setreg ' +\n        'ceil sqrt diff_hlID inputsecret get getfperm getpid filewritable ' +\n        'shiftwidth max sinh isdirectory synID system inputrestore winline ' +\n        'atan visualmode inputlist tabpagewinnr round getregtype mapcheck ' +\n        'hasmapto histdel argidx findfile sha256 exists toupper getcmdline ' +\n        'taglist string getmatches bufnr strftime winwidth bufexists ' +\n        'strtrans tabpagebuflist setcmdpos remote_read printf setloclist ' +\n        'getpos getline bufwinnr float2nr len getcmdtype diff_filler luaeval ' +\n        'resolve libcallnr foldclosedend reverse filter has_key bufname ' +\n        'str2float strlen setline getcharmod setbufvar index searchpos ' +\n        'shellescape undofile foldclosed setqflist buflisted strchars str2nr ' +\n        'virtcol floor remove undotree remote_expr winheight gettabwinvar ' +\n        'reltime cursor tabpagenr finddir localtime acos getloclist search ' +\n        'tanh matchend rename gettabvar strdisplaywidth type abs py3eval ' +\n        'setwinvar tolower wildmenumode log10 spellsuggest bufloaded ' +\n        'synconcealed nextnonblank server2client complete settabwinvar ' +\n        'executable input wincol setmatches getftype hlID inputsave ' +\n        'searchpair or screenrow line settabvar histadd deepcopy strpart ' +\n        'remote_peek and eval getftime submatch screenchar winsaveview ' +\n        'matchadd mkdir screenattr getfontname libcall reltimestr getfsize ' +\n        'winnr invert pow getbufline byte2line soundfold repeat fnameescape ' +\n        'tagfiles sin strwidth spellbadword trunc maparg log lispindent ' +\n        'hostname setpos globpath remote_foreground getchar synIDattr ' +\n        'fnamemodify cscope_connection stridx winbufnr indent min ' +\n        'complete_add nr2char searchpairpos inputdialog values matchlist ' +\n        'items hlexists strridx browsedir expand fmod pathshorten line2byte ' +\n        'argc count getwinvar glob foldtextresult getreg foreground cosh ' +\n        'matchdelete has char2nr simplify histget searchdecl iconv ' +\n        'winrestcmd pumvisible writefile foldlevel haslocaldir keys cos ' +\n        'matchstr foldtext histnr tan tempname getcwd byteidx getbufvar ' +\n        'islocked escape eventhandler remote_send serverlist winrestview ' +\n        'synstack pyeval prevnonblank readfile cindent filereadable changenr ' +\n        'exp'\n    },\n    illegal: /;/,\n    contains: [\n      hljs.NUMBER_MODE,\n      {\n        className: 'string',\n        begin: '\\'', end: '\\'',\n        illegal: '\\\\n'\n      },\n\n      /*\n      A double quote can start either a string or a line comment. Strings are\n      ended before the end of a line by another double quote and can contain\n      escaped double-quotes and post-escaped line breaks.\n\n      Also, any double quote at the beginning of a line is a comment but we\n      don't handle that properly at the moment: any double quote inside will\n      turn them into a string. Handling it properly will require a smarter\n      parser.\n      */\n      {\n        className: 'string',\n        begin: /\"(\\\\\"|\\n\\\\|[^\"\\n])*\"/\n      },\n      hljs.COMMENT('\"', '$'),\n\n      {\n        className: 'variable',\n        begin: /[bwtglsav]:[\\w\\d_]*/\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function function!', end: '$',\n        relevance: 0,\n        contains: [\n          hljs.TITLE_MODE,\n          {\n            className: 'params',\n            begin: '\\\\(', end: '\\\\)'\n          }\n        ]\n      },\n      {\n        className: 'symbol',\n        begin: /<[\\w-]+>/\n      }\n    ]\n  };\n};","module.exports = function(hljs) {\n  var IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var KEYWORDS = {\n    keyword:\n      'in of if for while finally var new function do return void else break catch ' +\n      'instanceof with throw case default try this switch continue typeof delete ' +\n      'let yield const export super debugger as async await static ' +\n      // ECMAScript 6 modules import\n      'import from as'\n    ,\n    literal:\n      'true false null undefined NaN Infinity',\n    built_in:\n      'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +\n      'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +\n      'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +\n      'TypeError URIError Number Math Date String RegExp Array Float32Array ' +\n      'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +\n      'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +\n      'module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect ' +\n      'Promise'\n  };\n  var EXPRESSIONS;\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0[bB][01]+)' },\n      { begin: '\\\\b(0[oO][0-7]+)' },\n      { begin: hljs.C_NUMBER_RE }\n    ],\n    relevance: 0\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: '\\\\$\\\\{', end: '\\\\}',\n    keywords: KEYWORDS,\n    contains: []  // defined later\n  };\n  var TEMPLATE_STRING = {\n    className: 'string',\n    begin: '`', end: '`',\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      SUBST\n    ]\n  };\n  SUBST.contains = [\n    hljs.APOS_STRING_MODE,\n    hljs.QUOTE_STRING_MODE,\n    TEMPLATE_STRING,\n    NUMBER,\n    hljs.REGEXP_MODE\n  ]\n  var PARAMS_CONTAINS = SUBST.contains.concat([\n    hljs.C_BLOCK_COMMENT_MODE,\n    hljs.C_LINE_COMMENT_MODE\n  ]);\n\n  return {\n    aliases: ['js', 'jsx'],\n    keywords: KEYWORDS,\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        begin: /^\\s*['\"]use (strict|asm)['\"]/\n      },\n      {\n        className: 'meta',\n        begin: /^#!/, end: /$/\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE,\n      TEMPLATE_STRING,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      NUMBER,\n      { // object attr container\n        begin: /[{,]\\s*/, relevance: 0,\n        contains: [\n          {\n            begin: IDENT_RE + '\\\\s*:', returnBegin: true,\n            relevance: 0,\n            contains: [{className: 'attr', begin: IDENT_RE, relevance: 0}]\n          }\n        ]\n      },\n      { // \"value\" container\n        begin: '(' + hljs.RE_STARTERS_RE + '|\\\\b(case|return|throw)\\\\b)\\\\s*',\n        keywords: 'return throw case',\n        contains: [\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          hljs.REGEXP_MODE,\n          {\n            className: 'function',\n            begin: '(\\\\(.*?\\\\)|' + IDENT_RE + ')\\\\s*=>', returnBegin: true,\n            end: '\\\\s*=>',\n            contains: [\n              {\n                className: 'params',\n                variants: [\n                  {\n                    begin: IDENT_RE\n                  },\n                  {\n                    begin: /\\(\\s*\\)/,\n                  },\n                  {\n                    begin: /\\(/, end: /\\)/,\n                    excludeBegin: true, excludeEnd: true,\n                    keywords: KEYWORDS,\n                    contains: PARAMS_CONTAINS\n                  }\n                ]\n              }\n            ]\n          },\n          { // E4X / JSX\n            begin: /</, end: /(\\/\\w+|\\w+\\/)>/,\n            subLanguage: 'xml',\n            contains: [\n              {begin: /<\\w+\\s*\\/>/, skip: true},\n              {\n                begin: /<\\w+/, end: /(\\/\\w+|\\w+\\/)>/, skip: true,\n                contains: [\n                  {begin: /<\\w+\\s*\\/>/, skip: true},\n                  'self'\n                ]\n              }\n            ]\n          }\n        ],\n        relevance: 0\n      },\n      {\n        className: 'function',\n        beginKeywords: 'function', end: /\\{/, excludeEnd: true,\n        contains: [\n          hljs.inherit(hljs.TITLE_MODE, {begin: IDENT_RE}),\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            excludeBegin: true,\n            excludeEnd: true,\n            contains: PARAMS_CONTAINS\n          }\n        ],\n        illegal: /\\[|%/\n      },\n      {\n        begin: /\\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`\n      },\n      hljs.METHOD_GUARD,\n      { // ES6 class\n        className: 'class',\n        beginKeywords: 'class', end: /[{;=]/, excludeEnd: true,\n        illegal: /[:\"\\[\\]]/,\n        contains: [\n          {beginKeywords: 'extends'},\n          hljs.UNDERSCORE_TITLE_MODE\n        ]\n      },\n      {\n        beginKeywords: 'constructor', end: /\\{/, excludeEnd: true\n      }\n    ],\n    illegal: /#(?!!)/\n  };\n};","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevRecordBlog.vue?vue&type=style&index=0&id=22e25c9b&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevRecordBlog.vue?vue&type=style&index=0&id=22e25c9b&scoped=true&lang=css&\"","module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      'and elif is global as in if from raise for except finally print import pass return ' +\n      'exec else break not with class assert yield try while continue del or def lambda ' +\n      'async await nonlocal|10 None True False',\n    built_in:\n      'Ellipsis NotImplemented'\n  };\n  var PROMPT = {\n    className: 'meta',  begin: /^(>>>|\\.\\.\\.) /\n  };\n  var SUBST = {\n    className: 'subst',\n    begin: /\\{/, end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n  var STRING = {\n    className: 'string',\n    contains: [hljs.BACKSLASH_ESCAPE],\n    variants: [\n      {\n        begin: /(u|b)?r?'''/, end: /'''/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(u|b)?r?\"\"\"/, end: /\"\"\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT],\n        relevance: 10\n      },\n      {\n        begin: /(fr|rf|f)'''/, end: /'''/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT, SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"\"\"/, end: /\"\"\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, PROMPT, SUBST]\n      },\n      {\n        begin: /(u|r|ur)'/, end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /(u|r|ur)\"/, end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /(b|br)'/, end: /'/\n      },\n      {\n        begin: /(b|br)\"/, end: /\"/\n      },\n      {\n        begin: /(fr|rf|f)'/, end: /'/,\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      {\n        begin: /(fr|rf|f)\"/, end: /\"/,\n        contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n  var NUMBER = {\n    className: 'number', relevance: 0,\n    variants: [\n      {begin: hljs.BINARY_NUMBER_RE + '[lLjJ]?'},\n      {begin: '\\\\b(0o[0-7]+)[lLjJ]?'},\n      {begin: hljs.C_NUMBER_RE + '[lLjJ]?'}\n    ]\n  };\n  var PARAMS = {\n    className: 'params',\n    begin: /\\(/, end: /\\)/,\n    contains: ['self', PROMPT, NUMBER, STRING]\n  };\n  SUBST.contains = [STRING, NUMBER, PROMPT];\n  return {\n    aliases: ['py', 'gyp'],\n    keywords: KEYWORDS,\n    illegal: /(<\\/|->|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      STRING,\n      hljs.HASH_COMMENT_MODE,\n      {\n        variants: [\n          {className: 'function', beginKeywords: 'def'},\n          {className: 'class', beginKeywords: 'class'}\n        ],\n        end: /:/,\n        illegal: /[${=;\\n,]/,\n        contains: [\n          hljs.UNDERSCORE_TITLE_MODE,\n          PARAMS,\n          {\n            begin: /->/, endsWithParent: true,\n            keywords: 'None'\n          }\n        ]\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/, end: /$/\n      },\n      {\n        begin: /\\b(print|exec)\\(/ // don’t highlight keywords-turned-functions in Python 3\n      }\n    ]\n  };\n};","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() {\n    return this || (typeof self === \"object\" && self);\n  })() || Function(\"return this\")()\n);\n","// @@replace logic\nrequire('./_fix-re-wks')('replace', 2, function (defined, REPLACE, $replace) {\n  // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)\n  return [function replace(searchValue, replaceValue) {\n    'use strict';\n    var O = defined(this);\n    var fn = searchValue == undefined ? undefined : searchValue[REPLACE];\n    return fn !== undefined\n      ? fn.call(searchValue, O, replaceValue)\n      : $replace.call(String(O), searchValue, replaceValue);\n  }, $replace];\n});\n","/*\nSyntax highlighting with language autodetection.\nhttps://highlightjs.org/\n*/\n\n(function(factory) {\n\n  // Find the global object for export to both the browser and web workers.\n  var globalObject = typeof window === 'object' && window ||\n                     typeof self === 'object' && self;\n\n  // Setup highlight.js for different environments. First is Node.js or\n  // CommonJS.\n  if(typeof exports !== 'undefined') {\n    factory(exports);\n  } else if(globalObject) {\n    // Export hljs globally even when using AMD for cases when this script\n    // is loaded with others that may still expect a global hljs.\n    globalObject.hljs = factory({});\n\n    // Finally register the global hljs with AMD.\n    if(typeof define === 'function' && define.amd) {\n      define([], function() {\n        return globalObject.hljs;\n      });\n    }\n  }\n\n}(function(hljs) {\n  // Convenience variables for build-in objects\n  var ArrayProto = [],\n      objectKeys = Object.keys;\n\n  // Global internal variables used within the highlight.js library.\n  var languages = {},\n      aliases   = {};\n\n  // Regular expressions used throughout the highlight.js library.\n  var noHighlightRe    = /^(no-?highlight|plain|text)$/i,\n      languagePrefixRe = /\\blang(?:uage)?-([\\w-]+)\\b/i,\n      fixMarkupRe      = /((^(<[^>]+>|\\t|)+|(?:\\n)))/gm;\n\n  var spanEndTag = '</span>';\n\n  // Global options used when within external APIs. This is modified when\n  // calling the `hljs.configure` function.\n  var options = {\n    classPrefix: 'hljs-',\n    tabReplace: null,\n    useBR: false,\n    languages: undefined\n  };\n\n\n  /* Utility functions */\n\n  function escape(value) {\n    return value.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n\n  function tag(node) {\n    return node.nodeName.toLowerCase();\n  }\n\n  function testRe(re, lexeme) {\n    var match = re && re.exec(lexeme);\n    return match && match.index === 0;\n  }\n\n  function isNotHighlighted(language) {\n    return noHighlightRe.test(language);\n  }\n\n  function blockLanguage(block) {\n    var i, match, length, _class;\n    var classes = block.className + ' ';\n\n    classes += block.parentNode ? block.parentNode.className : '';\n\n    // language-* takes precedence over non-prefixed class names.\n    match = languagePrefixRe.exec(classes);\n    if (match) {\n      return getLanguage(match[1]) ? match[1] : 'no-highlight';\n    }\n\n    classes = classes.split(/\\s+/);\n\n    for (i = 0, length = classes.length; i < length; i++) {\n      _class = classes[i]\n\n      if (isNotHighlighted(_class) || getLanguage(_class)) {\n        return _class;\n      }\n    }\n  }\n\n  function inherit(parent) {  // inherit(parent, override_obj, override_obj, ...)\n    var key;\n    var result = {};\n    var objects = Array.prototype.slice.call(arguments, 1);\n\n    for (key in parent)\n      result[key] = parent[key];\n    objects.forEach(function(obj) {\n      for (key in obj)\n        result[key] = obj[key];\n    });\n    return result;\n  }\n\n  /* Stream merging */\n\n  function nodeStream(node) {\n    var result = [];\n    (function _nodeStream(node, offset) {\n      for (var child = node.firstChild; child; child = child.nextSibling) {\n        if (child.nodeType === 3)\n          offset += child.nodeValue.length;\n        else if (child.nodeType === 1) {\n          result.push({\n            event: 'start',\n            offset: offset,\n            node: child\n          });\n          offset = _nodeStream(child, offset);\n          // Prevent void elements from having an end tag that would actually\n          // double them in the output. There are more void elements in HTML\n          // but we list only those realistically expected in code display.\n          if (!tag(child).match(/br|hr|img|input/)) {\n            result.push({\n              event: 'stop',\n              offset: offset,\n              node: child\n            });\n          }\n        }\n      }\n      return offset;\n    })(node, 0);\n    return result;\n  }\n\n  function mergeStreams(original, highlighted, value) {\n    var processed = 0;\n    var result = '';\n    var nodeStack = [];\n\n    function selectStream() {\n      if (!original.length || !highlighted.length) {\n        return original.length ? original : highlighted;\n      }\n      if (original[0].offset !== highlighted[0].offset) {\n        return (original[0].offset < highlighted[0].offset) ? original : highlighted;\n      }\n\n      /*\n      To avoid starting the stream just before it should stop the order is\n      ensured that original always starts first and closes last:\n\n      if (event1 == 'start' && event2 == 'start')\n        return original;\n      if (event1 == 'start' && event2 == 'stop')\n        return highlighted;\n      if (event1 == 'stop' && event2 == 'start')\n        return original;\n      if (event1 == 'stop' && event2 == 'stop')\n        return highlighted;\n\n      ... which is collapsed to:\n      */\n      return highlighted[0].event === 'start' ? original : highlighted;\n    }\n\n    function open(node) {\n      function attr_str(a) {return ' ' + a.nodeName + '=\"' + escape(a.value).replace('\"', '&quot;') + '\"';}\n      result += '<' + tag(node) + ArrayProto.map.call(node.attributes, attr_str).join('') + '>';\n    }\n\n    function close(node) {\n      result += '</' + tag(node) + '>';\n    }\n\n    function render(event) {\n      (event.event === 'start' ? open : close)(event.node);\n    }\n\n    while (original.length || highlighted.length) {\n      var stream = selectStream();\n      result += escape(value.substring(processed, stream[0].offset));\n      processed = stream[0].offset;\n      if (stream === original) {\n        /*\n        On any opening or closing tag of the original markup we first close\n        the entire highlighted node stack, then render the original tag along\n        with all the following original tags at the same offset and then\n        reopen all the tags on the highlighted stack.\n        */\n        nodeStack.reverse().forEach(close);\n        do {\n          render(stream.splice(0, 1)[0]);\n          stream = selectStream();\n        } while (stream === original && stream.length && stream[0].offset === processed);\n        nodeStack.reverse().forEach(open);\n      } else {\n        if (stream[0].event === 'start') {\n          nodeStack.push(stream[0].node);\n        } else {\n          nodeStack.pop();\n        }\n        render(stream.splice(0, 1)[0]);\n      }\n    }\n    return result + escape(value.substr(processed));\n  }\n\n  /* Initialization */\n\n  function expand_mode(mode) {\n    if (mode.variants && !mode.cached_variants) {\n      mode.cached_variants = mode.variants.map(function(variant) {\n        return inherit(mode, {variants: null}, variant);\n      });\n    }\n    return mode.cached_variants || (mode.endsWithParent && [inherit(mode)]) || [mode];\n  }\n\n  function compileLanguage(language) {\n\n    function reStr(re) {\n        return (re && re.source) || re;\n    }\n\n    function langRe(value, global) {\n      return new RegExp(\n        reStr(value),\n        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')\n      );\n    }\n\n    function compileMode(mode, parent) {\n      if (mode.compiled)\n        return;\n      mode.compiled = true;\n\n      mode.keywords = mode.keywords || mode.beginKeywords;\n      if (mode.keywords) {\n        var compiled_keywords = {};\n\n        var flatten = function(className, str) {\n          if (language.case_insensitive) {\n            str = str.toLowerCase();\n          }\n          str.split(' ').forEach(function(kw) {\n            var pair = kw.split('|');\n            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];\n          });\n        };\n\n        if (typeof mode.keywords === 'string') { // string\n          flatten('keyword', mode.keywords);\n        } else {\n          objectKeys(mode.keywords).forEach(function (className) {\n            flatten(className, mode.keywords[className]);\n          });\n        }\n        mode.keywords = compiled_keywords;\n      }\n      mode.lexemesRe = langRe(mode.lexemes || /\\w+/, true);\n\n      if (parent) {\n        if (mode.beginKeywords) {\n          mode.begin = '\\\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\\\b';\n        }\n        if (!mode.begin)\n          mode.begin = /\\B|\\b/;\n        mode.beginRe = langRe(mode.begin);\n        if (mode.endSameAsBegin)\n          mode.end = mode.begin;\n        if (!mode.end && !mode.endsWithParent)\n          mode.end = /\\B|\\b/;\n        if (mode.end)\n          mode.endRe = langRe(mode.end);\n        mode.terminator_end = reStr(mode.end) || '';\n        if (mode.endsWithParent && parent.terminator_end)\n          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;\n      }\n      if (mode.illegal)\n        mode.illegalRe = langRe(mode.illegal);\n      if (mode.relevance == null)\n        mode.relevance = 1;\n      if (!mode.contains) {\n        mode.contains = [];\n      }\n      mode.contains = Array.prototype.concat.apply([], mode.contains.map(function(c) {\n        return expand_mode(c === 'self' ? mode : c)\n      }));\n      mode.contains.forEach(function(c) {compileMode(c, mode);});\n\n      if (mode.starts) {\n        compileMode(mode.starts, parent);\n      }\n\n      var terminators =\n        mode.contains.map(function(c) {\n          return c.beginKeywords ? '\\\\.?(' + c.begin + ')\\\\.?' : c.begin;\n        })\n        .concat([mode.terminator_end, mode.illegal])\n        .map(reStr)\n        .filter(Boolean);\n      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(/*s*/) {return null;}};\n    }\n\n    compileMode(language);\n  }\n\n  /*\n  Core highlighting function. Accepts a language name, or an alias, and a\n  string with the code to highlight. Returns an object with the following\n  properties:\n\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n\n  */\n  function highlight(name, value, ignore_illegals, continuation) {\n\n    function escapeRe(value) {\n      return new RegExp(value.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'm');\n    }\n\n    function subMode(lexeme, mode) {\n      var i, length;\n\n      for (i = 0, length = mode.contains.length; i < length; i++) {\n        if (testRe(mode.contains[i].beginRe, lexeme)) {\n          if (mode.contains[i].endSameAsBegin) {\n            mode.contains[i].endRe = escapeRe( mode.contains[i].beginRe.exec(lexeme)[0] );\n          }\n          return mode.contains[i];\n        }\n      }\n    }\n\n    function endOfMode(mode, lexeme) {\n      if (testRe(mode.endRe, lexeme)) {\n        while (mode.endsParent && mode.parent) {\n          mode = mode.parent;\n        }\n        return mode;\n      }\n      if (mode.endsWithParent) {\n        return endOfMode(mode.parent, lexeme);\n      }\n    }\n\n    function isIllegal(lexeme, mode) {\n      return !ignore_illegals && testRe(mode.illegalRe, lexeme);\n    }\n\n    function keywordMatch(mode, match) {\n      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];\n      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];\n    }\n\n    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {\n      var classPrefix = noPrefix ? '' : options.classPrefix,\n          openSpan    = '<span class=\"' + classPrefix,\n          closeSpan   = leaveOpen ? '' : spanEndTag\n\n      openSpan += classname + '\">';\n\n      return openSpan + insideSpan + closeSpan;\n    }\n\n    function processKeywords() {\n      var keyword_match, last_index, match, result;\n\n      if (!top.keywords)\n        return escape(mode_buffer);\n\n      result = '';\n      last_index = 0;\n      top.lexemesRe.lastIndex = 0;\n      match = top.lexemesRe.exec(mode_buffer);\n\n      while (match) {\n        result += escape(mode_buffer.substring(last_index, match.index));\n        keyword_match = keywordMatch(top, match);\n        if (keyword_match) {\n          relevance += keyword_match[1];\n          result += buildSpan(keyword_match[0], escape(match[0]));\n        } else {\n          result += escape(match[0]);\n        }\n        last_index = top.lexemesRe.lastIndex;\n        match = top.lexemesRe.exec(mode_buffer);\n      }\n      return result + escape(mode_buffer.substr(last_index));\n    }\n\n    function processSubLanguage() {\n      var explicit = typeof top.subLanguage === 'string';\n      if (explicit && !languages[top.subLanguage]) {\n        return escape(mode_buffer);\n      }\n\n      var result = explicit ?\n                   highlight(top.subLanguage, mode_buffer, true, continuations[top.subLanguage]) :\n                   highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : undefined);\n\n      // Counting embedded language score towards the host language may be disabled\n      // with zeroing the containing mode relevance. Usecase in point is Markdown that\n      // allows XML everywhere and makes every XML snippet to have a much larger Markdown\n      // score.\n      if (top.relevance > 0) {\n        relevance += result.relevance;\n      }\n      if (explicit) {\n        continuations[top.subLanguage] = result.top;\n      }\n      return buildSpan(result.language, result.value, false, true);\n    }\n\n    function processBuffer() {\n      result += (top.subLanguage != null ? processSubLanguage() : processKeywords());\n      mode_buffer = '';\n    }\n\n    function startNewMode(mode) {\n      result += mode.className? buildSpan(mode.className, '', true): '';\n      top = Object.create(mode, {parent: {value: top}});\n    }\n\n    function processLexeme(buffer, lexeme) {\n\n      mode_buffer += buffer;\n\n      if (lexeme == null) {\n        processBuffer();\n        return 0;\n      }\n\n      var new_mode = subMode(lexeme, top);\n      if (new_mode) {\n        if (new_mode.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (new_mode.excludeBegin) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (!new_mode.returnBegin && !new_mode.excludeBegin) {\n            mode_buffer = lexeme;\n          }\n        }\n        startNewMode(new_mode, lexeme);\n        return new_mode.returnBegin ? 0 : lexeme.length;\n      }\n\n      var end_mode = endOfMode(top, lexeme);\n      if (end_mode) {\n        var origin = top;\n        if (origin.skip) {\n          mode_buffer += lexeme;\n        } else {\n          if (!(origin.returnEnd || origin.excludeEnd)) {\n            mode_buffer += lexeme;\n          }\n          processBuffer();\n          if (origin.excludeEnd) {\n            mode_buffer = lexeme;\n          }\n        }\n        do {\n          if (top.className) {\n            result += spanEndTag;\n          }\n          if (!top.skip && !top.subLanguage) {\n            relevance += top.relevance;\n          }\n          top = top.parent;\n        } while (top !== end_mode.parent);\n        if (end_mode.starts) {\n          if (end_mode.endSameAsBegin) {\n            end_mode.starts.endRe = end_mode.endRe;\n          }\n          startNewMode(end_mode.starts, '');\n        }\n        return origin.returnEnd ? 0 : lexeme.length;\n      }\n\n      if (isIllegal(lexeme, top))\n        throw new Error('Illegal lexeme \"' + lexeme + '\" for mode \"' + (top.className || '<unnamed>') + '\"');\n\n      /*\n      Parser should not reach this point as all types of lexemes should be caught\n      earlier, but if it does due to some bug make sure it advances at least one\n      character forward to prevent infinite looping.\n      */\n      mode_buffer += lexeme;\n      return lexeme.length || 1;\n    }\n\n    var language = getLanguage(name);\n    if (!language) {\n      throw new Error('Unknown language: \"' + name + '\"');\n    }\n\n    compileLanguage(language);\n    var top = continuation || language;\n    var continuations = {}; // keep continuations for sub-languages\n    var result = '', current;\n    for(current = top; current !== language; current = current.parent) {\n      if (current.className) {\n        result = buildSpan(current.className, '', true) + result;\n      }\n    }\n    var mode_buffer = '';\n    var relevance = 0;\n    try {\n      var match, count, index = 0;\n      while (true) {\n        top.terminators.lastIndex = index;\n        match = top.terminators.exec(value);\n        if (!match)\n          break;\n        count = processLexeme(value.substring(index, match.index), match[0]);\n        index = match.index + count;\n      }\n      processLexeme(value.substr(index));\n      for(current = top; current.parent; current = current.parent) { // close dangling modes\n        if (current.className) {\n          result += spanEndTag;\n        }\n      }\n      return {\n        relevance: relevance,\n        value: result,\n        language: name,\n        top: top\n      };\n    } catch (e) {\n      if (e.message && e.message.indexOf('Illegal') !== -1) {\n        return {\n          relevance: 0,\n          value: escape(value)\n        };\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /*\n  Highlighting with language detection. Accepts a string with the code to\n  highlight. Returns an object with the following properties:\n\n  - language (detected language)\n  - relevance (int)\n  - value (an HTML string with highlighting markup)\n  - second_best (object with the same structure for second-best heuristically\n    detected language, may be absent)\n\n  */\n  function highlightAuto(text, languageSubset) {\n    languageSubset = languageSubset || options.languages || objectKeys(languages);\n    var result = {\n      relevance: 0,\n      value: escape(text)\n    };\n    var second_best = result;\n    languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {\n      var current = highlight(name, text, false);\n      current.language = name;\n      if (current.relevance > second_best.relevance) {\n        second_best = current;\n      }\n      if (current.relevance > result.relevance) {\n        second_best = result;\n        result = current;\n      }\n    });\n    if (second_best.language) {\n      result.second_best = second_best;\n    }\n    return result;\n  }\n\n  /*\n  Post-processing of the highlighted markup:\n\n  - replace TABs with something more useful\n  - replace real line-breaks with '<br>' for non-pre containers\n\n  */\n  function fixMarkup(value) {\n    return !(options.tabReplace || options.useBR)\n      ? value\n      : value.replace(fixMarkupRe, function(match, p1) {\n          if (options.useBR && match === '\\n') {\n            return '<br>';\n          } else if (options.tabReplace) {\n            return p1.replace(/\\t/g, options.tabReplace);\n          }\n          return '';\n      });\n  }\n\n  function buildClassName(prevClassName, currentLang, resultLang) {\n    var language = currentLang ? aliases[currentLang] : resultLang,\n        result   = [prevClassName.trim()];\n\n    if (!prevClassName.match(/\\bhljs\\b/)) {\n      result.push('hljs');\n    }\n\n    if (prevClassName.indexOf(language) === -1) {\n      result.push(language);\n    }\n\n    return result.join(' ').trim();\n  }\n\n  /*\n  Applies highlighting to a DOM node containing code. Accepts a DOM node and\n  two optional parameters for fixMarkup.\n  */\n  function highlightBlock(block) {\n    var node, originalStream, result, resultNode, text;\n    var language = blockLanguage(block);\n\n    if (isNotHighlighted(language))\n        return;\n\n    if (options.useBR) {\n      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      node.innerHTML = block.innerHTML.replace(/\\n/g, '').replace(/<br[ \\/]*>/g, '\\n');\n    } else {\n      node = block;\n    }\n    text = node.textContent;\n    result = language ? highlight(language, text, true) : highlightAuto(text);\n\n    originalStream = nodeStream(node);\n    if (originalStream.length) {\n      resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');\n      resultNode.innerHTML = result.value;\n      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);\n    }\n    result.value = fixMarkup(result.value);\n\n    block.innerHTML = result.value;\n    block.className = buildClassName(block.className, language, result.language);\n    block.result = {\n      language: result.language,\n      re: result.relevance\n    };\n    if (result.second_best) {\n      block.second_best = {\n        language: result.second_best.language,\n        re: result.second_best.relevance\n      };\n    }\n  }\n\n  /*\n  Updates highlight.js global options with values passed in the form of an object.\n  */\n  function configure(user_options) {\n    options = inherit(options, user_options);\n  }\n\n  /*\n  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.\n  */\n  function initHighlighting() {\n    if (initHighlighting.called)\n      return;\n    initHighlighting.called = true;\n\n    var blocks = document.querySelectorAll('pre code');\n    ArrayProto.forEach.call(blocks, highlightBlock);\n  }\n\n  /*\n  Attaches highlighting to the page load event.\n  */\n  function initHighlightingOnLoad() {\n    addEventListener('DOMContentLoaded', initHighlighting, false);\n    addEventListener('load', initHighlighting, false);\n  }\n\n  function registerLanguage(name, language) {\n    var lang = languages[name] = language(hljs);\n    if (lang.aliases) {\n      lang.aliases.forEach(function(alias) {aliases[alias] = name;});\n    }\n  }\n\n  function listLanguages() {\n    return objectKeys(languages);\n  }\n\n  function getLanguage(name) {\n    name = (name || '').toLowerCase();\n    return languages[name] || languages[aliases[name]];\n  }\n\n  function autoDetection(name) {\n    var lang = getLanguage(name);\n    return lang && !lang.disableAutodetect;\n  }\n\n  /* Interface definition */\n\n  hljs.highlight = highlight;\n  hljs.highlightAuto = highlightAuto;\n  hljs.fixMarkup = fixMarkup;\n  hljs.highlightBlock = highlightBlock;\n  hljs.configure = configure;\n  hljs.initHighlighting = initHighlighting;\n  hljs.initHighlightingOnLoad = initHighlightingOnLoad;\n  hljs.registerLanguage = registerLanguage;\n  hljs.listLanguages = listLanguages;\n  hljs.getLanguage = getLanguage;\n  hljs.autoDetection = autoDetection;\n  hljs.inherit = inherit;\n\n  // Common regexps\n  hljs.IDENT_RE = '[a-zA-Z]\\\\w*';\n  hljs.UNDERSCORE_IDENT_RE = '[a-zA-Z_]\\\\w*';\n  hljs.NUMBER_RE = '\\\\b\\\\d+(\\\\.\\\\d+)?';\n  hljs.C_NUMBER_RE = '(-?)(\\\\b0[xX][a-fA-F0-9]+|(\\\\b\\\\d+(\\\\.\\\\d*)?|\\\\.\\\\d+)([eE][-+]?\\\\d+)?)'; // 0x..., 0..., decimal, float\n  hljs.BINARY_NUMBER_RE = '\\\\b(0b[01]+)'; // 0b...\n  hljs.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\\\*|\\\\*=|\\\\+|\\\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\\\?|\\\\[|\\\\{|\\\\(|\\\\^|\\\\^=|\\\\||\\\\|=|\\\\|\\\\||~';\n\n  // Common modes\n  hljs.BACKSLASH_ESCAPE = {\n    begin: '\\\\\\\\[\\\\s\\\\S]', relevance: 0\n  };\n  hljs.APOS_STRING_MODE = {\n    className: 'string',\n    begin: '\\'', end: '\\'',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.QUOTE_STRING_MODE = {\n    className: 'string',\n    begin: '\"', end: '\"',\n    illegal: '\\\\n',\n    contains: [hljs.BACKSLASH_ESCAPE]\n  };\n  hljs.PHRASAL_WORDS_MODE = {\n    begin: /\\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\\b/\n  };\n  hljs.COMMENT = function (begin, end, inherits) {\n    var mode = hljs.inherit(\n      {\n        className: 'comment',\n        begin: begin, end: end,\n        contains: []\n      },\n      inherits || {}\n    );\n    mode.contains.push(hljs.PHRASAL_WORDS_MODE);\n    mode.contains.push({\n      className: 'doctag',\n      begin: '(?:TODO|FIXME|NOTE|BUG|XXX):',\n      relevance: 0\n    });\n    return mode;\n  };\n  hljs.C_LINE_COMMENT_MODE = hljs.COMMENT('//', '$');\n  hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT('/\\\\*', '\\\\*/');\n  hljs.HASH_COMMENT_MODE = hljs.COMMENT('#', '$');\n  hljs.NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE,\n    relevance: 0\n  };\n  hljs.C_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.C_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.BINARY_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.BINARY_NUMBER_RE,\n    relevance: 0\n  };\n  hljs.CSS_NUMBER_MODE = {\n    className: 'number',\n    begin: hljs.NUMBER_RE + '(' +\n      '%|em|ex|ch|rem'  +\n      '|vw|vh|vmin|vmax' +\n      '|cm|mm|in|pt|pc|px' +\n      '|deg|grad|rad|turn' +\n      '|s|ms' +\n      '|Hz|kHz' +\n      '|dpi|dpcm|dppx' +\n      ')?',\n    relevance: 0\n  };\n  hljs.REGEXP_MODE = {\n    className: 'regexp',\n    begin: /\\//, end: /\\/[gimuy]*/,\n    illegal: /\\n/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      {\n        begin: /\\[/, end: /\\]/,\n        relevance: 0,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  hljs.TITLE_MODE = {\n    className: 'title',\n    begin: hljs.IDENT_RE,\n    relevance: 0\n  };\n  hljs.UNDERSCORE_TITLE_MODE = {\n    className: 'title',\n    begin: hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n  hljs.METHOD_GUARD = {\n    // excludes method names from keyword processing\n    begin: '\\\\.\\\\s*' + hljs.UNDERSCORE_IDENT_RE,\n    relevance: 0\n  };\n\n  return hljs;\n}));\n","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"blog\"}},[(_vm.year !== undefined)?_c('div',{attrs:{\"id\":\"blog-contents-element\"}},[_c('article',[_c('div',{staticClass:\"inner-title-container\"},[_c('h1',{attrs:{\"id\":\"inner-title\"}},[_vm._v(_vm._s(_vm.title))]),_c('div',{attrs:{\"id\":\"inner-date\"}},[_vm._v(_vm._s(_vm.year)+\".\"+_vm._s(_vm.month)+\".\"+_vm._s(_vm.day))])]),_c('div',{attrs:{\"id\":\"article-content\"},domProps:{\"innerHTML\":_vm._s(_vm.articleHtmlSource)}})]),_c('hr'),_c('div',{attrs:{\"id\":\"disqus_thread\"}})]):_c('div',_vm._l((_vm.index),function(i){return _c('div',{key:i,staticClass:\"blog-list-element\"},[_c('router-link',{staticClass:\"blog-title\",attrs:{\"to\":i.uri}},[_vm._v(_vm._s(i.title))]),_c('span',{staticClass:\"blog-date\"},[_vm._v(_vm._s(i.date))]),_c('hr',{staticClass:\"separate-line\"})],1)}))])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div id=\"blog\">\n    <div id=\"blog-contents-element\" v-if=\"year !== undefined\">\n      <article>\n        <div class=\"inner-title-container\">\n          <h1 id=\"inner-title\">{{ title }}</h1>\n          <div id=\"inner-date\">{{ year }}.{{ month }}.{{ day }}</div>\n        </div>\n        <div id=\"article-content\" v-html=\"articleHtmlSource\"></div>\n      </article>\n      <hr>\n      <div id=\"disqus_thread\"></div>\n    </div>\n    <div v-else>\n      <div class=\"blog-list-element\" v-for=\"i in index\" :key=\"i\">\n        <router-link :to=\"i.uri\" class=\"blog-title\">{{ i.title }}</router-link>\n        <span class=\"blog-date\">{{ i.date }}</span>\n\t\t\t\t<hr class=\"separate-line\">\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport HighlightJS from 'highlight.js/lib/highlight.js'\n//var HighlightJS = require(\"highlight.js/lib/highlight.js\");\n\n// Add languages manually to decrease size of my website\nHighlightJS.registerLanguage('bash', require('highlight.js/lib/languages/bash'));\nHighlightJS.registerLanguage('python', require('highlight.js/lib/languages/python'));\nHighlightJS.registerLanguage('vim', require('highlight.js/lib/languages/vim'));\nHighlightJS.registerLanguage('shell', require('highlight.js/lib/languages/shell'));\nHighlightJS.registerLanguage('go', require('highlight.js/lib/languages/go'));\nHighlightJS.registerLanguage('javascript', require('highlight.js/lib/languages/javascript'));\nHighlightJS.registerLanguage('django', require('highlight.js/lib/languages/django'));\n\n// eslint-disable-next-line\nimport _ from 'highlight.js/styles/xcode.css'\n\nexport default {\n  name: 'devRecordBlog',\n  metaInfo () {\n    if(this.title === undefined) {\n      return {\n        title: 'Blog',\n        meta: [\n          { charset: 'utf-8' },\n          {\n            'property': 'og:title',\n            'content': 'Blog',\n            'template': chunk => `${chunk} :: bkshin`,\n            'vmid': 'og:title'\n          },\n          {\n            'property': 'og:description',\n            'content': 'Article List',\n            'template': chunk => `${chunk}`,\n            'vmid': 'og:description'\n          },\n        ]\n      }\n    } else {\n      return {\n        title: this.titleForMeta,\n        meta: [\n          { charset: 'utf-8' },\n          {\n            'property': 'og:title',\n            'content': this.title,\n            'template': chunk => `${chunk} :: bkshin`,\n            'vmid': 'og:title'\n          },\n          {\n            'property': 'og:description',\n            'content': 'Thank you for reading my article ',\n            'template': chunk => `${chunk}`,\n            'vmid': 'og:description'\n          }\n        ]\n      }\n    }\n  },\n  \n  methods: {\n    \n      initDisqus: function(shortname, identifier, title, url) {\n      //config\n      if (typeof DISQUS === \"undefined\") {\n        (async () => {\n          var vars_text =\n            'var disqus_shortname  = \"' +\n            shortname +\n            '\";\\n' +\n            'var disqus_title      = \"' +\n            title +\n            '\";\\n' +\n            'var disqus_identifier = \"' +\n            identifier +\n            '\";\\n' +\n            'var disqus_url        = \"' +\n            url +\n            '\";\\n';\n          var vars_obj = document.createElement(\"script\");\n          vars_obj.type = \"text/javascript\";\n          vars_obj.async = true;\n          vars_obj.text = vars_text;\n          (\n            document.getElementsByTagName(\"head\")[0] ||\n            document.getElementsByTagName(\"body\")[0]\n          ).appendChild(vars_obj);\n          var dsq = document.createElement(\"script\");\n          dsq.type = \"text/javascript\";\n          dsq.async = true;\n          dsq.src = \"//\" + shortname + \".disqus.com/embed.js\";\n          (\n            document.getElementsByTagName(\"head\")[0] ||\n            document.getElementsByTagName(\"body\")[0]\n          ).appendChild(dsq);\n        })();\n      } else {\n        // eslint-disable-next-line\n        DISQUS.reset({\n          reload: true,\n          config: function() {\n            this.page.identifier = identifier;\n            this.page.url = url;\n            this.page.title = title;\n          }\n        });\n      }\n    },\n    \n    totheTop: function() {\n      document.body.scrollTop = 0; // For Safari\n      document.documentElement.scrollTop = 0; // For Chrome, Firefox, IE and Opera\n    },\n    \n    getPage: function() {\n      if (this.year === undefined) {\n        return;\n      }\n\n      // Load page after the scroll is on the top\n      this.totheTop();\n\n      var htmlDocUri = \n        '/blog_contents/dev_record/'\n        + this.year + '/'\n        + this.month + '/'\n        + this.day + '/'\n        + this.title + '.html';\n      fetch(htmlDocUri)\n        .then(response => response.text())\n        .then(responseText => this.articleHtmlSource = responseText);\n    }\n  }, \n  mounted: function() {\n    this.getPage();\n  },\n\n  updated: function() {\n    // Change file name to document's title\n    // When the page is an artice page, get blogContents\n    var blogContents = document.querySelector('#blog-contents-element');\n    if(blogContents == null){\n      //this.toTheTop();\n      return;\n    }\n    // Now, below scripts are for displaying an article,\n    // Not the blog main page which has lists of name of articles.\n    // Find all h1 tags, and choose second h1. It is real title of this doc.\n    var titles = blogContents.querySelectorAll('h1');\n    if(titles.length <= 1) {\n      return;\n    } else {\n      // Title exists\n      var title = blogContents.querySelector('#inner-title')\n      title.innerHTML = titles[1].innerHTML;\n      titles[1].style.display = \"none\";\n      // It is for og:title\n      this.titleForMeta = title.innerHTML;\n    }\n    \n    this.initDisqus(\n      \"bkshin\",\n      this.address.replace(this.domain, \"\"), // uri as an identifier\n      this.title,\n      this.address\n    );\n\n    // Find all code block and apply syntax highlighting\n    [].forEach.call(document.querySelectorAll('code'), function(el) {\n      HighlightJS.highlightBlock(el);\n    });\n  }, \n  \n  data() {\n    return {\n      // __INSERTION_POSITION__ // DONT CHANGE!!\n      index: \n[{\"title\":\"DATA - 3. Data Analysis Process\",\"author\":\"데이터 분석 프로세스는 아래와 같이 총 5단계로 진행됩니다.\\u003c/p\\u003e\\n\\u003cp\\u003eAsk Questions - Wrangle Data (gather, access, clean) - Perform EDA (Exploratory Data Analysis) - Draw conclusions (or even make predictions) - Communicate your results\\u003c/p\\u003e\\n\\u003col type=\\\"1\\\"\\u003e\\n\\u003cli\\u003e\\u003cp\\u003e\\u003cstrong\\u003eAsk Questions\\u003c/strong\\u003e\\u003cbr /\\u003e 주어진 데이터를 통해 어떤 분석을 할 수 있을지 질문해보는 단계입니다.\\u003c/p\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cp\\u003e\\u003cstrong\\u003eWrangle Data (gather, access, clean)\\u003c/strong\\u003e\\u003cbr /\\u003e 데이터를 수집하고, 데이터에 접근하고, 데이터 전처리를 하는 단계입니다. 데이터를 수집할 수 있는 방법은 여러가지가 있습니다. 웹 상에서 파일로 다운을 받거나, API를 통해 받아오거나, Web Scraping을 통해 가져오거나, 자체 DB에 저장된 파일을 SQL 등을 통해 받아올 수 있습니다. 데이터를 수집했으면 접근을 해야합니다. CSV 파일 등으로 열어볼 수 있겠죠. 데이터에 접근해보면 이상한 값들이 많이 있을 겁니다. Null 인 값, Type이 맞지 않는 값, 중복된 값 등... 이런 이상한 값들을 클리닝하는 작업이 필요합니다. Null 값은 평균 값으로 대체를 한다던지, 필요 없이 중복된 값은 제거한다던지, Type을 서로 맞춘다던지 해서요.\\u003cbr /\\u003e 물론 실제 현업에서는 이 클리닝 작업, 전처리 작업이 가장 복잡하다고 합니다. DAND 과정에서는 기본적으로 CSV 형태의 데이터를 클리닝하지만, 실제 현업에서는 CSV 형태로 담길 수 없을 정도로 더러운(?) 값들이 많이 있을 겁니다. 그 데이터를 CSV값에 잘 담아내고도 또 여러차례 손을 봐야겠죠. 어쨋든 본 과정은 기본 과정이므로 아주 아주 아주 간단한 형태의 클리닝 작업만 하는 것 같습니다.\\u003c/p\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cp\\u003e\\u003cstrong\\u003ePerform EDA (Exploratory Data Anaysis, 탐색적 데이터 분석)\\u003c/strong\\u003e\\u003cbr /\\u003e 탐색적 데이터 분석이란 데이터를 통해 중요한 의미와 정보를 찾아내는 방법론입니다. 주로 시각화 그래프를 통해 이뤄집니다. 시각화 그래프를 통해 중요한 의미와 정보, 인사이트를 발견해내는 작업을 보통 의미합니다만, 데이터 분석을 위한 철학, 마인드라고도 볼 수 있습니다. 어떤 데이터를 분석할지, 데이터를 어떻게 바라볼지, 어떻게 해석할지 등의 마인드 셋 등이 이에 해당합니다. \\u003ca href=\\\"https://www.itl.nist.gov/div898/handbook/eda/section1/eda11.htm\\\"\\u003e(Reference1)\\u003c/a\\u003e\\u003c/p\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cp\\u003e\\u003cstrong\\u003eDraw conclusions (or even make predictions)\\u003c/strong\\u003e\\u003cbr /\\u003e 분석을 통하여 결과를 도출하는 단계입니다. 이 단계에서는 통계도 필요할 것입니다. 본 과정에서는 통계를 간단히만 다룰 것 같습니다. 나중에 기회가 된다면 데이터 분석을 위한 통계도 따로 정리하여 올리겠습니다.\\u003c/p\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cp\\u003e\\u003cstrong\\u003eCommunicate your results\\u003c/strong\\u003e\\u003cbr /\\u003e 결과를 리포팅 하는 단계입니다. 데이터분석가에게 데이터분석도 중요하지만 도출된 결과를 타인에게 잘 전달하는 것, 리포트로 잘 정리하는 것도 중요할 것입니다.\\u003c/p\\u003e\\u003c/li\\u003e\\n\\u003c/ol\\u003e\\n\\u003ch3 id=\\\"pandas-기초-문법\\\"\\u003ePandas 기초 문법\\u003c/h3\\u003e\\n\\u003cp\\u003e판다스는 데이터 분석을 위한 파이썬 라이브러리입니다.\\u003c/p\\u003e\\n\\u003cp\\u003ePandas 공식 Document: \\u003ca href=\\\"http://pandas.pydata.org/pandas-docs/stable/\\\"\\u003e(Reference2)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e10 Minutes to pandas: \\u003ca href=\\\"http://pandas.pydata.org/pandas-docs/stable/getting_started/10min.html\\\"\\u003e(Reference3)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e기초 문법을 먼저 익히려면 10 Minutes을 보시면 됩니다. 아래는 제가 기억하려고 메모용 적어둔 것이니 무시하셔도 됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"python\\\"\\u003e\\u003ccode\\u003edf.info() # value 갯수, nullable, type 요약\\ndf.unique() # unique 값 갯수\\ndf.describe() # 통계 값\\ndf.loc[:, \\u0026#39;id\\u0026#39;:\\u0026#39;name\\u0026#39;] # index 명, columns 명으로 값 조회\\ndf.iloc[:3, 4:5] # index로 값 조회\\n\\n# null 값을 평균으로 채우기\\nmean = df[\\u0026#39;column\\u0026#39;].mean()\\ndf[\\u0026#39;column\\u0026#39;] = df[\\u0026#39;column\\u0026#39;].fillna(mean)\\n\\ndf.to_csv(\\u0026#39;data_means.csv\\u0026#39;, index=False) # index제외하고 csv 파일로 저장\\n\\nsum(df.duplicated()) # 중복된 행의 갯수\\n\\ndf.drop_duplicates(inplace=True) # 중복된 행 제거, 현재 df에 적용\\n\\ndf[\\u0026#39;timestamp\\u0026#39;] = pd.to_datetime(df[\\u0026#39;timestamp\\u0026#39;]) # 데이터 타입 변경, dataFrame에서 object는 string 타입임\\n\\n# 새로운 column labels 지정\\nnew_labels [ \\u0026#39;id\\u0026#39;, \\u0026#39;name\\u0026#39;, \\u0026#39;birthday\\u0026#39;]\\ndf.columns = new_labels\\n\\n% matplotlib inline\\n\\n# dataFrame histogram\\ndf.hist(figsize=(8,8));\\n\\n# series histogram, 아래 두개는 같은 기능\\ndf[\\u0026#39;age\\u0026#39;].hist();\\ndf[\\u0026#39;age\\u0026#39;].plot(kind=\\u0026#39;hist\\u0026#39;);\\n\\n# age columns안에서 unique value의 갯수 총합\\ndf[\\u0026#39;age\\u0026#39;].value_counts()\\n\\n# 위 데이터로 bar 차트 그리기\\ndf[\\u0026#39;age\\u0026#39;].value_counts().plot(kind=\\u0026#39;bar\\u0026#39;, figzise=(8,8));\\n\\npd.plotting.scatter_matrix(df, figsize=(15,15));\\n\\n# x, y column을 지정하고 scatter 그래프 그리기\\ndf.plot(x=\\u0026#39;age\\u0026#39;, y=\\u0026#39;height\\u0026#39;, kind=\\u0026#39;scatter\\u0026#39;);\\n\\n# diagnosis == M 인 행으로 구성된 df_m 생성\\ndf_m = df[df[\\u0026#39;diagnosis\\u0026#39;] == \\u0026#39;M\\u0026#39;]\\n# cf. df[df[\\u0026#39;week\\u0026#39;] \\u0026gt;= \\u0026#39;2017-12-01\\u0026#39;]\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/03/27/data-dataAnalysisProcess/\",\"date\":\"2019/03/27\"},{\"title\":\"DATA - 2. Jupyter Notebooks\",\"author\":\"파이썬으로 데이터분석하는 사람들에게 주피터는 너무나 유명해서 자세한 설명은 생략하겠습니다. Jupyter는 \\u003cstrong\\u003eJu\\u003c/strong\\u003elia, \\u003cstrong\\u003ePyt\\u003c/strong\\u003ehon, \\u003cstrong\\u003eR\\u003c/strong\\u003e의 약자입니다. 주피터 노트북은 text document, code, 수식, 그래프, 코드 결과를 하나의 파일 (.ipynb)에 담을 수 있는 장점이 있습니다. 기존 방식대로라면 text document는 word 파일에, code는 code editor에 담아야 했고, 그래프 등의 시각화자료는 별도의 창에서 볼 수 있었습니다. \\u003ca href=\\\"https://github.com/mcleonard/blog_posts/blob/master/body_fat_percentage.ipynb\\\"\\u003e(Reference1)\\u003c/a\\u003e을 보시면 이해가 쉽게 갈 겁니다.\\u003c/p\\u003e\\n\\u003cp\\u003e주피터 노트북의 동작원리는 아래와 같습니다. 브라우저에 코드를 입력해주면 주피터 서버에서 처리를 해주고 결과 값을 브라우저에 렌더링해줍니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/03/22/DAND2_1.PNG\\\" alt=\\\"Jupyter 동작원리\\\" /\\u003e\\u003cfigcaption\\u003eJupyter 동작원리\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003ch3 id=\\\"jupyter-notebook-설치-및-실행\\\"\\u003eJupyter Notebook 설치 및 실행\\u003c/h3\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda install jupyter notebook\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 코드로 주피터 노트북을 설치할 수 있습니다. 아래 코드는 방금 설치한 주피터 노트북을 실행합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ejupyter notebook\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e기본적으로 주소를 보면 localhost:8888로 되어 있을 겁니다. 저는 localhost:8888을 사용하고 있어 localhost:8889라고 뜹니다. Files에는 컴퓨터 환경에 따라 여러 파일 및 폴더가 보일 수 있습니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/03/22/DAND2_2.PNG\\\" alt=\\\"Jupyter notebook 실행화면\\\" /\\u003e\\u003cfigcaption\\u003eJupyter notebook 실행화면\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003e주피터 노트북에서 Conda를 사용하기 위해 prompt에 notebook conda를 설치합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda install nb_conda\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003enb_conda 설치 후 다시 주피터 노트북을 실행해보면 Files, Running, Clusters 이외에 Conda 툴바가 나타납니다. 주피터를 통해 Conda 환경을 관리할 수 있는 메뉴입니다. 주피터의 Conda 메뉴에서 가상환경을 만들고 패키지를 설치하고 업그레이드하고 가상환경을 내보내기 등을 할 수 있습니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"jupyter-notebook-사용법\\\"\\u003eJupyter notebook 사용법\\u003c/h3\\u003e\\n\\u003cp\\u003e주피터 노트북의 툴바를 이것 저것 써보면 어떤 기능을 하는지 쉽게 알 수 있습니다. 오른쪽 위에 조그만 동그라미가 있습니다. 코드가 실행 중일 때는 까만 동그라미로 바뀝니다. 대부분의 코드는 금방 실행이 되기 때문에 까만 동그라미를 오래 보기 힘듭니다. 시간이 오래걸리는 코드에서는 까만 동그라미를 볼 수 있기 때문에 동그라미를 통해 코드가 실행중인지 아닌지를 알 수 있습니다. Command palette (오른쪽 조그마한 키보드 모양)에서는 다양한 command를 검색하고 실행할 수 있습니다. 보다 자세한 사용법은 \\u003ca href=\\\"https://jupyter-notebook.readthedocs.io/en/latest/examples/Notebook/Notebook%20Basics.html#The-Notebook-dashboard\\\"\\u003e(Reference2)\\u003c/a\\u003e를 참고하시기 바랍니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"markdown\\\"\\u003eMarkdown\\u003c/h3\\u003e\\n\\u003cp\\u003e주피터 노트북의 cell에는 Markdown 기능이 있습니다. Markdown 문법을 정말 몇개 없어서 쉽게 익힐 수 있습니다. \\u003ca href=\\\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\\\"\\u003e(Reference3)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003ch3 id=\\\"latex\\\"\\u003eLaTeX\\u003c/h3\\u003e\\n\\u003cp\\u003e데이터 분석을 하다보면 수식을 사용해야할 때가 많습니다. 주피터 노트북에서는 LaTeX를 이용해 쉽게 수식을 표현할 수 있습니다. \\u003ca href=\\\"https://www.latex-tutorial.com/\\\"\\u003e(Reference4)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre\\u003e\\u003ccode\\u003e\\\\begin{align}\\nf(x) \\u0026amp;= x^2\\\\\\\\\\nf\\u0026#39;(x) \\u0026amp;= 2x\\\\\\\\\\nF(x) \\u0026amp;= \\\\int f(x)dx\\\\\\\\\\nF(x) \\u0026amp;= \\\\frac{1}{3}x^3\\n\\\\end{align}\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/03/22/DAND2_6.PNG\\\" alt=\\\"LaTeX Examples\\\" /\\u003e\\u003cfigcaption\\u003eLaTeX Examples\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003ch3 id=\\\"magic-keywords\\\"\\u003eMagic keywords\\u003c/h3\\u003e\\n\\u003cp\\u003e매직키워드는 주피터 노트북 cell에서 사용할 수 있는 특별한 커맨드입니다. %혹은 %%로 시작합니다. (%는 해당 line에서만 적용되는 line magics, %%는 cell 전체에서 적용되는 cell magics입니다.)\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003e%timeit\\u003c/code\\u003e 은 해당 라인의 코드가 실행되는데 걸리는 시간을 계산해줍니다. (아래 예시 참고)\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/03/22/DAND2_3.png\\\" alt=\\\"%timeit Examples\\\" /\\u003e \\u003ccode\\u003e%%timeit\\u003c/code\\u003e은 cell 전체의 코드가 실행되는데 걸리는 시간을 계산해줍니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/03/22/DAND2_4.png\\\" alt=\\\"%%timeit Examples\\\" /\\u003e\\u003cfigcaption\\u003e%%timeit Examples\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003e아래의 Magic Keyword를 쓰면 matplotlib으로 그래프를 그릴 때 고화질로 그려줍니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/03/22/DAND2_5.png\\\" alt=\\\"retina Example\\\" /\\u003e\\u003cfigcaption\\u003eretina Example\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003e이 Magic Keyword를 통해 디버거를 사용할 수 있습니다. \\u003ca href=\\\"https://docs.python.org/3/library/pdb.html\\\"\\u003e(Reference5)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"python\\\"\\u003e\\u003ccode\\u003e%pdb\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003ch3 id=\\\"다른-파일로-converting하기\\\"\\u003e다른 파일로 Converting하기\\u003c/h3\\u003e\\n\\u003cp\\u003e주피터 노트북은 JSON파일입니다. JSON파일을 다른 파일로 변환할 수 있듯이 \\u003ccode\\u003enbconvert\\u003c/code\\u003e를 활용하여 노트북을 다른 파일로 쉽게 변경할 수 있습니다. 아래 코드는 주피터 노트북 파일을 HTML로 변환하는 코드입니다. \\u003ca href=\\\"https://nbconvert.readthedocs.io/en/latest/usage.html\\\"\\u003e(Reference6)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ejupyter nbconvert --to html notebook.ipynb\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e아래 코드는 notebook 파일을 slide로 변환해줍니다. 이는 주피터 노트북에서 View - Cell Toolbar - Slideshow를 누르는 것과 같은 기능입니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ejupyter nbconvert notebook.ipynb --to slides\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/03/22/data-installJupyther/\",\"date\":\"2019/03/22\"},{\"title\":\"DATA - 1. Anaconda\",\"author\":\"Anaconda란?\\u003c/h3\\u003e\\n\\u003cp\\u003eAnaconda(아나콘다)는 \\u003cstrong\\u003e데이터 사이언스\\u003c/strong\\u003e를 위한 패키지 배포판입니다. Windows, Linux, Mac OS 환경에서 사용가능하며, conda라는 package, environment 매니저를 사용합니다. conda를 이용해서 서로 다른 버전의 파이썬 (python2, python3)이나 서로 다른 패키지 등을 쓰는 독립적인 프로젝트 환경을 만들 수 있습니다. 그렇게 만들어진 환경 안에서 원하는 패키지를 설치, 삭제, 업데이트할 수 있습니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"anaconda-설치\\\"\\u003eAnaconda 설치\\u003c/h3\\u003e\\n\\u003cp\\u003e우선, \\u003ca href=\\\"https://www.anaconda.com/download/\\\"\\u003e(Refercence1)\\u003c/a\\u003e 본 링크에서 Anaconda를 다운받습니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/03/20/DAND1_1.PNG\\\" alt=\\\"Download Anaconda\\\" /\\u003e\\u003cfigcaption\\u003eDownload Anaconda\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003epython2 말고 python3 버전을 받되, 본인의 환경에 맞는 것을 다운 받습니다. 저는 windows 64-bit 버전을 받았습니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch3 id=\\\"프로그램-설명-및-초기-설정\\\"\\u003e프로그램 설명 및 초기 설정\\u003c/h3\\u003e\\n\\u003cp\\u003eAnaconda를 설치하면 여러 프로그램이 깔릴 겁니다.\\u003c/p\\u003e\\n\\u003col type=\\\"1\\\"\\u003e\\n\\u003cli\\u003e\\u003cstrong\\u003eAnaconda Navigator\\u003c/strong\\u003e: environment와 packages를 관리하는 GUI입니다.\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cstrong\\u003eAnaconda Prompt\\u003c/strong\\u003e: CLI를 사용할 수 있는 터미널입니다.\\u003c/li\\u003e\\n\\u003cli\\u003e\\u003cstrong\\u003eSpyder\\u003c/strong\\u003e: IDE 입니다.\\u003c/li\\u003e\\n\\u003c/ol\\u003e\\n\\u003cp\\u003eAnaconda Prompt를 실행해서 추후 발생할 수 있는 오류를 피하기 위해 아래와 같이 업그레이드를 해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda upgrade conda\\nconda upgrade --all\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e사실 \\u003ccode\\u003e--all\\u003c/code\\u003e에는 \\u003ccode\\u003econda\\u003c/code\\u003e가 포함되어 있지만 일부 환경에서는 오류가 있을 수 있어 위와 같이 해주는 것입니다. 설치 및 업그레이드는 시간이 다소 소요됩니다.\\u003c/p\\u003e\\n\\u003cp\\u003ezsh를 사용하고 있고 \\u0026quot;conda command not found\\u0026quot;가 뜬다면 .zsh_config에 아래 코드를 추가해주면 해결됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003eexport PATH=\\u0026quot;/Users/username/anaconda/vin:$PATH\\u0026quot;\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e\\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch3 id=\\\"conda를-활용한-패키지-관리\\\"\\u003eConda를 활용한 패키지 관리\\u003c/h3\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e현재 설치되어 있는 패키지 보기\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda list\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이 코드는 현재 environment에 설치된 모든 패키지를 나열해줍니다.\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e패키지 설치\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda install package_name\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e예를 들어 numpy를 설치하려면 아래와 같이 입력해주면 됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda install numpy\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e패키지를 차례로 나열하면 여러 패키지를 동시에 설치에 설치할 수 있습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda install numpy pandas scipy\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003escipy 패키지는 numpy 패키지를 필요로 합니다. 즉, scipy를 사용하기 위해서는 scipy뿐만 아니라 numpy도 설치를 해야한다는 뜻입니다. Conda는 dependency가 있는 패키지를 자동으로 설치해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda install scipy\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e와 같이 scipy를 설치하면 자동으로 numpy도 설치해줍니다. 즉, 위 코드와 아래 코드는 동일하게 작용합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda install scipy numpy\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e아래와 같이 패키지의 버전을 지정해줄 수도 있습니다. 버전 지정을 안하면 가장 최신 버전으로 설치합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda install numpy=1.10\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e패키지 삭제\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda remove package_name\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e패키지 업그레이드\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda upgrade package_name\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e현재 설치되어 있는 모든 패키지 업그레이드는 아래와 같이 합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda upgrade --all\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e\\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch3 id=\\\"conda를-활용한-가상환경-관리\\\"\\u003eConda를 활용한 가상환경 관리\\u003c/h3\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e가상환경 생성\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda create -n environment_name list_of_packages\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e-n 은 name을 뜻합니다. \\u003ccode\\u003eenvironment_name\\u003c/code\\u003e에 원하는 가상환경 이름을 적어주고 list_of_packages에 해당 가상환경에 설치할 패키지를 적어줍니다.\\u003c/p\\u003e\\n\\u003cp\\u003e예를 들면 아래와 같습니다. pandas 패키지가 설치된 my_env라는 이름을 가진 가상환경을 만들어줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda create -n my_env pandas\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e가상환경 실행\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda activate my_env\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e가상환경 종료\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003e# on Windonws\\nconda deactivate\\n\\n# on MAC, Linux\\nsource deactivate\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e가상환경 삭제\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda env remove -n env_name\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e현재 설치된 가상환경 보기\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda env list\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e가상환경 파일로 내보내기\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda env export \\u0026gt; environment.yaml\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e외부의 yaml 파일을 통해 가상환경 만들기\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003econda env create -f environment.yaml\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e기본적인 conda 명령어에 대해 알아봤습니다. 그 이외의 명령어는 \\u003ca href=\\\"https://docs.conda.io/projects/conda/en/latest/user-guide/cheatsheet.html\\\"\\u003econda cheat sheet\\u003c/a\\u003e를참고하시기 바랍니다.\\u003c/p\\u003e\\n\\u003cp\\u003e아래는 Conda에 관한 오해에 대한 아티클입니다. 원문은 굉장히 긴데 큼직한 몇개만 옮겨 적었습니다. 재미삼아 읽어보셔도 좋습니다. :)\\u003c/p\\u003e\\n\\u003ch3 id=\\\"conda-myths-and-misconceptions\\\"\\u003eConda: Myths and Misconceptions\\u003c/h3\\u003e\\n\\u003cp\\u003e\\u003ca href=\\\"https://jakevdp.github.io/blog/2016/08/25/conda-myths-and-misconceptions/\\\"\\u003e(Reference2)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eMyth #1: Conda는 패키지 매니저가 아니라 배포판(distribution)이다?\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eConda는 패키지 매니저이고, Anaconda는 배포판입니다. Conda가 Anaconda에 패키징되어있긴 합니다만, 둘은 서로 다른 목적을 가진 별개의 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eMyth #2: Conda는 Python 패키지 매니저다? \\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eConda는 범용적인 패키지 매니저입니다. Python 패키지들이 주로 사용되긴 하지만 모든 언어에서 사용가능한 패키지 매니저입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eMyth #3: Conda와 pip는 직접적인 경쟁자다?\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003epip (\\u003cstrong\\u003eP\\u003c/strong\\u003eip \\u003cstrong\\u003eI\\u003c/strong\\u003enstalls \\u003cstrong\\u003eP\\u003c/strong\\u003eackages)는 Python의 공식 패키지 매니저입니다. Conda와 pip는 서로 다른 목적을 가졌습니다. 다만, \\u003cu\\u003e독립된 환경에 Python 패키지를 설치하는데에 있어서만\\u003c/u\\u003e 경쟁자입니다. 말이 좀 이상하지만, 독립된 환경에서 Python 패키지를 설치하는데에는 Conda와 pip 둘 다 쓸 수 있다는 뜻입니다. 구분을 하자면, pip는 어떠한 환경에서나 Python 패키지를 설치할 수 있고 (only Python packages within \\u003cem\\u003eany\\u003c/em\\u003e environment), conda는 conda 환경에서 어떠한 패키지나 설치할 수 있습니다. (\\u003cem\\u003eany\\u003c/em\\u003e package within conda environment)\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eMyth #4: Conda는 가상환경에서 작동하지 않는다? \\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e몇개의 Conda 패키지는 가상환경에서 설치할 수 있습니다. 다만 Conda 고유의 환경 매니저를 사용하는 것이 더 좋습니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eMyth #5: Conda는 open source가 아니다?\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eConda는 100% open source입니다. Anaconda도 거의 open source입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eMyth #6: Conda 패키지 자체는 closed source이다?\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eConda 채널은 완전히 open되어 있지는 않습니다. Conda 패키지와 배포판을 완전 오픈하기 위한 커뮤니티를 구성하고자 노력하고 있습니다.\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/03/20/data-installAnaconda/\",\"date\":\"2019/03/20\"},{\"title\":\"Data Analyst NanoDgree\",\"author\":\"Data Analyst NanoDgree (DAND)\\u003c/h3\\u003e\\n\\u003cp\\u003e데이터 분석 공부를 체계적으로 하고 싶어 여러 사이트 및 학원을 알아봤습니다. 패스트캠퍼스 같은 오프라인 교육부터 코세라, 유데미, 유다시티, K-MOOC와 같은 온라인 교육까지 꼼꼼히 비교를 해봤습니다. 우선 오프라인 교육은 단기 교육이 많습니다. 키포인트 위주로 배울 뿐이지 많은 양을 체계적으로 학습할 수 있을 것 같진 않았습니다. K-MOOC는 사이트를 들어가자 마자 나왔습니다. 관리를 거의 안하고 있고, 컨텐츠도 퀄리티가... 코세라는 무료 강좌지만 교수가 한 강좌 전체를 강의하기 때문에 다양성 혹은 체계성이 부족할 것이라 생각했습니다. (물론 추후에 집중 심화 학습할 땐 상당히 유용할 것 같았습니다.) 유데미는 다양한 주제의 단기 과정이 많아 저의 취지와는 맞지 않았습니다.\\u003c/p\\u003e\\n\\u003cp\\u003e그래서 최종적으로 Udacity \\u003ca href=\\\"https://www.udacity.com/\\\"\\u003e(reference1)\\u003c/a\\u003e 를 선택했습니다. 커리큘럼이 체계적이었고, 이론과 프로젝트를 병행하는 구성이었습니다. 3개월에 100만원이라는 적지 않은 금액이었지만 퀄리티가 좋아보여 질렀습니다. 할 말이 조금 더 있는데 더 말하면 광고하는 것 같아서 그만하겠습니다.\\u003c/p\\u003e\\n\\u003cp\\u003e블로그 프로젝트와 마찬가지로 공부하면서 정리한 내용을 차례대로 올리겠습니다.\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/03/17/data-DAND/\",\"date\":\"2019/03/17\"},{\"title\":\"BLOG - 16. 라우팅\",\"author\":\"라우팅이란?\\u003c/h3\\u003e\\n\\u003cp\\u003e라우팅(routing)이란 네트워크 안에서 통신 데이터를 보낼 경로를 선택하는 과정입니다. \\u003ca href=\\\"https://ko.wikipedia.org/wiki/%EB%9D%BC%EC%9A%B0%ED%8C%85\\\"\\u003e(Reference1)\\u003c/a\\u003e 예를 들어보겠습니다. 서울에서 부산까지 가는 길은 여러 개가 있습니다. \\u0026quot;그중 이 경로를 통해서 서울에서 부산까지 가라!\\u0026quot;라고 지정해주는 것이 라우팅입니다. 마찬가지로 블로그에는 여러 메뉴바가 있을 겁니다. 이 메뉴바를 클릭하면 이 페이지로 가고, 저 메뉴바를 클릭하면 저 페이지로 가라! 라고 지정을 해주는 것입니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"블로그에-라우팅-적용\\\"\\u003e블로그에 라우팅 적용\\u003c/h3\\u003e\\n\\u003cp\\u003eterrace 디렉토리에서 아래와 같이 vue-router를 설치해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003enpm install vue-router\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003efrontend/home/src 디렉토리의 App.vue를 아래와 같이 수정합니다. 코드를 먼저 나열한 뒤 마지막에 설명하겠습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"django\\\"\\u003e\\u003ccode\\u003e\\u0026lt;template\\u0026gt;\\n  \\u0026lt;div id=\\u0026quot;app\\u0026quot;\\u0026gt;\\n    \\u0026lt;H1 class=\\u0026quot;blog-title\\u0026quot;\\u0026gt; Blog Example \\u0026lt;/H1\\u0026gt;\\n    \\u0026lt;nav\\u0026gt;\\n      \\u0026lt;router-link class=\\u0026quot;menu-bar\\u0026quot; to=\\u0026quot;/\\u0026quot;\\u0026gt;Home\\u0026lt;/router-link\\u0026gt;\\n      \\u0026lt;router-link class=\\u0026quot;menu-bar\\u0026quot; to=\\u0026quot;/about/\\u0026quot;\\u0026gt;About\\u0026lt;/router-link\\u0026gt;\\n      \\u0026lt;router-link class=\\u0026quot;menu-bar\\u0026quot; to=\\u0026quot;/blog/\\u0026quot;\\u0026gt;Blog\\u0026lt;/router-link\\u0026gt;\\n    \\u0026lt;/nav\\u0026gt;\\n    \\u0026lt;router-view\\u0026gt;\\u0026lt;/router-view\\u0026gt;\\n  \\u0026lt;/div\\u0026gt;\\n\\u0026lt;/template\\u0026gt;\\n\\n\\u0026lt;script\\u0026gt;\\nimport Main from \\u0026#39;./components/Main.vue\\u0026#39;\\nexport default {\\n  name: \\u0026#39;app\\u0026#39;,\\n  components: {\\n    \\u0026#39;main\\u0026#39;: Main\\n  }\\n}\\n\\u0026lt;/script\\u0026gt;\\n\\n\\u0026lt;style\\u0026gt;\\n#app {\\n  font-family: \\u0026#39;Avenir\\u0026#39;, Helvetica, Arial, sans-serif;\\n  text-align: center;\\n  color: #2c3e50;\\n  margin-top: 60px;\\n}\\n.menu-bar {\\n  padding: 10px;\\n}\\n\\u0026lt;/style\\u0026gt;\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이해를 도모하고자 App.vue 전체 소스코드를 적어드렸습니다. 여기서 routing과 관련된 부분은 아래와 같습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"django\\\"\\u003e\\u003ccode\\u003e    \\u0026lt;nav\\u0026gt;\\n      \\u0026lt;router-link class=\\u0026quot;menu-bar\\u0026quot; to=\\u0026quot;/\\u0026quot;\\u0026gt;Home\\u0026lt;/router-link\\u0026gt;\\n      \\u0026lt;router-link class=\\u0026quot;menu-bar\\u0026quot; to=\\u0026quot;/about/\\u0026quot;\\u0026gt;About\\u0026lt;/router-link\\u0026gt;\\n      \\u0026lt;router-link class=\\u0026quot;menu-bar\\u0026quot; to=\\u0026quot;/blog/\\u0026quot;\\u0026gt;Blog\\u0026lt;/router-link\\u0026gt;\\n    \\u0026lt;/nav\\u0026gt;\\n    \\u0026lt;router-view\\u0026gt;\\u0026lt;/router-view\\u0026gt;\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e기본적으로 router-link는 a태그로 렌더링이 됩니다. Home은 bkshin.com/으로, About은 bkshin.com/about/으로 Blog는 bkshin.com/blog/로 각각 라우팅이 됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"django\\\"\\u003e\\u003ccode\\u003e\\u0026lt;router-view\\u0026gt;\\u0026lt;/router-view\\u0026gt;\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e는 현재 라우트에 맞는 컴포넌트를 렌더링 시켜줍니다. 즉, 이 코드가 있어야 화면에 router-link가 보인다는 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003emain.js는 아래와 같이 수정합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"javascript\\\"\\u003e\\u003ccode\\u003eimport Vue from \\u0026#39;vue\\u0026#39;\\nimport App from \\u0026#39;./App.vue\\u0026#39;\\nimport router from \\u0026#39;./router.js\\u0026#39;\\n\\nVue.config.productionTip = false\\n\\nnew Vue({\\n  router,\\n  render: h =\\u0026gt; h(App),\\n}).$mount(\\u0026#39;#app\\u0026#39;)\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이 코드에 대해서 간단히 알아보겠습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"js\\\"\\u003e\\u003ccode\\u003erender: h =\\u0026gt; h(App)\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cpre class=\\\"js\\\"\\u003e\\u003ccode\\u003erender: function (h) {\\n    return h(App);\\n}\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 두 코드는 같은 의미입니다. (ES6 \\u0026quot;fat arrow\\u0026quot; Syntax) 여기서 h는 \\u003cstrong\\u003ehyperscript\\u003c/strong\\u003e를 의미합니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e\\u003cem\\u003eHyperscript itself stands for \\u0026quot;script that generates HTML structures\\u0026quot;\\u003c/em\\u003e\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eimport로 가지고 온 App 컴포넌트를 h(App)에 넣어주면 되고, App.vue에서의 'app' 부분이 #app에 들어갑니다. app 컴포넌트를 마운트해준다는 뜻입니다. (이를 위해서는 vue lifecycle을 이해해야 합니다. \\u003ca href=\\\"https://kr.vuejs.org/v2/guide/instance.html\\\"\\u003e(Reference1)\\u003c/a\\u003e) 또한 router를 import해서 Vue 객체 안에 넣어줌으로써 router를 사용할 수 있습니다.\\u003c/p\\u003e\\n\\u003cp\\u003erouter.js라는 js파일을 만들어 아래 코드를 입력합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"javascript\\\"\\u003e\\u003ccode\\u003eimport Vue from \\u0026#39;vue\\u0026#39;;\\nimport Router from \\u0026#39;vue-router\\u0026#39;;\\n\\nimport Main from \\u0026#39;./components/Main.vue\\u0026#39;\\nimport About from \\u0026#39;./components/About.vue\\u0026#39;\\nimport Blog from \\u0026#39;./components/Blog.vue\\u0026#39;\\n\\nVue.use(Router)\\n\\nexport default new Router({\\n  routes: [\\n    {\\n      path: \\u0026#39;/\\u0026#39;,\\n      name: \\u0026#39;Main\\u0026#39;,\\n      component: Main\\n    },\\n    {\\n      path: \\u0026#39;/About\\u0026#39;,\\n      name: \\u0026#39;About\\u0026#39;,\\n      component: About\\n    },\\n    {\\n      path: \\u0026#39;/Blog\\u0026#39;,\\n      name: \\u0026#39;Blog\\u0026#39;,\\n      component: Blog\\n    }\\n  ]\\n});\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e앞서 설명드렸듯이 라우팅이란 경로를 지정해주는 작업이라 했습니다. 각 컴포넌트 (Main, About, Blog)별로 path를 지정해줍니다.\\u003c/p\\u003e\\n\\u003cp\\u003e이제, component 디렉토리안의 \\u003ccode\\u003eHelloworld.vue\\u003c/code\\u003e는 삭제해주시고, Main.vue, About.vue, Blog.vue를 만들어 줍니다.\\u003c/p\\u003e\\n\\u003cp\\u003eMain.vue\\u003c/p\\u003e\\n\\u003cpre class=\\\"django\\\"\\u003e\\u003ccode\\u003e\\u0026lt;template\\u0026gt;\\n  \\u0026lt;div class=\\u0026quot;main\\u0026quot;\\u0026gt;\\n    \\u0026lt;p\\u0026gt;This is Main Page!\\u0026lt;/p\\u0026gt;\\n    \\u0026lt;img alt=\\u0026quot;Vue log\\u0026quot; src=\\u0026quot;../assets/logo.png\\u0026quot;\\u0026gt;\\n  \\u0026lt;/div\\u0026gt;\\n\\u0026lt;/template\\u0026gt;\\n\\n\\u0026lt;script\\u0026gt;\\nexport default {\\n  name: \\u0026#39;main\\u0026#39;,\\n}\\n\\u0026lt;/script\\u0026gt;\\n\\n\\u0026lt;style scoped\\u0026gt;\\n\\u0026lt;/style\\u0026gt;\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eAbout.vue\\u003c/p\\u003e\\n\\u003cpre class=\\\"django\\\"\\u003e\\u003ccode\\u003e\\u0026lt;template\\u0026gt;\\n  \\u0026lt;div class=\\u0026quot;about\\u0026quot;\\u0026gt;\\n    \\u0026lt;p\\u0026gt;This is About Page!\\u0026lt;/p\\u0026gt;\\n  \\u0026lt;/div\\u0026gt;\\n\\u0026lt;/template\\u0026gt;\\n\\n\\u0026lt;script\\u0026gt;\\nexport default {\\n  name: \\u0026#39;about\\u0026#39;,\\n}\\n\\u0026lt;/script\\u0026gt;\\n\\n\\u0026lt;style scoped\\u0026gt;\\n\\u0026lt;/style\\u0026gt;\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eBlog.vue\\u003c/p\\u003e\\n\\u003cpre class=\\\"django\\\"\\u003e\\u003ccode\\u003e\\u0026lt;template\\u0026gt;\\n  \\u0026lt;div class=\\u0026quot;blog\\u0026quot;\\u0026gt;\\n    \\u0026lt;p\\u0026gt;This is blog Page!\\u0026lt;/p\\u0026gt;\\n  \\u0026lt;/div\\u0026gt;\\n\\u0026lt;/template\\u0026gt;\\n\\n\\u0026lt;script\\u0026gt;\\nexport default {\\n  name: \\u0026#39;blog\\u0026#39;,\\n}\\n\\u0026lt;/script\\u0026gt;\\n\\n\\u0026lt;style scoped\\u0026gt;\\n\\u0026lt;/style\\u0026gt;\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e간단히 테스트를 하기 위해서는 home 디렉토리에서 \\u003ccode\\u003enpm run serve\\u003c/code\\u003e를 해서 localhost로 접속해 확인해주고, 원하는 결과가 나오면 최종적으로 빌드하고 배포하시면 됩니다.\\u003c/p\\u003e\\n\\u003cp\\u003e확인해보시면 아래와 같이 라우팅이 잘 되는 것을 볼 수 있습니다. 홈 버튼을 누르면 Main 컴포넌트가 소개 버튼을 누르면 About 컴포넌트가 책과 사유 버튼을 누르면 Blog 컴포넌트가 정상적으로 렌더링됩니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"http://cdn.bkshin.com/devRecord/2019/03/10/16_1.PNG\\\" alt=\\\"routing sample 화면\\\" /\\u003e\\u003cfigcaption\\u003erouting sample 화면\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003e개념 설명을 하기 위한 예시 블로그이므로 디자인 작업은 하지 않았으니 원리 이해에만 참고하시기 바랍니다.\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/03/10/blog-routing/\",\"date\":\"2019/03/10\"},{\"title\":\"BLOG - 15. 블로그 세팅 마무리\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/03/03/blog-blogSettingFinish/\",\"date\":\"2019/03/03\"},{\"title\":\"BLOG - 14. S3 배포 및 Redirect\",\"author\":\"지금까지 로컬의 작업물을 EC2로 올리는 방법을 배웠습니다. EC2보다는 S3가 더 저렴하므로 이를 S3로 옮겨보겠습니다. 그전에 도메인을 하나 구매해보겠습니다. name cheap 사이트에 들어가 각자가 원하는 도메인 주소를 구매한 뒤 도메인과 ip를 연결해봅시다. 13.125.232.34를 bkshin.com과 연결을 하는 작업입니다. 이에 대해서는 간단한 구글링을 통해서도 알 수 있으므로 여기서 디테일하게 다루지는 않겠습니다. 도메인을 ip와 연결했다는 가정하에 진행하겠습니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"s3-버킷-만들기\\\"\\u003e\\u003cstrong\\u003eS3 버킷 만들기\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003e우선, AWS S3 버킷을 만들어야 합니다. AWS S3에서 '버킷 만들기'를 누릅니다.\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e이름 및 리전\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e버킷 이름: bkshin.com (도메인 이름)\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e옵션 구성\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003eDefault 설정\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003e권한 설정\\u003cbr /\\u003e 4개 체크 모두 해제\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003eS3 버킷을 만든 뒤 '속성'에 들어가 '정적 웹 호스팅'을 클릭합니다. '이 버킷을 사용하여 웹 사이트를 호스팅합니다.'를 누른 뒤 index.html을 적고 저장합니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003eHello, world!\\u003c/code\\u003e가 적힌 index.html을 S3에 업로드 합니다. 이때 '권한설정'의 '퍼블릭 권한 관리'에서 '이 객체에 퍼블릭 읽기 액세스 권한을 부여함'을 선택합니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"s3를-cloudfront로-접속하기\\\"\\u003eS3를 Cloudfront로 접속하기\\u003c/h3\\u003e\\n\\u003cp\\u003eS3로 직접 접근하는 것보다 Cloudfront를 통해 S3로 접근하는 것이 더 저렴하기 때문에 Cloudfront를 이용하겠습니다. 우선 AWS Cloudfront에 들어갑니다. 'Create Distribution'을 클릭한 뒤 Web의 Get Started를 누릅니다.\\u003c/p\\u003e\\n\\u003cp\\u003eOrigin Domain Name: bkshin.com.s3.amazonaws.com\\u003c/p\\u003e\\n\\u003cp\\u003eRestrict Bucket Access: Yes\\u003c/p\\u003e\\n\\u003cp\\u003eOrigin Access Identity: Create a New Identity\\u003c/p\\u003e\\n\\u003cp\\u003eGrant Read Permissions on Bucket: Yes, Update Bucket Policy\\u003c/p\\u003e\\n\\u003cp\\u003eDistribution Settings의 Alternate Domain Names에는 bkshin.com을 입력해줍니다. SSL Certificate에서는 'Request or Import a Certificate with ACM'를 누릅니다. 도메인 이름은 'bkshin.com'으로 하고 다음을 누릅니다. DNS 검증을 클릭한 뒤 '확인 및 요청'을 누르면 '검증 보류'라고 뜰 겁니다. 도메인 왼쪽의 화살표를 클릭한 뒤 'Router 53에서 레코드 생성'을 클릭합니다.\\u003c/p\\u003e\\n\\u003cp\\u003e다시 Cloudfront Distribution Settings로 돌아와서 SSL Certificate에서 Custom SSL Certificate를 클릭합니다. 아래의 URL은 bkshin.com을 선택합니다. Default Root Object에는 index.html을 입력해줍니다. 이제 Create Distribution을 해줍니다.\\u003c/p\\u003e\\n\\u003cp\\u003e이제 Route 53에서 Create Record Set을 해준 뒤 Name은 실제 도메인 (bkshin.com), Type은 A-IPv4 address, Alias: Yes를 누른 뒤 바로 아래에는 Cloudfront distribution에서 ID를 클릭했을 때 나오는 Domain name을 입력합니다. 그 다음 Create을 클릭합니다. (현재 EC2랑 도메인이 연결되어있으면 중복이기 때문에 안됨)\\u003c/p\\u003e\\n\\u003cp\\u003e이제 도메인에 bkshin.com을 치고 들어가면 \\u0026quot;Hello, world!\\u0026quot;가 보일 겁니다. 이는 아까 S3에 넣어준 index.html 파일이 뜬 것입니다. 지금은 index.html만 들어있지만 web_root 디렉토리 전체를 넣어주어 S3에 블로그를 띄울 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e\\u003c참고!\\u003e\\u003c/strong\\u003e EC2서버도 살려두기 위해서는 live.bkshin.com은 EC2, 서버, bkshin.com은 S3로 연결하면 됩니다. Route53에서 새로운 Record를 생성하고 (Create Record Set) NAme에 live.bkshin.com으로 설정하고 Alias는 Yes, Value에는 EC2 IP 주소를 넣어주고 저장하면 됩니다. 그럼 현재 상태에서는 live.bkshin.com으로 들어가면 블로그가 뜰 것이고, bkshin.com으로 들어가면 \\u0026quot;Hello, world!\\u0026quot;가 뜰 것입니다. 또한, www.bkshin.com도 bkshin.com과 같이 추가해주면 좋습니다. bkshin.com과 www.bkshin.com 모두 S3를 통해 웹페이지를 띄웁니다. 이를 위해서는 bkshin.com을 위한 S3 버킷과 www.bkshin.com을 위한 S3 버킷을 각각 만들어야 합니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"aws-iam-생성\\\"\\u003eAWS IAM 생성\\u003c/h3\\u003e\\n\\u003cp\\u003eIAM이란 Identity and Access Management의 약자로 AWS에 안전하게 접근하게 해줍니다. AWS 계정을 처음 만들면 메일주소와 비밀번호로 되어있는 루트 사용자가 만들어집니다. 모든 AWS 서비스를 이 루트 사용자로 이용하게 됩니다. AWS 가이드에서는 아주 간단한 작업에서 조차 루트 사용자를 사용하지 말라고 권장합니다. 따라서 IAM을 통해 AWS에 안전하게 접근하도록 할 것입니다. \\u003ca href=\\\"https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/introduction.html\\\"\\u003e(Referecne1)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e우선, AWS IAM 사용자를 추가해줍니다. (사용자 이름 입력, 액세스 유형: 프로그래밍 방식 엑세스 선택, 기존 정책 직접 연결에서 CloudfrontFullAccess와 AmazonS3FullAccess 선택) 사용자를 만들어주면 액세스 키 ID와 비밀 액세스 키가 생성됩니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"shell-script를-활용한-s3-deploy\\\"\\u003eShell Script를 활용한 S3 Deploy\\u003c/h3\\u003e\\n\\u003cp\\u003e이제, Shell Script를 활용하여 로컬의 작업물을 S3로 자동 Deploy할 것입니다. 우선, Terrace 디렉토리에서 \\u003ccode\\u003edeploy_to_S3.sh\\u003c/code\\u003e를 만든 뒤 아래와 같이 붙여넣습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003e# Deploy to S3\\ns3deploy -bucket bkshin.com -key ******** -secret *********** -region ap-northeast-2 -source web_root -v\\n# aws s3 cp web_root s3://bkshin.com/ --recursive\\n\\n# Invalidate Cloudfront\\naws cloudfront create-invalidation --distribution-id ******* \\\\\\n--paths /\\\\*\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 코드에서 \\u003ccode\\u003e-key\\u003c/code\\u003e와 \\u003ccode\\u003e- secret\\u003c/code\\u003e 옆의 ***** 부분에는 아까 IAM 사용자 추가할 때 만들어준 액세스키 ID와 비밀 액세스 키를 넣습니다. \\u003ccode\\u003e--distribution-id\\u003c/code\\u003e 에는 AWS Cloudfront에 있는 Distribution ID를 넣어주시면 됩니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e여기서 주의할 점은 deploy_to_S3.sh를 .gitignore에 추가해 github로 push가 되지 않도록 하는 것입니다.\\u003c/strong\\u003e github으로 푸쉬가 되면 액세스 ID와 비밀 키가 commit 이력에 남아서 S3를 삭제하고 다시 만들어줘야할 수도 있습니다. 실수로 deploy_to_S3.sh를 github에 push했는데, AWS에서 친절하게 경고 메일이 왔습니다. 해당 key를 가진 S3를 삭제하고, AWS 비번을 바꾸라고요.. 그렇게 해주니 안내한대로 잘 해줘서 고맙다는 메일까지 왔습니다. \\u003cstrong\\u003e역시 갓아마존..\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e이제, temp 디렉토리에 AWS CLI를 설치합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003epip install awscli\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e그 다음, terrace 디렉토리에 s3deploy를 설치해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ego get -u -v github.com/bep/s3deploy\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003es3deploy를 사용하기 위해서는 go/src 디렉토리에서 go build를 한 뒤 s3deploy 실행파일을 /usr/local/bin으로 옮겨야 합니다. 이는 s3deploy라는 실행파일을 어디서든 사용하기 위해서 입니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd\\ncd go/src/github.com/bep/s3deploy\\ngo build\\nsudo mv s3deploy /usr/local/bin\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이제 terrace 디렉토리로 돌아와 \\u003ccode\\u003e./deploy_to_S3.sh\\u003c/code\\u003e를 해주면 S3로 배포가 됩니다. 아까 live.bkshin.com도 설정해주었다면 이는 EC2로 연결된 것이고 bkshin.com은 S3로 연결된 것입니다. www.bkshin.com까지 추가해줬다면 shell script에 www.bkshin.com을 위한 코드도 동일하게 추가해줍니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"https로-redirect하기\\\"\\u003eHTTPS로 Redirect하기\\u003c/h3\\u003e\\n\\u003cp\\u003e\\u003ca href=\\\"https://serverlessrepo.aws.amazon.com/applications/arn:aws:serverlessrepo:us-east-1:621073008195:applications~standard-redirects-for-cloudfront\\\"\\u003e(Reference2)\\u003c/a\\u003e 본 링크로 들어가서 Deploy를 클릭합니다. 그 다음 맨 아래의 배포를 누릅니다. AWS IAM의 역할에 들어가 serverlessrepo를 누릅니다. 신뢰관계에서 신뢰관계 편집을 누른 뒤 Reference2에 있는 아래 코드를 그대로 붙여넣은 후 저장합니다.\\u003c/p\\u003e\\n\\u003cpre\\u003e\\u003ccode\\u003e{\\n  \\u0026quot;Version\\u0026quot;: \\u0026quot;2012-10-17\\u0026quot;,\\n  \\u0026quot;Statement\\u0026quot;: [\\n    {\\n      \\u0026quot;Effect\\u0026quot;: \\u0026quot;Allow\\u0026quot;,\\n      \\u0026quot;Principal\\u0026quot;: {\\n        \\u0026quot;Service\\u0026quot;: [\\n          \\u0026quot;lambda.amazonaws.com\\u0026quot;,\\n          \\u0026quot;edgelambda.amazonaws.com\\u0026quot;\\n        ]\\n      },\\n      \\u0026quot;Action\\u0026quot;: \\u0026quot;sts:AssumeRole\\u0026quot;\\n    }\\n  ]\\n}\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eCloudformation에서 serverlessrepo를 클릭한 후 출력에서 값을 그대로 복사합니다. Cloudfront Distribution 선택 후 Behaviors에서 Edit을 누른 뒤 Viewer Protocol Policy에서 Redirect HTTP to HTTPS를 선택합니다. 맨 아래 Lambda Function Associations에서 Viewer Request를 선택한 후 Lambda Function ARN에 방금 복사한 값을 그대로 붙여넣습니다. Yes, Edit을 클릭합니다.\\u003c/p\\u003e\\n\\u003cp\\u003e이제 인터넷 주소창에 bkshin.com을 치면 자동으로 https로 리다이렉션이 됩니다 !!\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/25/blog-s3DeployRedirect/\",\"date\":\"2019/02/25\"},{\"title\":\"BLOG - 13. 서버 시작프로그램\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/02/24/blog-serverStart/\",\"date\":\"2019/02/24\"},{\"title\":\"BLOG - 12. EC2 git Hook 설정\",\"author\":\"\\u003cstrong\\u003eAWS EC2 인스턴스 생성\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003e블로그 서비스를 구현하기 위해서는 서버가 필요합니다. 여기서는 AWS EC2를 활용할 것입니다. AWS EC2가 무엇인지는 본 링크를 참고하시기 바랍니다. \\u003ca href=\\\"https://docs.aws.amazon.com/ko_kr/AWSEC2/latest/UserGuide/concepts.html\\\"\\u003e(Reference1)\\u003c/a\\u003e 쉽게 말하자면 EC2는 가상의 컴퓨팅 파워를 제공합니다. 어떤 프로그램을 돌리기 위해서는 컴퓨터가 필요합니다. (\\u003cem\\u003e당연한 말이지만..\\u003c/em\\u003e) 언제 어디서든 블로그에 접속하기 위해서는 24시간 돌아가는 컴퓨터 (서버)가 필요하며, 이 컴퓨터(서버)에 블로그 서비스가 구축되어 있어야 합니다. 이를 위해 물리적인 서버 컴퓨터를 활용할 수도 있지만 비쌉니다. 저렴한 가격에 물리적인 제약없이도 컴퓨팅 파워를 제공받을 수 있는 곳이 바로 AWS입니다. AWS에는 다양한 서비스가 있지만 그 중 EC2를 활용할 것입니다. (추후에는 S3도 사용할 예정입니다.)\\u003c/p\\u003e\\n\\u003cp\\u003e우선, aws.amazon.com에 접속해 AWS 계정을 생성한 뒤 EC2 인스턴스를 생성합니다. 이때 리전은 서울로 설정해야합니다. 인스턴스 생성시 아래 사항 순으로 선택합니다.\\u003c/p\\u003e\\n\\u003col type=\\\"1\\\"\\u003e\\n\\u003cli\\u003eAMI선택: Amazon Linux Amazon Linux 2 AMI (HVM), SSD Volume Type\\u003cbr /\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e인스턴스 유형 선택: t2 micro (프리 티어 사용 가능)\\u003cbr /\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e(인스턴스 구성 ~ 태그 추가까지는 그냥 넘어가고)\\u003cbr /\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e보안 그룹 구성: 규칙 추가를 눌러 HTTP, HTTPS, SSH를 추가해줍니다. (HTTP 포트는 80, 소스는 default 값인 0.0.0.0/0, ::/0, HTTPS 포트는 443, 소스는 default 값인 0.0.0.0/0, ::/0, SSH 포트는 22, 소스는 default 값인 0.0.0.0/0, ::/0)\\u003cbr /\\u003e\\u003c/li\\u003e\\n\\u003cli\\u003e새 키 페어 생성 및 키 페어 다운로드 후 인스턴스 시작을 합니다. (키 페이 이름은 알아서 정하면 되고, 저는 temp.pem으로 생성했습니다.)\\u003c/li\\u003e\\n\\u003c/ol\\u003e\\n\\u003ch3 id=\\\"putty로-ec2-인스턴스에-접속\\\"\\u003ePuTTY로 EC2 인스턴스에 접속\\u003c/h3\\u003e\\n\\u003cp\\u003e.ssh 디렉토리에 키페어를 저장해두고 그 키페어를 이용해서 EC2 인스턴스에 접속할 것입니다. 홈 디렉토리에서\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003echmod 700 .ssh\\ncd .ssh\\nv temp.pem # 각자의 키페어 이름으로\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003etemp.pem에 아까 다운받았던 키페어를 그대로 복사 붙여넣기 합니다. 내 PC에 있는 temp.pem을 그냥 열면 열리지 않기 때문에 Visual Studio Code나 메모장 등으로 열어서 전체를 복사 붙여넣기 하면 됩니다. 키페어는 \\u003ccode\\u003e-----BEGIN RSA PRIVATE KEY-----\\u003c/code\\u003e 로 시작하는 부분부터 끝까지 전체를 그대로 복사해야합니다. 한글자라도 틀리거나 스페이스라도 틀리면 인식을 못합니다.\\u003c/p\\u003e\\n\\u003cp\\u003e키페어의 권한도 변경합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003echmod 400 temp.pem\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e다시 홈 디렉토리로 가서 ec2로 접속을 합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003essh ec2-user@13.125.232.34 -i ~/.ssh/temp.pem\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e\\u003cspan class=\\\"citation\\\" data-cites=\\\"뒤의\\\"\\u003e@뒤의\\u003c/span\\u003e IP 주소는 EC2인스턴스 창 하단에 IPv4 퍼블릭 IP에서 볼 수 있습니다. '내가 만든 AWS EC2 인스턴스 IP에 ssh로 접속하는데 키페어는 temp.pem을 사용하겠다'라는 뜻입니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/02/18/12_1.PNG\\\" alt=\\\"AWS EC2 접속\\\" /\\u003e\\u003cfigcaption\\u003eAWS EC2 접속\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003e이런 화면이 뜨면 정상적으로 접속이 된 겁니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"ec2-git-계정-생성\\\"\\u003eEC2 git 계정 생성\\u003c/h3\\u003e\\n\\u003cp\\u003eAWS EC2 git 계정을 생성해보겠습니다. \\u003ccode\\u003euseradd\\u003c/code\\u003e를 통해 새로운 계정을 생성해줄 수 있습니다. \\u003ca href=\\\"https://rootblog.tistory.com/2\\\"\\u003e(Reference2)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo useradd -m -s /usr/bin/git-shell git\\nsudo vi /etc/sudoers\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003esudoers에 NOPASSWD를 추가해줍니다. 이는 패스워드 없이 sudo를 쓸 수 있도록 합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003egit ALL=(ALL) NOPASSWD: ALL\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo -u git bash\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 명령어는 bash로 git 계정에 들어가겠다는 뜻입니다. NOPASSWD 설정을 해줬기 때문에 패스워드 없이도 sudo가 작동합니다.\\u003c/p\\u003e\\n\\u003cp\\u003e그 다음, EC2 루트 계정에 있는 authorized_keys를 git 계정으로 옮깁니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd\\nmkdir .ssh\\nchmod 700 .ssh\\ncd .ssh\\nsudo cp /home/ec2-user/.ssh/authorized_keys .\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003ch3 id=\\\"git-hook-설정\\\"\\u003eGit Hook 설정\\u003c/h3\\u003e\\n\\u003cp\\u003e이제 Git hook을 설정해줄 것입니다. Git hook은 Git 으로 어떤 이벤트가 push되면 특정 스크립트가 실행되도록 합니다. \\u003ca href=\\\"https://git-scm.com/book/ko/v1/Git%EB%A7%9E%EC%B6%A4-Git-%ED%9B%85\\\"\\u003e(Reference3)\\u003c/a\\u003e\\u003cbr /\\u003eterrace 디렉토리에서 \\u003ccode\\u003ecd .git/hooks/\\u003c/code\\u003e를 치면 여러 sample hook들이 보일 겁니다. 예를 들어 pre-commit은 커밋 직전에 실행되는 hook이라는 뜻입니다. .sample을 지워주면 바로 실행이 가능합니다. 각 hook들이 어떤 기능을 하는지는 \\u003ca href=\\\"https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks\\\"\\u003e(Reference4)\\u003c/a\\u003e를 참고해주시기 바랍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003els\\ncd ..\\nmkdir terrace_hook\\ncd terrace_hook/\\n# git 설치\\nsudo yum -y install git\\n# 워킹 디렉토리가 없는 빈 저장소\\ngit init --bare\\nls -al\\ncd hooks\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003egit init --bare\\u003c/code\\u003e은 워킹 디렉토리가 없는 빈 저장소를 만듭니다. \\u003ca href=\\\"https://git-scm.com/book/ko/v1/Git-%EC%84%9C%EB%B2%84-%EC%84%9C%EB%B2%84%EC%97%90-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0\\\"\\u003e(Reference5)\\u003c/a\\u003e hooks 디렉토리를 보면 hook과 관련된 각종 샘플을 볼 수 있습니다. 우리는 post-receive라는 hook을 새로 만들어 줄 것입니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003etouch post-receive\\n# post-receive에 실행 권한 추가\\nchomod +x post-receive\\nls -al\\nvi post-receive\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003epost-receive란 EC2 git push 후에 자동으로 실행되는 스크립트를 의미합니다. 본 프로젝트에서는 로컬의 작업물을 EC2 git으로 push하면 post-receive가 그 작업물을 빌드하고 서버를 재부팅해줄 것입니다. 아래 코드를 그대로 복사 붙여넣기 합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003e# Application Name:\\nexport DEPLOY_APP_NAME=`whoami`\\n\\n# This is the root deploy dir.\\nexport DEPLOY_ROOT=\\u0026quot;${HOME}/terrace_deploy\\u0026quot;\\n\\n# When receiving a new git push, the received branch gets compared to this one.\\n# If you do not need this, just add a comment\\nexport DEPLOY_ALLOWED_BRANCH=\\u0026quot;master\\u0026quot;\\n\\n# You could use this to do a backup before updating to be able to do a quick rollback.\\n# If you need this just delete the comment and modify to your needs\\n#PRE_UPDATE_CMD=\\u0026#39;cd ${DEPLOY_ROOT} \\u0026amp;\\u0026amp; backup.sh\\u0026#39;\\n\\n# Use this to do update tasks and maybe service restarts\\n# If you need this just delete the comment and modify to your needs\\nPOST_UPDATE_CMD=\\u0026#39;cd ${DEPLOY_ROOT} \\u0026amp;\\u0026amp; make update\\u0026#39;\\n\\nPROJECT_NAME=\\u0026#39;terrace\\u0026#39;\\nRESTART_CMD=\\u0026#39;sudo systemctl restart \\u0026quot;${PROJECT_NAME}.service\\u0026quot; \\u0026amp;\\u0026amp; sudo systemctl status \\u0026quot;${PROJECT_NAME}.service\\u0026quot;\\u0026#39;\\n\\n###########################################################################################\\n\\nexport GIT_DIR=\\u0026quot;$(cd $(dirname $(dirname $0));pwd)\\u0026quot;\\nexport GIT_WORK_TREE=\\u0026quot;${DEPLOY_ROOT}\\u0026quot;\\nIP=\\u0026quot;$(ip addr show eth0 | grep \\u0026#39;inet \\u0026#39; | cut -f2 | awk \\u0026#39;{ print $2}\\u0026#39;)\\u0026quot;\\n\\necho \\u0026quot;githook: $(date): Welcome to \\u0026#39;$(hostname -f)\\u0026#39; (${IP})\\u0026quot;\\necho\\n\\n# Make sure directory exists. Maybe its deployed for the first time.\\nmkdir -p \\u0026quot;${DEPLOY_ROOT}\\u0026quot;\\n\\n# Loop, because it is possible to push more than one branch at a time. (git push --all)\\nwhile read oldrev newrev refname\\ndo\\n\\n    export DEPLOY_BRANCH=$(git rev-parse --symbolic --abbrev-ref $refname)\\n    export DEPLOY_OLDREV=\\u0026quot;$oldrev\\u0026quot;\\n    export DEPLOY_NEWREV=\\u0026quot;$newrev\\u0026quot;\\n    export DEPLOY_REFNAME=\\u0026quot;$refname\\u0026quot;\\n\\n    if [ \\u0026quot;$DEPLOY_NEWREV\\u0026quot; = \\u0026quot;0000000000000000000000000000000000000000\\u0026quot; ]; then\\n        echo \\u0026quot;githook: This ref has been deleted\\u0026quot;\\n        exit 1\\n    fi\\n\\n    if [ ! -z \\u0026quot;${DEPLOY_ALLOWED_BRANCH}\\u0026quot; ]; then\\n        if [ \\u0026quot;${DEPLOY_ALLOWED_BRANCH}\\u0026quot; != \\u0026quot;$DEPLOY_BRANCH\\u0026quot; ]; then\\n            echo \\u0026quot;githook: Branch \\u0026#39;$DEPLOY_BRANCH\\u0026#39; of \\u0026#39;${DEPLOY_APP_NAME}\\u0026#39; application will not be deployed. Exiting.\\u0026quot;\\n            exit 1\\n        fi\\n    fi\\n\\n    if [ ! -z \\u0026quot;${PRE_UPDATE_CMD}\\u0026quot; ]; then\\n       echo\\n       echo \\u0026quot;githook: PRE UPDATE (CMD: \\u0026#39;${PRE_UPDATE_CMD}\\u0026#39;):\\u0026quot;\\n       eval $PRE_UPDATE_CMD || exit 1\\n    fi\\n\\n    # Make sure GIT_DIR and GIT_WORK_TREE is correctly set and \\u0026#39;export\\u0026#39;ed. Otherwhise\\n    # these two environment variables could also be passed as parameters to the git cli\\n    echo \\u0026quot;githook: I will deploy \\u0026#39;${DEPLOY_BRANCH}\\u0026#39; branch of the \\u0026#39;${DEPLOY_APP_NAME}\\u0026#39; project to \\u0026#39;${DEPLOY_ROOT}\\u0026#39;\\u0026quot;\\n    git checkout -f \\u0026quot;${DEPLOY_BRANCH}\\u0026quot; || exit 1\\n    git reset --hard \\u0026quot;$DEPLOY_NEWREV\\u0026quot; || exit 1\\n\\n    if [ ! -z \\u0026quot;${POST_UPDATE_CMD}\\u0026quot; ]; then\\n       echo\\n       echo \\u0026quot;githook: POST UPDATE (CMD: \\u0026#39;${POST_UPDATE_CMD}\\u0026#39;):\\u0026quot;\\n       eval $POST_UPDATE_CMD || exit 1\\n    fi\\n\\n    if [ ! -z \\u0026quot;${RESTART_CMD}\\u0026quot; ]; then\\n       echo\\n       echo \\u0026quot;githook: RESTART UPDATE (CMD: \\u0026#39;${RESTART_CMD}\\u0026#39;):\\u0026quot;\\n       eval $RESTART_CMD || exit 1\\n    fi\\n\\ndone\\n\\necho\\necho \\u0026quot;githook: $(date): See you soon at \\u0026#39;$(hostname -f)\\u0026#39; (${IP})\\u0026quot;\\nexit 0\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 코드를 저장한 후에 bash 창에서 아래와 같이 로그아웃해 로컬 계정으로 갑니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003eexit\\nlogout\\n# 로컬 계정에서\\ncd .ssh\\nv config\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003econfig 파일에 아래 코드를 넣어줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003eHost 13.125.232.34\\n    HostName 13.125.232.34\\n        IdentityFile ~/.ssh/temp.pem\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eIP 주소 및 키페어는 개별 EC2 IP 및 키페어를 넣어주면 됩니다. 그 다음 권한을변경해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003echmod 600 config\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이제는 \\u003ccode\\u003essh ec2-user@13.125.232.34\\u003c/code\\u003e만 해도 EC2로 접속이 됩니다. 설정해주기 전에는 \\u003ccode\\u003essh ec2-user@13.125.232.34 -i ~/.ssh/temp.pem\\u003c/code\\u003e을 통해 접속을 했는데 훨씬 간단해졌습니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/18/blog-ec2GitHook/\",\"date\":\"2019/02/18\"},{\"title\":\"BLOG - 11. Github 연결\",\"author\":\"지금까지 블로그 기본 뼈때를 만들고 빌드까지 했습니다. 추후에는 AWS를 통해서 블로그를 띄울 겁니다. 그에 앞서 본 챕터에서는 github에 연결하는 방법에 대해 배워볼 것입니다. github 연결법을 이미 알고 계신 분은 다음 챕터로 넘어가셔도 됩니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"github\\\"\\u003e\\u003cstrong\\u003eGithub\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003e우선 git은 github을 이용할 것입니다. github에 repository를 하나 생성합니다. terrace 디렉토리에서는 \\u003ccode\\u003e.gitignore\\u003c/code\\u003e에 \\u003ccode\\u003ebin\\u003c/code\\u003e을 추가해줍니다. \\u003ccode\\u003e.gitignore\\u003c/code\\u003e에 있는 디렉토리 혹은 파일은 git의 영향을 받지 않습니다.\\u003c/p\\u003e\\n\\u003cp\\u003e추가로 home 디렉토리 안에서 .gitignore에 아래 파일 및 폴더를 지정해줍니다.\\u003c/p\\u003e\\n\\u003cpre\\u003e\\u003ccode\\u003e.DS_Store\\nnode_modules\\n/dist\\n\\n# local env files\\n.env.local\\n.env.*.local\\n\\n# Log files\\nnpm-debug.log*\\nyarn-debug.log*\\nyarn-error.log*\\n\\n# Editor directories and files\\n.idea\\n.vscode\\n*.suo\\n*.ntvs*\\n*.njsproj\\n*.sln\\n*.sw*\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이제 git을 만들어줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003egit init\\ngit config --global user.name \\u0026quot;bkshin\\u0026quot;\\ngit config --global user.email \\u0026quot;werooring@gmail.com\\u0026quot;\\ngit add -A\\ngit commit\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e커밋 메시지는 \\u003ccode\\u003efirtst commit\\u003c/code\\u003e이라고 찍습니다. 다만 그 이후 commit은 \\u003ca href=\\\"https://www.huskyhoochu.com/issue-based-version-control-101\\\"\\u003e(Reference1)\\u003c/a\\u003e을 참고해서 작성하면 됩니다. 이론편뿐만 아니라 실전편까지 봐야합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003egit remote add origin git@github.com:BaekKyunShin/Terrace_example.git\\ngit push -u origin master\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이렇게 하면 publickey가 없다고 permission denied가 뜰 겁니다. git@github.com~ 부분이 SSH 주소입니다. Git SSH 공개키를 만들어야 push를 할 수 있습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003essh-keygen\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e을 해주고 passphrase 만 두번 입력해줍니다. 맨 처음 나오는 'Enter file in which to save the key'는 무시하고 엔터만 쳐도 됩니다. \\u003ccode\\u003e~/.ssh\\u003c/code\\u003e 디렉토리에서 id_rsa.pub가 생성된 걸 볼 수 있습니다. 이것이 publickey입니다. \\u003ca href=\\\"https://git-scm.com/book/ko/v1/Git-%EC%84%9C%EB%B2%84-SSH-%EA%B3%B5%EA%B0%9C%ED%82%A4-%EB%A7%8C%EB%93%A4%EA%B8%B0\\\"\\u003e(Reference2)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecat ~/.ssh/id_rsa.pub\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e를 치면 ssh-rsa로 시작하는 publickey가 나올 것입니다. 이것을 그대로 복사합니다. github 맨 오른쪽 위 메뉴를 클릭하고 settings을 누릅니다. 왼쪽 personal settings에서 SSH and GPG Keys를 누릅니다. New SSH Key를 클릭한 뒤 title을 자유롭게 설정하고 아래 Key에 방금 복사한 publickey 내용을 그대로 붙여넣기 한 뒤 저장합니다.\\u003cbr /\\u003epublickey를 등록했으니 이제 github으로 push 해봅시다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003egit push -u origin master\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003epassphrase를 치면 정상적으로 push가 되는 것을 볼 수 있습니다. 여기서 bin 디렉토리가 push되었다면 잘못된 것입니다. bin은 .gitinore에 추가가 되어있어야 하며 정상적으로 추가되었다면 bin은 push가 안 됩니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/02/17/11_1.PNG\\\" alt=\\\"github Repository\\\" /\\u003e\\u003cfigcaption\\u003egithub Repository\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/17/blog-githubPush/\",\"date\":\"2019/02/17\"},{\"title\":\"BLOG - 10. Shell Script, Makefile\",\"author\":\"\\u003cstrong\\u003eShell Script를 활용한 npm 빌드\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003e홈 디렉토리에서\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd terrace/frontend\\nvi update.sh\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eupdate.sh에 아래 코드를 추가하고 저장해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd home\\nnpm run build\\nrm –rf ../../web_root\\ncp –r dist ../../web_root\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 코드는 home 디렉토리로 들어가 빌드를 해준 뒤 기존의 web_root 디렉토리를 삭제해주고 빌드의 결과물이 담기는 dist 디렉토리를 다시 web_root로 카피하는 명령어입니다. 여기서 sh 파일은 shell script 파일입니다. shell script란 line by line의 코드를 자동으로 실행해주는 프로그램입니다. 즉, \\u003ccode\\u003e./update.sh\\u003c/code\\u003e를 해줘서 shell script를 실행해주면 위 4줄의 코드를 순차적으로 자동 실행됩니다. 여러 줄의 코드를 일일이 입력하는 게 번거로울 때 유용합니다. 이제 frontend 디렉토리에 있는 update.sh를 실행해보겠습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003e./update.sh\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003epermission denied가 뜰 겁니다. 권한 설정을 안 해줘서 그렇습니다. 아래와 같이 권한 설정을 변경합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003echmod 755 update.sh\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이제 \\u003ccode\\u003e./update.sh\\u003c/code\\u003e를 하면 자동으로 빌드가 되고 빌드 결과물이 web_root에 담길 겁니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"makefile를-활용한-루트-핸들러-빌드\\\"\\u003eMakefile를 활용한 루트 핸들러 빌드\\u003c/h3\\u003e\\n\\u003cp\\u003eMakefile은 shell script랑 비슷한 개념으로 보면 됩니다. 다만, Makefile은 변경된 사항만 반영해서 빠르게 실행을 해줍니다. 굉장히 많은 소스코드가 있다고 할 때 그 모든 코드를 하나 하나 컴파일 하려면 시간이 꽤 많이 들 것입니다. 변경된 소스코드만 알아서 컴파일 해준다면 훨씬 빠를 겁니다. 이럴 때 Makefile을 사용하는 것입니다. 아래는 Makefile 강좌에서 퍼온 make 유틸의 목적을 설명하는 글입니다. (20년도 더 된 강좌인데 수학의 정석, 성문 영어 같은 느낌이네요..)\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003eThe purpose of the \\u003cem\\u003emake\\u003c/em\\u003e utility is to determine automatically which pieces of a large program need to be recompiled, and issue the commands to recompile them.\\u003c/strong\\u003e \\u003ca href=\\\"https://wiki.kldp.org/KoreanDoc/html/GNU-Make/GNU-Make-1.html\\\"\\u003e(Reference1)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003enpm run serve\\u003c/code\\u003e에도 Makefile 개념이 있다고 보면 되는데, 처음 \\u003ccode\\u003enpm run serve\\u003c/code\\u003e를 할 땐 시간이 오래 걸리지만 한번 실행된 뒤에 변경 사항을 반영하는 것은 빠르게 처리됩니다.\\u003cbr /\\u003e\\u003cbr\\u003e 이제, terrace 디렉토리에서 Makefile을 만들어줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003evi Makefile\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cpre class=\\\"makefile\\\"\\u003e\\u003ccode\\u003erun:\\n    ./bin/terrace\\n\\nbuild:\\n    go build -x -o ./bin/terrace ./src\\n    sudo setcap CAP_NET_BIND_SERVICE=+eip ./bin/terrace\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 Makefile의 의미는 \\u003ccode\\u003emake run\\u003c/code\\u003e 을 하면 \\u003ccode\\u003e./bin/terrace\\u003c/code\\u003e가 실행되고, \\u003ccode\\u003emake build\\u003c/code\\u003e를 하면 아래 두 줄이 실행된다는 것입니다. 인자를 아무것도 안주고 \\u003ccode\\u003emake\\u003c/code\\u003e만 하면 맨 위에 있는 \\u003ccode\\u003emake run\\u003c/code\\u003e을 실행합니다. 위 코드를 그대로 복사 붙여넣기 하면 Makefile이 실행 안 될 수도 있습니다. Makefile에서 실행되는 코드는 반드시 TAB을 해줘야하는데 그대로 복사 붙여넣기 하면 TAB이 아니라 띄어쓰기로 인식할 수 있기 때문입니다. 반드시 ./bin/terrace 왼쪽 부분과 build: 아랫줄은 TAB을 해줘야 합니다.\\u003cbr /\\u003e\\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"makefile\\\"\\u003e\\u003ccode\\u003ego build -x -o ./bin/terrace ./src\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이 부분에서 -x는 build하는 과정에 대한 설명을 자세히 보여달라는 것입니다. -o는 output의 약자입니다. build 결과물인 실행 파일을 ./bin/terrace로 저장해달라는 것이고, ./src는 src 디렉토리에 있는 go 소스코드 (루트 핸들러가 들어 있는 main.go)를 읽어오는 부분입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e즉, src 디렉토리의 main.go를 빌드해서 ./bin/terrace 로 저장하라는 뜻입니다. 여기서는 \\u003ccode\\u003emake run\\u003c/code\\u003e하기 전에 \\u003ccode\\u003emake build\\u003c/code\\u003e부터 해줘야 합니다. 이전 글에서 설명한 것처럼 sudo 권한 없이 ./bin/terrace를 실행하기 위해서는 \\u003ccode\\u003esudo setcap CAP_NET_BIND_SERVICE=+eip ./bin/terrace\\u003c/code\\u003e을 해줘야 하기 때문입니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"최종-디렉토리-구성\\\"\\u003e최종 디렉토리 구성\\u003c/h3\\u003e\\n\\u003cp\\u003e최종적인 Project Directory는 아래와 같습니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e- terrace\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e    - bin\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e    - src\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e    - frontend\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e        - home\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e            - dist\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003cstrong\\u003e    - web_root\\u003c/strong\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003eterrace는 project root이며 Makefile도 있습니다.\\u003cbr /\\u003ebin에는 루트 핸들러 실행 파일인 terrace가 있습니다.\\u003cbr /\\u003esrc에는 루트 핸들러인 main.go 파일이 있습니다.\\u003cbr /\\u003efrontend 하위에 home이 있으며, npm 자동 빌드를 위한 update.sh도 있습니다.\\u003cbr /\\u003ehome 하위에는 빌드 결과물이 담기는 dist 디렉토리가 있으며, 앞으로 작업할 프론트 파일들이 담길 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e이제 로컬에서 해야할 기본적인 세팅은 끝났습니다. \\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/15/blog-shellMake/\",\"date\":\"2019/02/15\"},{\"title\":\"BLOG - 9. 웹서버 만든 후 빌드\",\"author\":\"\\u003cstrong\\u003e빌드하기\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003evue로 만든 소스코드를 아래와 같이 빌드합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd terrace/frontend/home\\nnpm run build\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e빌드란 해당 프로그램을 테스트하고 검사하여 배포하기 위해 수행하는 행위의 집합이라고 생각하시면 됩니다. \\u003ca href=\\\"https://github.com/jinyowo/JS-Calendar/wiki/**-Build%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C\\\"\\u003e(Reference1)\\u003c/a\\u003e 빌드의 결과물은 dist 디렉토리에 저장됩니다. 이를 배포를 위한 web_root 디렉토리로 카피하겠습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecp -r dist ../../web_root\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003ch3 id=\\\"root-handler-만들기\\\"\\u003eRoot Handler 만들기\\u003c/h3\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd ../../\\nmkdir src\\ncd src\\nv main.go\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003esrc 디렉토리에 Root Handler 기능을 하는 main.go라는 파일을 만듭니다. main.go에 아래 코드를 그대로 붙여넣기 하시면 됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"go\\\"\\u003e\\u003ccode\\u003epackage main\\n\\nimport (\\n    \\u0026quot;fmt\\u0026quot;\\n    \\u0026quot;io/ioutil\\u0026quot;\\n    \\u0026quot;log\\u0026quot;\\n    \\u0026quot;net/http\\u0026quot;\\n)\\n\\nconst (\\n  WebRoot = \\u0026quot;./web_root/\\u0026quot;\\n)\\n\\nfunc rootHandler(w http.ResponseWriter, r *http.Request) {\\n    // when request is root, send index.html\\n    // otherwise, send the file\\n\\n    log.Println(r.URL.Path)\\n\\n    path := r.URL.Path[len(\\u0026quot;/\\u0026quot;):]\\n\\n    source, err := ioutil.ReadFile(WebRoot + path)\\n    if err != nil {\\n        source, err = ioutil.ReadFile(WebRoot + path + \\u0026quot;/index.html\\u0026quot;)\\n        if err != nil {\\n            // Redirect to 404 page\\n            w.WriteHeader(http.StatusNotFound)\\n            fmt.Fprint(w, err)\\n            log.Println(\\u0026quot;(rootHandler) \\u0026quot;, err)\\n            return\\n        }\\n    }\\n\\n    // Set content type as css if required file\\u0026#39;s extension is css\\n    if len(path) \\u0026gt;= 4 \\u0026amp;\\u0026amp; path[len(path)-4:] == \\u0026quot;.css\\u0026quot; {\\n        w.Header().Set(\\u0026quot;Content-Type\\u0026quot;, \\u0026quot;text/css\\u0026quot;)\\n    }\\n\\n    fmt.Fprint(w, string(source))\\n    log.Println(\\u0026quot;(rootHandler) The requested file has been sent: \\u0026quot;, WebRoot+path)\\n}\\n\\nfunc main() {\\n    http.HandleFunc(\\u0026quot;/\\u0026quot;, rootHandler)\\n    log.Fatal(http.ListenAndServe(\\u0026quot;:80\\u0026quot;, nil))\\n}\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003emain.go를 간단히 설명드리겠습니다. 예를 들어, \\u003ccode\\u003er.URL.Path\\u003c/code\\u003e = \\u0026quot;/bookThinkBlog/2018/12/28/book-sapiens/\\u0026quot; 입니다. r은 클라이언트의 request (클라이언트에서 서버로 보내온 정보들)를 뜻하는 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003epath := r.URL.Path[len(\\u0026quot;/\\u0026quot;):]\\u003c/code\\u003e 이 코드를 지나면 \\u003ccode\\u003epath\\u003c/code\\u003e= \\u0026quot;bookThinkBlog/2018/12/28/book-sapiens/\\u0026quot; 이렇게 맨 앞 \\u0026quot;/\\u0026quot; 가 없어집니다.\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003esource\\u003c/code\\u003e= \\u0026quot;./web_root/bookThinkBlog/2018/12/28/book-sapiens/\\u0026quot; 가 될 것입니다. err가 없다면 바로 아래의 조건문은 건너뛸 것이고, err가 있다면 \\u003ccode\\u003esource\\u003c/code\\u003e=\\u0026quot;./web_root/bookThinkBlog/2018/12/28/book-sapiens/index.html\\u0026quot;이 될 것입니다. 이것마저 err가 있다면 404(Not Found)를 띄워주는 겁니다.\\u003c/p\\u003e\\n\\u003cp\\u003e아무 err가 없다면 \\u003ccode\\u003efmt.Fprint(w, string(source))\\u003c/code\\u003e 가 정상적으로 실행됩니다. Fprint는 파일에 쓰기 위한 용도이며, \\u003ccode\\u003estring(source)\\u003c/code\\u003e를 \\u003ccode\\u003ew\\u003c/code\\u003e에 써준다라는 의미입니다. \\u003ca href=\\\"http://brownbears.tistory.com/175\\\"\\u003e(Reference2)\\u003c/a\\u003e \\u003ccode\\u003ehttp.HandleFunc\\u003c/code\\u003e는 지정된 Path에 대해서 어떤 Request 핸들러를 사용할지를 지정해줍니다. 위 코드에서는 \\u0026quot;/\\u0026quot; Path에 대해 rootHandler 함수를 실행해준다는 뜻입니다. \\u003ccode\\u003ehttp.ListenAndServe\\u003c/code\\u003e는 80번 포트를 열고 클라언트의 request를 받아들여 새로운 Go 루틴에 작업을 할당해줍니다. 두번째 파라미터인 nil은 Default인 HTTP Request router를 사용한다는 뜻입니다. \\u003ca href=\\\"http://golang.site/go/article/111-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%9B%B9-%EC%84%9C%EB%B2%84-HTTP-%EC%84%9C%EB%B2%84\\\"\\u003e(Reference3)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e사실 main.go에 있는 function 하나 하나가 굉장히 추상화가 되어있습니다. 그렇기에 그냥 블랙박스라 생각하시고 어떤 기능을 하는지만 이해하셔도 무방할 것 같습니다. 브리핑을 해보자면, 유저가 URL 주소를 치면 웹 서버에 request를 보냅니다. 그 request를 받아 rootHandler를 돌려 source path를 responsewriter에 써주고 그 response를 사용자 브라우저에 띄워주는 것입니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"main.go-빌드하기\\\"\\u003emain.go 빌드하기\\u003c/h3\\u003e\\n\\u003cp\\u003emain.go가 있는 src 디렉토리에서 go build를 해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ego build main.go\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e그러면 결과물로 \\u003ccode\\u003emain\\u003c/code\\u003e이라는 실행 파일이 하나 생길 겁니다. 아래와 같이 몇 가지 조정을 하겠습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd ..\\nmv src/main .\\nmkdir bin\\nmv main bin\\ncd bin\\nmv main terrace\\ncd ..\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이제 terrace/bin 디렉토리에 terrace라는 go 파일이 담겨 있을 겁니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo ./bin/terrace \\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이렇게 하면 npm run serve 한 것과 같이 웹 서버를 띄울 수 있습니다. 다만 npm run serve는 8080포트지만, 위에 있는 main.go를 보면 80포트에서 listen을 하고 있기 때문에 localhost:8001을 해야 접속이 됩니다. (각자 포트포워딩 했던 포트로 들어가시면 됩니다.) terrace를 실행할 때 sudo를 붙이는 이유는 80이 low number port이기 때문입니다. (참고로 http는 80번 포트, https는 443번 포트, ssh는 22번 포트를 씁니다.)\\u003c/p\\u003e\\n\\u003cp\\u003e하지만, 매번 실행할 때마다 sudo를 붙인다면 해킹당할 시 모든 걸 잃을 수 있습니다. sudo로 실행한 것을 뺏기면 root 계정을 뺏긴 것이니까요. 그래서 아래와 같이 설정해주면 sudo를 붙이지 않아도 \\u003ccode\\u003e./bin/terrace\\u003c/code\\u003e가 실행 됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo setcap CAP_NET_BIND_SERVICE=+eip ./bin/terrace\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e하지만 사용자 계정을 뺏겨도 sudo를 통해 루트 권한을 얻을 수 있기 때문에 이 또한 안전하지는 않습니다. 추후에는 sudo 권한을 얻을 수 없는 web 계정을 통해 올려야할 것입니다. (지금은 개인 블로그이고, 중요한 정보가 담겼다거나 해킹의 위험도 없기 때문에 사용자 계정으로 하는 것입니다.) \\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/12/blog-webServer/\",\"date\":\"2019/02/12\"},{\"title\":\"BLOG - 8. Neovim 설정\",\"author\":\"\\u003cstrong\\u003eIUS-release.rpm 설치\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003ehome directory에서\\u003c/p\\u003e\\n\\u003cpre class=\\\"zsh\\\"\\u003e\\u003ccode\\u003esudo yum install -y https://centos7.iuscommunity.org/ius-release.rpm\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eIUS는 리눅스를 위한 Red-Hat Package Manager(RPM) 패키지를 제공하는 Community Project입니다. \\u003ca href=\\\"https://ius.io/\\\"\\u003e(Reference1\\u003c/a\\u003e)\\u003c/p\\u003e\\n\\u003ch3 id=\\\"파이썬-설치\\\"\\u003e파이썬 설치\\u003c/h3\\u003e\\n\\u003cp\\u003e본 블로그에서는 python을 사용하지 않습니다. 하지만 아래에서 설치할 Neovim을 사용하기 위해 python이 필요합니다. 파이썬은 아래와 같이 설치합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo yum install -y python36u python36u-libs python36u-devel python36u-pip\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e파이썬을 설치한 뒤 아래와 같이 조금 손을 봐줘야합니다. 위와 같이 파이썬을 받아오면 python2와 python3가 같이 받아집니다. python2와 python3가 같이 있는 상황에서 \\u003ccode\\u003epython\\u003c/code\\u003e을 부르면 python2가 불립니다. python3는 \\u003ccode\\u003epython3\\u003c/code\\u003e라고 명시를 해줘야 합니다. \\u003ccode\\u003epython\\u003c/code\\u003e을 불렀을 때 python3를 불러오기 위해 아래와 같이 손을 봐주는 것입니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ewhich python3.6\\ncd /usr/bin\\nsudo rm python3\\nsudo rm python\\nsudo rm pip \\nsudo cp python3.6 python3\\nsudo cp python2.7 python\\nsudo cp pip3.6 pip\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003ch3 id=\\\"neovim설치-및-권한-변경\\\"\\u003eNeovim설치 및 권한 변경\\u003c/h3\\u003e\\n\\u003cp\\u003eNeovim의 목적은 쉽게 말해서 vim보다 Color를 많이 지원해 \\u003cstrong\\u003e예쁜 코드 에디터\\u003c/strong\\u003e를 제공하기 위함입니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd\\ncd temp\\nwget https://github.com/neovim/neovim/releases/download/v0.3.1/nvim.appimage\\nchmod 755 nvim.appimage\\n./nvim.appimage --appimage-extract\\ncd squashfs-root\\nsudo mv usr/bin/nvim /usr/bin/nvim\\nsudo mv usr/share/nvim /usr/share/nvim\\nnvim\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이렇게 하면 Neovim이 실행되는 걸 볼 수 있습니다. \\u003ccode\\u003e--appimage-extract\\u003c/code\\u003e는 appimage의 콘텐츠를 추출하는 기능을 한다. \\u003ca href=\\\"https://github.com/AppImage/AppImageKit/wiki/Extracting-AppImages\\\"\\u003e(Reference2)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003e\\u003ccode\\u003echmod 755\\u003c/code\\u003e 에서 chmod는 \\u003cstrong\\u003ech\\u003c/strong\\u003eange \\u003cstrong\\u003emod\\u003c/strong\\u003ee 의 약자이며, 대상 파일과 디렉토리의 사용권한을 변경하는 명렁어입니다. 문자열 모드와 8진법 수 모드가 있는데 755는 8진법 수 모드를 사용한 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e755에서\\u003cbr /\\u003e첫번째 숫자(7) = user의 권한\\u003cbr /\\u003e두번째 숫자(5) = group의 권한\\u003cbr /\\u003e세번째 숫자(5) = other의 권한\\u003cbr /\\u003e을 뜻합니다.\\u003c/p\\u003e\\n\\u003cp\\u003e755 = rwxr-xr-x 로 풀어쓸 수 있습니다. r은 파일 읽기 = 4, w는 파일 쓰기 = 2, x는 파일 실행 = 1를 뜻합니다. 즉 755는 user는 읽고, 쓰고, 실행할 수 있고, group과 other은 읽고, 실행만 할 수 있다는 뜻입니다. 4 = 2^2, 2 = 2^1, 1 = 2^0이기 때문에 각각 4, 2, 1이고 8진법 수 모드라 하는 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e읽기, 쓰기, 실행이 가능하다고 할 때, r: 4, w:2, x:1이기 때문에 4+2+1 = 7이 되는 것이고, 읽기, 실행만 가능하다고 할 때는, r:4, x:1이기 때문에 4+1 = 5가 되는 것입니다. 이렇게 숫자의 조합으로 3자리를 표현하면 됩니다. \\u003ccode\\u003echmod 777\\u003c/code\\u003e은 모든 보안을 꺼버립니다. \\u003ca href=\\\"http://www.incodom.kr/Linux/%EA%B8%B0%EB%B3%B8%EB%AA%85%EB%A0%B9%EC%96%B4/chmod\\\"\\u003e(Reference3)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cp\\u003echmod로 권한을 변경하기 전 nvim.appimage의 권한은 아래와 같이 664입니다. (\\u003ccode\\u003els -al\\u003c/code\\u003e로 권한을 자세히 볼 수 있음)\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/02/11/8_1.PNG\\\" alt=\\\"권한설정 전 nvim.appimage\\\" /\\u003e\\u003cfigcaption\\u003e권한설정 전 nvim.appimage\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003e-rw-rw-r-- : 파일 접근 권한 분류 표기로, 처음 -는 파일 분류 타입을 뜻합니다. (파일 타입 : d 디렉토리, l(소문자 L) 링크 카운터, s 소켓, p 파이프, - 일반, c 특수문자, b 특수블럭)\\u003c/p\\u003e\\n\\u003cp\\u003e664이면 실행이 안되므로 아래와 같이 실행이 가능하게 755로 바꿔줬습니다. 또한, user말고 다른 사람은 파일 쓰기를 못하게 한 것입니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/02/11/8_2.PNG\\\" alt=\\\"권한설정 후 nvim.appimage\\\" /\\u003e\\u003cfigcaption\\u003e권한설정 후 nvim.appimage\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo mv usr/bin/nvim /usr/bin/nvim\\nsudo mv usr/share/nvim /usr/share/nvim\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 코드는 현재 temp/squashfs-root 디렉토리 안에 있는 nvim을 환경변수가 있는 곳으로 옮겨준다는 뜻입니다. nvim도 어디서든 사용할 수 있게 하는 명령어입니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"vundle-설치\\\"\\u003eVundle 설치\\u003c/h3\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd\\ngit clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eVundle은 vim + Bundle의 합성어로 vim의 플러그인을 통합 관리해주는 도구입니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"vim-config-설치\\\"\\u003eVim config 설치\\u003c/h3\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd ~/.config\\ngit clone https://github.com/hrzon/mjVimPack\\nmv mjVimPack nvim\\nnvim\\n# (enter, esc 후에)\\n:PluginInstall\\n:UpdateRemotePlugins\\n:q\\nnvim\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e명재선생님이 만들어 놓은 mjVimPack을 nvim으로 수정하고 실행하면 정상적으로 작동하는 것을 볼 수 있습니다. 이제 .zshrc에 아래 코드를 추가해줍니다. 그러면 nvim이 아니라 v라고만 쳐도 nvim을 실행시킬 수 있습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ealias v=\\u0026quot;nvim\\u0026quot;\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/11/blog-settingNeovim/\",\"date\":\"2019/02/11\"},{\"title\":\"BLOG - 7. Go 언어 설치\",\"author\":\"다른 언어를 사용해도 되지만 본 프로젝트에서는 Go 언어를 사용할 것입니다. Go 언어 설치를 위해서는 home directory에서\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003emkdir temp\\ncd temp\\nsudo yum -y install wget\\nwget https://dl.google.com/go/go1.11.4.linux-amd64.tar.gz\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003ewget으로 받아오는 go 버전은 계속 업그레이드가 될 수 있으므로 최신버전으로 설치합니다. golang 홈페이지에 들어가면 아래와 같이 Linux 최신버전을 볼 수 있습니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/02/10/7_1.PNG\\\" alt=\\\"golang 메인 홈페이지\\\" /\\u003e\\u003cfigcaption\\u003egolang 메인 홈페이지\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003ego를 다운받을 때 확장자가 tar.gz입니다. 이는 압축 확장자이며, 압축을 풀어 사용할 수 있습니다. 다운받은 go 아카이브의 압축을 아래와 같이 풉니다. \\u003ca href=\\\"http://sarghis.com/blog/468/\\\"\\u003e(Reference1)\\u003c/a\\u003e temp directory에서\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003etar -xzvf go1.11.4.linux-amd64.tar.gz\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo mv go /usr/local/\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003evi ~/.zshrc\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e아래처럼, 환경변수 $PATH를 추가시킵니다. 환경변수를 추가시킴으로써 go를 어떤 디렉토리에서도 실행할 수 있게 합니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003eexport PATH=/usr/local/go/bin:$PATH\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esource ~/.zshrc\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e$PATH는 환경 변수를 뜻합니다. 터미널에서 프로그램 명령어를 입력하면 $PATH 환경 변수에 저장된 디렉토리 목록에서 명령을 찾습니다. $PATH에 현재 나열된 목록을 확인하려면 아래와 같이 입력하면 됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003eecho $PATH\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e그러면 아래와 같이 콜론으로 구분된 디렉토리 목록이 반환됩니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003e/usr/local/go/bin:/usr/local/bin:/usr/bin:/home/bkshin/bin:/usr/local/sbin:/usr/sbin\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위에서 go 디렉토리도 추가했기 때문에 /usr/local/go/bin도 잘 추가된 것을 볼 수 있습니다. \\u003ca href=\\\"https://askubuntu.com/questions/551990/what-does-path-mean\\\"\\u003e(Reference2)\\u003c/a\\u003e 이제 아무 디렉토리에서나 \\u003ccode\\u003ego\\u003c/code\\u003e를 입력해주면 go가 잘 작동하는 할 것입니다.\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/02/10/blog-installGolang/\",\"date\":\"2019/02/10\"},{\"title\":\"BLOG - 6. 개발환경세팅 II\",\"author\":\"\\u003cstrong\\u003eNPM설치\\u003c/strong\\u003e\\u003c/h3\\u003e\\n\\u003cp\\u003eNPM(Node Package Manager)란 자바스크립트 기반의 패키지 매니저입니다. \\u003ca href=\\\"https://www.w3schools.com/nodejs/nodejs_npm.asp\\\"\\u003e(Reference1)\\u003c/a\\u003e 이름처럼 NPM은 Node.js로 만들어진 모듈을 웹에서 받아 설치하고 관리해주는 프로그램입니다. 사용자는 명령어를 통해 공개된 모듈을 설치하고 활용할 수 있습니다.\\u003c/p\\u003e\\n\\u003cp\\u003eNPM 및 vue-cli 3.0을 아래와 같이 설치할 수 있습니다. vue-cli를 통해 터미널에서 간단한 명령어로 프로젝트 디렉토리를 만들 수 있습니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo yum -y install npm\\nsudo npm install -g @vue/cli\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e(-g는 global의 약자이며, 다른 계정들에서도 사용할 수 있음)\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003evue --verison\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e을 치면 Node version을 업그레이드 하라는 경고 메시지가 나올 겁니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"npm-업그레이드\\\"\\u003eNPM 업그레이드\\u003c/h3\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo npm cache clean -f\\nsudo npm install -g n\\nsudo n stable\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위 코드로 NPM 업그레이드를 합니다. 우선, 강제로 캐시를 제거하고, n 모듈을 설치합니다. 마지막으로 n모듈을 사용하여 Node.js를 설치합니다. \\u003ca href=\\\"https://velopert.com/1351\\\"\\u003e(Reference2)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003evue --verison\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e을 치면 이제 정상적으로 verison 정보가 뜹니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"project-directory-구성\\\"\\u003eProject Directory 구성\\u003c/h3\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd\\nmkdir terrace\\ncd terrace\\nmkdir frontend\\nvue create home\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003eProject main directory(여기서는 terrace)를 만들고 그 하단에 frontend directory를 만든 뒤 vue를 create합니다. vue-cli가 home directory 하단에 자동으로 project directory를 만들어 줍니다. '기본 npm registry는 느리다고 더 빠른 installation을 하겠습니까?'라는 메시지가 뜨면 Yes를 해줍니다. 그 후 default (babel, eslint)를 선택해주고 설치합니다.\\u003c/p\\u003e\\n\\u003cp\\u003ehome directory로 들어가보면 아래와 같이 기본적인 project directory가 구성되어 있을 것입니다.\\u003c/p\\u003e\\n\\u003cul\\u003e\\n\\u003cli\\u003edist: 빌드 결과물이 담겨 있는 디렉토리입니다. \\u003ccode\\u003enpm run build\\u003c/code\\u003e 시 내용물이 담깁니다. 빌드에 대해서는 나중에 다시 설명하겠습니다.\\u003c/li\\u003e\\n\\u003cli\\u003enode_modules: npm 으로 설치한 것들이 담겨있는 폴더입니다. 용량이 꽤 크기 때문에 github에 올리면 안됩니다. (.gitignore에 추가)\\u003c/li\\u003e\\n\\u003cli\\u003epublic: 공용으로 접근 가능한 파일이 위치합니다. favicon, 블로그 아티클 등이 담깁니다.\\u003c/li\\u003e\\n\\u003cli\\u003esrc: vue 소스코드가 담깁니다.\\u003c/li\\u003e\\n\\u003c/ul\\u003e\\n\\u003cp\\u003e나머지 json이나 js파일은 직접 건들 건 아니기 때문에 신경쓰지 맙시다. \\u003ca href=\\\"http://vuejs.kr/vue/vue-cli/2018/01/27/vue-cli-3/\\\"\\u003e(Reference3)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd home\\nnpm run serve\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/01/28/6_1.PNG\\\" alt=\\\"App running\\\" /\\u003e\\u003cfigcaption\\u003eApp running\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003erun serve후에 위와 같이 뜨면 정상적으로 성공한 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003e이제 아래 명령어로 빌드를 해줍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003enpm run build\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003ebuild 결과물은 dist directory에 담깁니다.\\u003c/p\\u003e\\n\\u003ch3 id=\\\"http-server-설치\\\"\\u003ehttp-server 설치\\u003c/h3\\u003e\\n\\u003cp\\u003e로컬에서 만든 작업물을 웹 상에서 띄우기 위해서는 웹 서버가 필요합니다. 여기서는 http-server를 사용할 것이며, 웹 서버에 대한 이해가 부족하다면 \\u003ca href=\\\"https://developer.mozilla.org/ko/docs/Learn/Common_questions/What_is_a_web_server\\\"\\u003e(Reference4)\\u003c/a\\u003e 링크를 참고하시기 바랍니다.\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003ecd dist\\nsudo npm install –g http-server \\nhttp-server .\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e위와 같이 dist 디렉토리에 http-server를 설치합니다. http-server 옆에 .은 현재 디렉토리를 의미합니다. \\u003ca href=\\\"https://www.npmjs.com/package/http-server\\\"\\u003e(Reference5)\\u003c/a\\u003e\\u003c/p\\u003e\\n\\u003ch3 id=\\\"localhost-접속\\\"\\u003elocalhost 접속\\u003c/h3\\u003e\\n\\u003cp\\u003ehttp-server를 실행했기 때문에 인터넷을 켜서 주소창에 localhost:8881을 치면 Vue 기본 페이지가 떠야하는데 뜨질 않습니다. (localhost옆에 :8881은 호스트 포트를 의미함)\\u003c/p\\u003e\\n\\u003cp\\u003e이는 방화벽이 막혀있어서 그런 것입니다.\\u003c/p\\u003e\\n\\u003cp\\u003ehome directory에서 아래와 같이 포트에 방화벽을 열어줍니다. (8080, 80 등이 포트를 의미함)\\u003c/p\\u003e\\n\\u003cpre class=\\\"bash\\\"\\u003e\\u003ccode\\u003esudo firewall-cmd --zone=public --add-port=8080/tcp --permanent\\nsudo firewall-cmd --zone=public --add-port=80/tcp --permanent\\nsudo firewall-cmd --reload\\u003c/code\\u003e\\u003c/pre\\u003e\\n\\u003cp\\u003e이젠 http-server . 혹은 npm run serve를 한 뒤 localhost:8881로 접속하면 vue 기본 페이지가 뜹니다.\\u003c/p\\u003e\\n\\u003cfigure\\u003e\\n\\u003cimg src=\\\"https://cdn.bkshin.com/devRecord/2019/01/28/6_2.PNG\\\" alt=\\\"Vue 기본 페이지\\\" /\\u003e\\u003cfigcaption\\u003eVue 기본 페이지\\u003c/figcaption\\u003e\\n\\u003c/figure\\u003e\\n\\u003cp\\u003efrontend directory 안에서 vue-cli로 home project를 생성했습니다. home directory 밑에는 서버와 배포시스템이 추가됩니다. frontend directory 밑에는 문서 변환과 프리렌더링 프로그램이 추가될 것입니다. \\u003cstrong\\u003e드디어 눈에 보이는 무언가가 생겨났습니다!\\u003c/strong\\u003e\\u003cbr /\\u003e\\u003cbr\\u003e\\u003c/p\\u003e\\n\\u003ch2 id=\\\"reference\\\"\\u003eReference\",\"uri\":\"/devRecordBlog/2019/01/28/blog-setting2/\",\"date\":\"2019/01/28\"},{\"title\":\"BLOG - 5. 개발환경세팅 I\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/01/24/blog-setting1/\",\"date\":\"2019/01/24\"},{\"title\":\"BLOG - 4. PuTTY로 가상환경 접속\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/01/23/blog-puttyConnection/\",\"date\":\"2019/01/23\"},{\"title\":\"BLOG - 3. 네트워크 포트포워딩\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/01/22/blog-portForwarding/\",\"date\":\"2019/01/22\"},{\"title\":\"BLOG - 2. 네트워크 연결 및 커널\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/01/21/blog-network/\",\"date\":\"2019/01/21\"},{\"title\":\"BLOG - 1. 가상환경 설치 및 실행\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2019/01/20/blog-CentOS/\",\"date\":\"2019/01/20\"},{\"title\":\"첫 글\",\"author\":\"myself\",\"uri\":\"/devRecordBlog/2018/12/12/thanks-to/\",\"date\":\"2018/12/12\"}] // __INSERTION_POSITION_END__ // DONT CHANGE!!\n,\n    year : this.$route.params.year2,\n    month : this.$route.params.month2,\n    day : this.$route.params.day2,\n    title : this.$route.params.title2,\n    articleHtmlSource : \"\",\n    address : \"\",  // will have a permalink of the article\n    domain : \"https://bkshin.com/devRecordBlog\",\n    }\n  },\n  watch: {\n    '$route' (to) {\n      this.year = to.params.year2;\n      this.month = to.params.month2;\n      this.day = to.params.day2;\n      this.title = to.params.title2;\n      this.getPage();\n    }\n  }\n\n}\n\n</script>\n\n<style scoped>\n#blog {\n  min-height: 300px;\n  margin: auto;\n  margin-bottom: 50px;\n}\n\n.blog-list-element {\n  max-width: 330px;\n  font-size: 1.05em;\n  text-align: left;\n  margin: auto;\n}\n\n.blog-contents-element {\n  text-align: left;\n  font-size: 1.05em;\n  max-width: 800px;\n}\n\n.blog-title {\n  color: #8a300f; \n  font-size: 1.05em;\n  text-align: left;\n}\n\n.blog-date {\n  font-size: 0.8em;\n  color: #9F9EA2;\n\tfloat: right;\n\tmargin-top: 4px;\n}\n\n.separate-line {\n  margin-top: 11px;\n  margin-bottom: 11px;\n  border: 0;\n  height: 1px;\n  background: #f2f2f2;\n}\n\n.inner-title-container {\n  text-align: center;\n  text-decoration: none;\n}\n\n.inner-title-container > h1 {\n  margin-top: 30px;\n  margin-bottom: 10px;\n}\n\n#article-content {\n  text-align: left;\n  font-size: 1.1em;\n  line-height: 1.8em;\n}\n\n#inner-date {\n  color: #8a300f;\n  font-size: 0.9em;\n  margin-bottom: 40px;\n}\n\na {\n  text-decoration: none;\n}\n\na:hover {\n  color: #b84014;\n}\n\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevRecordBlog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./DevRecordBlog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./DevRecordBlog.vue?vue&type=template&id=22e25c9b&scoped=true&\"\nimport script from \"./DevRecordBlog.vue?vue&type=script&lang=js&\"\nexport * from \"./DevRecordBlog.vue?vue&type=script&lang=js&\"\nimport style0 from \"./DevRecordBlog.vue?vue&type=style&index=0&id=22e25c9b&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"22e25c9b\",\n  null\n  \n)\n\ncomponent.options.__file = \"DevRecordBlog.vue\"\nexport default component.exports","module.exports = function(hljs) {\n  return {\n    aliases: ['console'],\n    contains: [\n      {\n        className: 'meta',\n        begin: '^\\\\s{0,3}[\\\\w\\\\d\\\\[\\\\]()@-]*[>%$#]',\n        starts: {\n          end: '$', subLanguage: 'bash'\n        }\n      }\n    ]\n  }\n};","module.exports = function(hljs) {\n  var FILTER = {\n    begin: /\\|[A-Za-z]+:?/,\n    keywords: {\n      name:\n        'truncatewords removetags linebreaksbr yesno get_digit timesince random striptags ' +\n        'filesizeformat escape linebreaks length_is ljust rjust cut urlize fix_ampersands ' +\n        'title floatformat capfirst pprint divisibleby add make_list unordered_list urlencode ' +\n        'timeuntil urlizetrunc wordcount stringformat linenumbers slice date dictsort ' +\n        'dictsortreversed default_if_none pluralize lower join center default ' +\n        'truncatewords_html upper length phone2numeric wordwrap time addslashes slugify first ' +\n        'escapejs force_escape iriencode last safe safeseq truncatechars localize unlocalize ' +\n        'localtime utc timezone'\n    },\n    contains: [\n      hljs.QUOTE_STRING_MODE,\n      hljs.APOS_STRING_MODE\n    ]\n  };\n\n  return {\n    aliases: ['jinja'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      hljs.COMMENT(/\\{%\\s*comment\\s*%}/, /\\{%\\s*endcomment\\s*%}/),\n      hljs.COMMENT(/\\{#/, /#}/),\n      {\n        className: 'template-tag',\n        begin: /\\{%/, end: /%}/,\n        contains: [\n          {\n            className: 'name',\n            begin: /\\w+/,\n            keywords: {\n              name:\n                'comment endcomment load templatetag ifchanged endifchanged if endif firstof for ' +\n                'endfor ifnotequal endifnotequal widthratio extends include spaceless ' +\n                'endspaceless regroup ifequal endifequal ssi now with cycle url filter ' +\n                'endfilter debug block endblock else autoescape endautoescape csrf_token empty elif ' +\n                'endwith static trans blocktrans endblocktrans get_static_prefix get_media_prefix ' +\n                'plural get_current_language language get_available_languages ' +\n                'get_current_language_bidi get_language_info get_language_info_list localize ' +\n                'endlocalize localtime endlocaltime timezone endtimezone get_current_timezone ' +\n                'verbatim'\n            },\n            starts: {\n              endsWithParent: true,\n              keywords: 'in by as',\n              contains: [FILTER],\n              relevance: 0\n            }\n          }\n        ]\n      },\n      {\n        className: 'template-variable',\n        begin: /\\{\\{/, end: /}}/,\n        contains: [FILTER]\n      }\n    ]\n  };\n};","module.exports = function(hljs) {\n  var VAR = {\n    className: 'variable',\n    variants: [\n      {begin: /\\$[\\w\\d#@][\\w\\d_]*/},\n      {begin: /\\$\\{(.*?)}/}\n    ]\n  };\n  var QUOTE_STRING = {\n    className: 'string',\n    begin: /\"/, end: /\"/,\n    contains: [\n      hljs.BACKSLASH_ESCAPE,\n      VAR,\n      {\n        className: 'variable',\n        begin: /\\$\\(/, end: /\\)/,\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n  var APOS_STRING = {\n    className: 'string',\n    begin: /'/, end: /'/\n  };\n\n  return {\n    aliases: ['sh', 'zsh'],\n    lexemes: /\\b-?[a-z\\._]+\\b/,\n    keywords: {\n      keyword:\n        'if then else elif fi for while in do done case esac function',\n      literal:\n        'true false',\n      built_in:\n        // Shell built-ins\n        // http://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n        'break cd continue eval exec exit export getopts hash pwd readonly return shift test times ' +\n        'trap umask unset ' +\n        // Bash built-ins\n        'alias bind builtin caller command declare echo enable help let local logout mapfile printf ' +\n        'read readarray source type typeset ulimit unalias ' +\n        // Shell modifiers\n        'set shopt ' +\n        // Zsh built-ins\n        'autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles ' +\n        'compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate ' +\n        'fc fg float functions getcap getln history integer jobs kill limit log noglob popd print ' +\n        'pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit ' +\n        'unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof ' +\n        'zpty zregexparse zsocket zstyle ztcp',\n      _:\n        '-ne -eq -lt -gt -f -d -e -s -l -a' // relevance booster\n    },\n    contains: [\n      {\n        className: 'meta',\n        begin: /^#![^\\n]+sh\\s*$/,\n        relevance: 10\n      },\n      {\n        className: 'function',\n        begin: /\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,\n        returnBegin: true,\n        contains: [hljs.inherit(hljs.TITLE_MODE, {begin: /\\w[\\w\\d_]*/})],\n        relevance: 0\n      },\n      hljs.HASH_COMMENT_MODE,\n      QUOTE_STRING,\n      APOS_STRING,\n      VAR\n    ]\n  };\n};"],"sourceRoot":""}